{"version":3,"file":"connectedComponents-svangerskapspengesoknad-Svangerskapspengesoknad-stories.7c34229b.iframe.bundle.js","mappings":"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","sources":["webpack://svangerskapspengesoknad/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://svangerskapspengesoknad/./src/common/storage/attachment/components/upload.svg","webpack://svangerskapspengesoknad/./src/app/components/ErrorBoundary/ErrorBoundary.tsx","webpack://svangerskapspengesoknad/./src/app/intl/IntlProvider.tsx","webpack://svangerskapspengesoknad/./src/app/Environment.ts","webpack://svangerskapspengesoknad/./src/app/api/api.ts","webpack://svangerskapspengesoknad/./src/app/redux/types/AttachmentAction.ts","webpack://svangerskapspengesoknad/./src/app/redux/reducers/attachmentReducer.ts","webpack://svangerskapspengesoknad/./src/app/redux/types/CommonAction.ts","webpack://svangerskapspengesoknad/./src/app/redux/reducers/commonReducer.ts","webpack://svangerskapspengesoknad/./src/app/redux/types/ApiAction.ts","webpack://svangerskapspengesoknad/./src/app/types/FetchState.ts","webpack://svangerskapspengesoknad/./src/app/redux/reducers/apiReducer.ts","webpack://svangerskapspengesoknad/./src/app/utils/normalizeName.ts","webpack://svangerskapspengesoknad/./src/app/types/AnnenInntekt.ts","webpack://svangerskapspengesoknad/./src/common/util/i18nUtils.ts","webpack://svangerskapspengesoknad/./src/app/utils/arbeidsforholdUtils.ts","webpack://svangerskapspengesoknad/./src/app/redux/sagas/apiSaga.ts","webpack://svangerskapspengesoknad/./src/common/storage/api/attachmentApi.ts","webpack://svangerskapspengesoknad/./src/app/redux/sagas/attachmentSaga.ts","webpack://svangerskapspengesoknad/./src/app/redux/sagas/index.ts","webpack://svangerskapspengesoknad/./src/app/redux/store.ts","webpack://svangerskapspengesoknad/./src/app/types/Søkerinfo.ts","webpack://svangerskapspengesoknad/./src/app/utils/fromFetchState.ts","webpack://svangerskapspengesoknad/./src/common/util/bem.ts","webpack://svangerskapspengesoknad/./src/common/components/aria/AriaText.tsx","webpack://svangerskapspengesoknad/./src/common/util/preventDoubleTapZoom.ts","webpack://svangerskapspengesoknad/./src/common/components/sirkelknapp/Sirkelknapp.tsx","webpack://svangerskapspengesoknad/./src/common/components/ikoner/LukkInfoIkon.tsx","webpack://svangerskapspengesoknad/./src/common/components/ikoner/InfoIkon.tsx","webpack://svangerskapspengesoknad/./src/common/components/infoboks/Infoboks.tsx","webpack://svangerskapspengesoknad/./src/common/components/label-med-infobox/LabelMedInfobox.tsx","webpack://svangerskapspengesoknad/./src/common/components/block/Block.tsx","webpack://svangerskapspengesoknad/./src/common/components/veileder/VeilederNormalSvg.tsx","webpack://svangerskapspengesoknad/./src/common/components/veileder/VeilederKompaktSvg.tsx","webpack://svangerskapspengesoknad/./src/common/components/veileder/Veileder.tsx","webpack://svangerskapspengesoknad/./src/common/components/snakkeboble/Snakkeboble.tsx","webpack://svangerskapspengesoknad/./src/common/components/person-med-snakkeboble/PersonMedSnakkeboble.tsx","webpack://svangerskapspengesoknad/./src/common/components/veileder-med-snakkeboble/VeilederMedSnakkeboble.tsx","webpack://svangerskapspengesoknad/./src/app/components/Feil.tsx","webpack://svangerskapspengesoknad/./src/app/types/Routes.ts","webpack://svangerskapspengesoknad/./src/app/types/SøknadStep.ts","webpack://svangerskapspengesoknad/./src/app/utils/validation/validateIntro.ts","webpack://svangerskapspengesoknad/./src/common/util/datoUtils.ts","webpack://svangerskapspengesoknad/./src/app/utils/validation/validateTermin.ts","webpack://svangerskapspengesoknad/./src/app/types/Tilrettelegging.ts","webpack://svangerskapspengesoknad/./src/app/utils/formatDate.ts","webpack://svangerskapspengesoknad/./src/app/utils/validation/validateTilrettelegging.ts","webpack://svangerskapspengesoknad/./src/app/utils/validation/validateOppsummering.ts","webpack://svangerskapspengesoknad/./src/app/utils/validation/validateSøknad.ts","webpack://svangerskapspengesoknad/./src/app/utils/stepUtils.ts","webpack://svangerskapspengesoknad/./src/app/types/Søker.ts","webpack://svangerskapspengesoknad/./src/app/types/Søknad.ts","webpack://svangerskapspengesoknad/./src/app/connectedComponents/formik-wrapper/FormikWrapper.tsx","webpack://svangerskapspengesoknad/./src/app/components/loading/Loading.tsx","webpack://svangerskapspengesoknad/./src/app/utils/tilretteleggingUtils.ts","webpack://svangerskapspengesoknad/./src/common/components/arbeidsforhold-infobox/InformasjonOmArbeidsforhold.tsx","webpack://svangerskapspengesoknad/./src/common/components/arbeidsforhold-infobox/InformasjonOmArbeidsforholdWrapper.tsx","webpack://svangerskapspengesoknad/./src/common/components/veileder-info/Veilederinfo.tsx","webpack://svangerskapspengesoknad/./src/app/formik/wrappers/VelgSøknadsgrunnlag.tsx","webpack://svangerskapspengesoknad/./src/common/components/skjema/elements/radio-panel-gruppe-responsive/RadioPanelGruppeResponsive.tsx","webpack://svangerskapspengesoknad/./src/app/utils/errorUtils.ts","webpack://svangerskapspengesoknad/./src/app/formik/wrappers/JaNeiSpørsmål.tsx","webpack://svangerskapspengesoknad/./src/common/components/list/List.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/ArbeidSeksjon/ArbeidSeksjon.tsx","webpack://svangerskapspengesoknad/./src/app/types/SelvstendigNæringsdrivende.ts","webpack://svangerskapspengesoknad/./src/common/components/skjema/elements/checkbox-panel-gruppe-responsive/CheckboksPanelGruppeResponsive.tsx","webpack://svangerskapspengesoknad/./src/app/formik/wrappers/CheckboksPanelGruppe.tsx","webpack://svangerskapspengesoknad/./src/app/formik/wrappers/InputField.tsx","webpack://svangerskapspengesoknad/./src/app/utils/getCountries.ts","webpack://svangerskapspengesoknad/./src/common/components/skjema/elements/dato-input/DatoInput.tsx","webpack://svangerskapspengesoknad/./src/common/components/skjema/elements/dato-input/datoInputDescription.ts","webpack://svangerskapspengesoknad/./src/app/formik/wrappers/DatoInput.tsx","webpack://svangerskapspengesoknad/./src/app/formik/wrappers/Textarea.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/SelvstendigNæringsdrivende/VarigEndringAvNæringsinntekt.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/SelvstendigNæringsdrivende/Næringsrelasjon.tsx","webpack://svangerskapspengesoknad/./src/app/formik/wrappers/Select.tsx","webpack://svangerskapspengesoknad/./src/app/utils/validation/utils/mod11.ts","webpack://svangerskapspengesoknad/./src/app/utils/validation/utils/organisasjonsnummer.ts","webpack://svangerskapspengesoknad/./src/app/types/Valideringsfeil.ts","webpack://svangerskapspengesoknad/./src/app/utils/validation/validateSelvstendigNæringsdrivende.ts","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/utils/cleanup.ts","webpack://svangerskapspengesoknad/./src/common/components/layout/datoerInputLayout/DatoerInputLayout.tsx","webpack://svangerskapspengesoknad/./src/common/components/knapperad/Knapperad.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/SelvstendigNæringsdrivende/SelvstendigNæringsdrivende.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/utils/visibility.ts","webpack://svangerskapspengesoknad/./src/app/formik/wrappers/RadioPanelGruppe.tsx","webpack://svangerskapspengesoknad/./src/common/components/custom-svg/CustomSVG.tsx","webpack://svangerskapspengesoknad/./src/common/storage/attachment/components/AttachmentInput.tsx","webpack://svangerskapspengesoknad/./src/common/components/ikoner/TrashcanIkon.tsx","webpack://svangerskapspengesoknad/./src/common/components/slett-knapp/SlettKnapp.tsx","webpack://svangerskapspengesoknad/./src/common/util/filesize.ts","webpack://svangerskapspengesoknad/./src/common/components/ikoner/VedleggIkon.tsx","webpack://svangerskapspengesoknad/./src/common/storage/attachment/components/Attachment.tsx","webpack://svangerskapspengesoknad/./src/common/storage/attachment/components/AttachmentList.tsx","webpack://svangerskapspengesoknad/./src/common/components/labeltekst/Labeltekst.tsx","webpack://svangerskapspengesoknad/./src/common/storage/attachment/types/Attachment.ts","webpack://svangerskapspengesoknad/./src/common/storage/attachment/components/util.ts","webpack://svangerskapspengesoknad/./src/common/components/alertstripe-content/AlertstripeWithCloseButton.tsx","webpack://svangerskapspengesoknad/./src/common/storage/attachment/components/AttachmentOverview.tsx","webpack://svangerskapspengesoknad/./src/common/storage/attachment/types/AttachmentType.ts","webpack://svangerskapspengesoknad/./src/app/types/Skjemanummer.ts","webpack://svangerskapspengesoknad/./src/app/utils/validation/validateAndreInntekter.ts","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/AndreInntekter/AndreInntekter.tsx","webpack://svangerskapspengesoknad/./src/app/utils/validation/validateFrilansoppdrag.ts","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/Frilans/FrilansOppdrag.tsx","webpack://svangerskapspengesoknad/./src/common/components/interactive-list-element/Pencil.tsx","webpack://svangerskapspengesoknad/./src/common/components/interactive-list-element/InteractiveListElement.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/Frilans/FrilansListElement.tsx","webpack://svangerskapspengesoknad/./src/common/components/info-block/InfoBlock.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/Frilans/FrilansSpørsmålInfoBoksTekst.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/Frilans/FrilansSpørsmål.tsx","webpack://svangerskapspengesoknad/./src/common/components/back-button/BackButton.tsx","webpack://svangerskapspengesoknad/./src/common/lib/validation/errors/Feiloppsummering.tsx","webpack://svangerskapspengesoknad/./src/app/components/validation-error-summary/ValidationErrorSummary.tsx","webpack://svangerskapspengesoknad/./src/app/components/step/Step.tsx","webpack://svangerskapspengesoknad/./src/app/hooks/useFormikSubmit.ts","webpack://svangerskapspengesoknad/./src/app/components/formik-step/FormikStep.tsx","webpack://svangerskapspengesoknad/./src/app/components/søknadstittel/Søknadstittel.tsx","webpack://svangerskapspengesoknad/./src/common/components/flags/UKFlagSVG.tsx","webpack://svangerskapspengesoknad/./src/common/components/flags/NorwayFlagSVG.tsx","webpack://svangerskapspengesoknad/./src/common/components/language-toggle/LanguageToggle.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/applikasjonsside/Applikasjonsside.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/SelvstendigNæringsdrivende/SelvstendigListElement.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/AndreInntekter/AnnenInntektListElement.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/utils/søknadsgrunnlagMapper.ts","webpack://svangerskapspengesoknad/./src/app/components/utvidet-informasjon/InfoToggler.tsx","webpack://svangerskapspengesoknad/./src/app/components/utvidet-informasjon/EkspanderbartInnhold.tsx","webpack://svangerskapspengesoknad/./src/app/components/utvidet-informasjon/UtvidetInformasjon.tsx","webpack://svangerskapspengesoknad/./src/app/components/info-til-fiskere/InfoTilFiskere.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/arbeidsforhold/Arbeidsforhold.tsx","webpack://svangerskapspengesoknad/./src/app/formik/wrappers/BekreftCheckboksPanel.tsx","webpack://svangerskapspengesoknad/./src/app/components/dine-personopplysninger-modal/DinePersonopplysningerModal.tsx","webpack://svangerskapspengesoknad/./src/app/components/dine-plikter-modal/DinePlikterModal.tsx","webpack://svangerskapspengesoknad/./src/app/icons/DocumentIkon.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/intro/Intro.tsx","webpack://svangerskapspengesoknad/./src/app/utils/søknadUtils.ts","webpack://svangerskapspengesoknad/./src/app/icons/MorGravidIkon.tsx","webpack://svangerskapspengesoknad/./src/app/icons/FlaskeIkon.tsx","webpack://svangerskapspengesoknad/./src/app/icons/KoffertIkon.tsx","webpack://svangerskapspengesoknad/./src/app/icons/KalenderIkon.tsx","webpack://svangerskapspengesoknad/./src/app/icons/PassIkon.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/OppsummeringIkon.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/Oppsummeringspunkt.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/OppsummeringBeskrivelse.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/tilrettelegging/TilretteleggingOppsummering.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/arbeidsforhold/DuHarSvartNeiListe.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/arbeidsforhold/components/InformasjonOmFrilans.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/arbeidsforhold/components/selvstendig/EndringSelvstendig.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/arbeidsforhold/components/selvstendig/RevisorSelvstendig.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/arbeidsforhold/components/selvstendig/RegnskapsførerSelvstendig.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/arbeidsforhold/components/selvstendig/DetaljerSelvstendig.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/arbeidsforhold/components/InformasjonOmSelvstendig.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/arbeidsforhold/components/InformasjonOmAndreInntekter.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/arbeidsforhold/ArbeidsforholdOppsummering.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/medlemskap/MedlemskapOppsummering.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/components/termin/TerminOppsummering.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/oppsummering/Oppsummering.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/søknad-sendt/components/StatusBoks.tsx","webpack://svangerskapspengesoknad/./src/common/components/ikoner/SpotlightLetter.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/søknad-sendt/util/pdfUtils.ts","webpack://svangerskapspengesoknad/./src/app/connectedComponents/søknad-sendt/components/KvitteringHeader.tsx","webpack://svangerskapspengesoknad/./src/app/icons/CheckmarkIkon.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/søknad-sendt/components/KvitteringSuksess.tsx","webpack://svangerskapspengesoknad/./src/app/icons/HvorLenge.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/søknad-sendt/SøknadSendt.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/termin/Termin.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/tilrettelegging/components/AddTilrettelegging.tsx","webpack://svangerskapspengesoknad/./src/app/icons/StatusIkon.tsx","webpack://svangerskapspengesoknad/./src/app/components/picture-scanning-guide/PictureScanningExample.tsx","webpack://svangerskapspengesoknad/./src/app/icons/ScanningIkon.tsx","webpack://svangerskapspengesoknad/./src/app/components/picture-scanning-guide/PictureScanningGuide.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/tilrettelegging/Tilrettelegging.tsx","webpack://svangerskapspengesoknad/./src/app/types/InformasjonOmUtenlandsopphold.ts","webpack://svangerskapspengesoknad/./src/app/connectedComponents/utenlandsopphold/OppholdListElement.tsx","webpack://svangerskapspengesoknad/./src/app/utils/validation/validateOpphold.ts","webpack://svangerskapspengesoknad/./src/app/connectedComponents/utenlandsopphold/Oppholdsvalg.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/utenlandsopphold/Oppholdsseksjon.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/utenlandsopphold/Utenlandsopphold.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/søknad-routes/SøknadRoutes.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/svangerskapspengesoknad/Svangerskapspengesøknad.tsx","webpack://svangerskapspengesoknad/./src/app/connectedComponents/svangerskapspengesoknad/Svangerskapspengesoknad.stories.tsx"],"sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import SpriteSymbol from \"../../../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"upload\",\n  \"use\": \"upload-usage\",\n  \"viewBox\": \"0 0 24 24\",\n  \"content\": \"<symbol viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" id=\\\"upload\\\">\\r\\n    <title>Opplastingsikon</title>\\r\\n    <defs></defs>\\r\\n    <g id=\\\"upload_Icons/upload\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\">\\r\\n        <g id=\\\"upload_icon-upload\\\" transform=\\\"translate(2.000000, 2.000000)\\\" stroke=\\\"#0067C5\\\" stroke-width=\\\"0.930000007\\\">\\r\\n            <path d=\\\"M20,16.4347826 L20,18.2608696 C20,19.7728696 18.8318182,21 17.3918182,21 L2.60818182,21 C1.16727273,21 0,19.7728696 0,18.2608696 L0,16.4347826 M10,0 L10,15.5217391 M3.63636364,6.39130435 L10,0 L16.3636364,6.39130435\\\" id=\\\"upload_Shape\\\" />\\r\\n        </g>\\r\\n    </g>\\r\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import { ReactElement, Component } from 'react';\r\nimport * as Sentry from '@sentry/browser';\r\n\r\ninterface Props {\r\n    children: ReactElement;\r\n}\r\n\r\ninterface State {\r\n    eventId: string | null;\r\n}\r\n\r\nclass ErrorBoundary extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = { eventId: null };\r\n    }\r\n\r\n    componentDidCatch(error: Error | null, errorInfo: any) {\r\n        Sentry.withScope((scope) => {\r\n            scope.setExtras(errorInfo);\r\n            const eventId = Sentry.captureException(error);\r\n            this.setState({ eventId });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport { IntlProvider as Provider } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { Språkkode } from 'common/intl/types';\r\nimport { State } from 'app/redux/store';\r\nimport nbMessages from './nb_NO.json';\r\nimport nbMessagesCommon from '../../common/intl/nb_NO.json';\r\nimport nnMessages from './nn_NO.json';\r\nimport nnMessagesCommon from '../../common/intl/nn_NO.json';\r\n\r\ninterface StateProps {\r\n    språkkode: Språkkode;\r\n}\r\n\r\nmoment.locale('nb');\r\n\r\nclass IntlProvider extends React.Component<any, StateProps> {\r\n    constructor(props: StateProps) {\r\n        super(props);\r\n        //addLocaleData([...nb, ...nn]);\r\n    }\r\n\r\n    render() {\r\n        const messages =\r\n            this.props.språkkode === 'nb'\r\n                ? {\r\n                      ...nbMessages,\r\n                      ...nbMessagesCommon,\r\n                  }\r\n                : {\r\n                      ...nnMessages,\r\n                      ...nnMessagesCommon,\r\n                  };\r\n        return (\r\n            <Provider key={this.props.språkkode} locale={this.props.språkkode} messages={messages || {}}>\r\n                {this.props.children}\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => ({\r\n    språkkode: state.common.språkkode,\r\n});\r\n\r\n// @ts-ignore Fiks\r\nexport default connect(mapStateToProps)(IntlProvider);\r\n","const Environment = () => {\r\n    return {\r\n        // @ts-ignore Fiks\r\n        REST_API_URL: window.appSettings.REST_API_URL,\r\n        // @ts-ignore Fiks\r\n        LOGIN_URL: window.appSettings.LOGIN_URL,\r\n        // @ts-ignore Fiks\r\n        LOG_VALIDATION: window.appSettings.LOG_VALIDATION,\r\n    };\r\n};\r\n\r\nexport default Environment();\r\n","import axios from 'axios';\r\nimport Environment from 'app/Environment';\r\n\r\nconst apiBaseUrl = Environment.REST_API_URL;\r\nconst sendSøknadUrl = `${apiBaseUrl}/soknad`;\r\n\r\nexport function getAxiosInstance() {\r\n    return axios;\r\n}\r\n\r\nexport function getSøkerinfo() {\r\n    return axios.get(`${apiBaseUrl}/sokerinfo`, {\r\n        timeout: 15 * 1000,\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nexport function sendSøknad(søknad: any) {\r\n    return axios.post(sendSøknadUrl, søknad, {\r\n        withCredentials: true,\r\n        headers: {\r\n            'content-type': 'application/json;',\r\n        },\r\n    });\r\n}\r\n","import { Attachment } from 'common/storage/attachment/types/Attachment';\r\nimport { FetchError } from 'app/types/FetchState';\r\n\r\nexport enum AttachmentActionTypes {\r\n    'UPLOAD_ATTACHMENT_REQUEST' = 'uploadAttachmentRequest',\r\n    'UPLOAD_ATTACHMENT_SUCCESS' = 'uploadAttachmentSuccess',\r\n    'UPLOAD_ATTACHMENT_FAILURE' = 'uploadAttachmentFailure',\r\n    'DELETE_ATTACHMENT_REQUEST' = 'deleteAttachmentRequest',\r\n    'DELETE_ATTACHMENT_SUCCESS' = 'deleteAttachmentSuccess',\r\n    'DELETE_ATTACHMENT_FAILURE' = 'deleteAttachmentFailure',\r\n}\r\n\r\nexport interface UploadAttachmentRequest {\r\n    type: AttachmentActionTypes.UPLOAD_ATTACHMENT_REQUEST;\r\n    payload: {\r\n        attachment: Attachment;\r\n    };\r\n}\r\n\r\nexport interface UploadAttachmentSuccess {\r\n    type: AttachmentActionTypes.UPLOAD_ATTACHMENT_SUCCESS;\r\n    payload: {\r\n        attachment: Attachment;\r\n        url: string;\r\n        uuid: string;\r\n    };\r\n}\r\n\r\nexport interface UploadAttachmentFailure {\r\n    type: AttachmentActionTypes.UPLOAD_ATTACHMENT_FAILURE;\r\n    payload: {\r\n        attachment: Attachment;\r\n        error: FetchError;\r\n    };\r\n}\r\n\r\nexport interface DeleteAttachmentRequest {\r\n    type: AttachmentActionTypes.DELETE_ATTACHMENT_REQUEST;\r\n    payload: {\r\n        attachment: Attachment;\r\n    };\r\n}\r\n\r\nexport interface DeleteAttachmentSuccess {\r\n    type: AttachmentActionTypes.DELETE_ATTACHMENT_SUCCESS;\r\n    payload: {\r\n        attachment: Attachment;\r\n    };\r\n}\r\n\r\nexport interface DeleteAttachmentFailure {\r\n    type: AttachmentActionTypes.DELETE_ATTACHMENT_FAILURE;\r\n    payload: {\r\n        attachment: Attachment;\r\n        error: FetchError;\r\n    };\r\n}\r\n\r\ntype AttachmentAction =\r\n    | UploadAttachmentRequest\r\n    | UploadAttachmentSuccess\r\n    | UploadAttachmentFailure\r\n    | DeleteAttachmentRequest\r\n    | DeleteAttachmentSuccess\r\n    | DeleteAttachmentFailure;\r\n\r\nexport default AttachmentAction;\r\n","import { Attachment } from 'common/storage/attachment/types/Attachment';\r\nimport AttachmentAction, { AttachmentActionTypes } from '../types/AttachmentAction';\r\n\r\nexport const getDefaultAttachmentState = (): AttachmentState => ({\r\n    vedlegg: [],\r\n});\r\n\r\nexport interface AttachmentState {\r\n    vedlegg: Attachment[];\r\n}\r\n\r\nconst modifyAttachmentWithId =\r\n    (compareId: string, newProperties: Partial<Attachment>) =>\r\n    (existingAttachment: Attachment): Attachment => {\r\n        return existingAttachment.id !== compareId\r\n            ? existingAttachment\r\n            : {\r\n                  ...existingAttachment,\r\n                  ...newProperties,\r\n              };\r\n    };\r\n\r\nconst attachmentReducer = (state = getDefaultAttachmentState(), action: AttachmentAction): AttachmentState => {\r\n    switch (action.type) {\r\n        case AttachmentActionTypes.UPLOAD_ATTACHMENT_REQUEST: {\r\n            const { attachment } = action.payload;\r\n            const vedlegg = [\r\n                ...state.vedlegg,\r\n                {\r\n                    ...attachment,\r\n                    pending: true,\r\n                },\r\n            ];\r\n\r\n            return { ...state, vedlegg };\r\n        }\r\n\r\n        case AttachmentActionTypes.UPLOAD_ATTACHMENT_SUCCESS: {\r\n            const { url, uuid, attachment } = action.payload;\r\n            const vedlegg = state.vedlegg.map(\r\n                modifyAttachmentWithId(attachment.id, {\r\n                    url,\r\n                    uuid,\r\n                    pending: false,\r\n                    uploaded: true,\r\n                })\r\n            );\r\n\r\n            return { ...state, vedlegg };\r\n        }\r\n\r\n        case AttachmentActionTypes.UPLOAD_ATTACHMENT_FAILURE: {\r\n            const { attachment, error } = action.payload;\r\n            const vedlegg = state.vedlegg.map(\r\n                modifyAttachmentWithId(attachment.id, {\r\n                    error: error ? error.message : '',\r\n                })\r\n            );\r\n\r\n            return { ...state, vedlegg };\r\n        }\r\n\r\n        case AttachmentActionTypes.DELETE_ATTACHMENT_REQUEST: {\r\n            const { attachment } = action.payload;\r\n            const vedlegg = state.vedlegg.map(\r\n                modifyAttachmentWithId(attachment.id, {\r\n                    pending: true,\r\n                })\r\n            );\r\n\r\n            return { ...state, vedlegg };\r\n        }\r\n\r\n        case AttachmentActionTypes.DELETE_ATTACHMENT_SUCCESS: {\r\n            const { attachment } = action.payload;\r\n            const vedlegg = state.vedlegg.filter((v) => v.id !== attachment.id);\r\n\r\n            return { ...state, vedlegg };\r\n        }\r\n\r\n        case AttachmentActionTypes.DELETE_ATTACHMENT_FAILURE: {\r\n            const { attachment, error } = action.payload;\r\n            const vedlegg = state.vedlegg.map(\r\n                modifyAttachmentWithId(attachment.id, {\r\n                    pending: false,\r\n                    error: error ? error.message : '',\r\n                })\r\n            );\r\n\r\n            return { ...state, vedlegg };\r\n        }\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nexport default attachmentReducer;\r\n","import { Språkkode } from 'common/types';\r\n\r\nexport enum CommonActionTypes {\r\n    'SET_SPRÅK' = 'setSpråk',\r\n}\r\n\r\ninterface SetSpråk {\r\n    type: CommonActionTypes.SET_SPRÅK;\r\n    payload: {\r\n        språkkode: Språkkode;\r\n    };\r\n}\r\n\r\ntype CommonAction = SetSpråk;\r\n\r\nexport default CommonAction;\r\n","import { Språkkode } from 'common/intl/types';\r\nimport CommonAction, { CommonActionTypes } from '../types/CommonAction';\r\n\r\nexport const getDefaultCommonState = (): CommonState => ({\r\n    språkkode: 'nb',\r\n});\r\n\r\nexport interface CommonState {\r\n    språkkode: Språkkode;\r\n}\r\n\r\nconst commonReducer = (state = getDefaultCommonState(), action: CommonAction): CommonState => {\r\n    switch (action.type) {\r\n        case CommonActionTypes.SET_SPRÅK:\r\n            return {\r\n                ...state,\r\n                språkkode: action.payload.språkkode,\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default commonReducer;\r\n","import { Søkerinfo } from 'app/types/Søkerinfo';\r\nimport Kvittering from 'app/types/Kvittering';\r\nimport { FetchError } from 'app/types/FetchState';\r\nimport SøknadDTO from '../../types/Søknad';\r\n\r\nexport enum ApiActionTypes {\r\n    'GET_SØKERINFO_REQUEST' = 'getSøkerInfoRequest',\r\n    'GET_SØKERINFO_SUCCESS' = 'getSøkerInfoSuccess',\r\n    'GET_SØKERINFO_FAILURE' = 'getSøkerInfoFailure',\r\n    'SEND_SØKNAD_REQUEST' = 'sendSøknadRequest',\r\n    'SEND_SØKNAD_SUCCESS' = 'sendSøknadSuccess',\r\n    'SEND_SØKNAD_FAILURE' = 'sendSøknadFailure',\r\n}\r\n\r\nexport interface GetSøkerinfoRequest {\r\n    type: ApiActionTypes.GET_SØKERINFO_REQUEST;\r\n}\r\n\r\nexport interface GetSøkerinfoSuccess {\r\n    type: ApiActionTypes.GET_SØKERINFO_SUCCESS;\r\n    payload: {\r\n        søkerinfo: Søkerinfo;\r\n    };\r\n}\r\n\r\nexport interface GetSøkerinfoFailure {\r\n    type: ApiActionTypes.GET_SØKERINFO_FAILURE;\r\n    payload: {\r\n        error: FetchError;\r\n    };\r\n}\r\n\r\nexport interface SendSøknadRequest {\r\n    type: ApiActionTypes.SEND_SØKNAD_REQUEST;\r\n    payload: {\r\n        søknad: SøknadDTO;\r\n    };\r\n}\r\n\r\nexport interface SendSøknadSuccess {\r\n    type: ApiActionTypes.SEND_SØKNAD_SUCCESS;\r\n    payload: {\r\n        kvittering: Kvittering;\r\n    };\r\n}\r\n\r\nexport interface SendSøknadFailure {\r\n    type: ApiActionTypes.SEND_SØKNAD_FAILURE;\r\n    payload: {\r\n        error: FetchError;\r\n    };\r\n}\r\n\r\ntype ApiAction =\r\n    | GetSøkerinfoRequest\r\n    | GetSøkerinfoSuccess\r\n    | GetSøkerinfoFailure\r\n    | SendSøknadRequest\r\n    | SendSøknadSuccess\r\n    | SendSøknadFailure;\r\n\r\nexport default ApiAction;\r\n","import { AxiosError } from 'axios';\r\n\r\nexport enum FetchStatus {\r\n    'UNFETCHED' = 'Unfetched',\r\n    'IN_PROGRESS' = 'InProgress',\r\n    'SUCCESS' = 'Success',\r\n    'FAILURE' = 'Failure',\r\n}\r\n\r\nexport type FetchError = AxiosError;\r\n\r\ninterface Unfetched {\r\n    status: FetchStatus.UNFETCHED;\r\n}\r\n\r\ninterface GetInProgress {\r\n    status: FetchStatus.IN_PROGRESS;\r\n}\r\n\r\ninterface GetSuccess<T> {\r\n    status: FetchStatus.SUCCESS;\r\n    data: T;\r\n}\r\n\r\ninterface GetFailure {\r\n    status: FetchStatus.FAILURE;\r\n    error: FetchError;\r\n}\r\n\r\ninterface PostInProgress<T> {\r\n    status: FetchStatus.IN_PROGRESS;\r\n    data: T;\r\n}\r\n\r\ninterface PostSuccess<T> {\r\n    status: FetchStatus.SUCCESS;\r\n    data: T;\r\n}\r\n\r\ninterface PostFailure<T> {\r\n    status: FetchStatus.FAILURE;\r\n    error: FetchError;\r\n    data: T;\r\n}\r\n\r\ntype FetchState<T> = Unfetched | GetInProgress | GetSuccess<T> | GetFailure;\r\nexport type PostState<T> = PostInProgress<T> | PostSuccess<T> | PostFailure<T>;\r\n\r\nexport default FetchState;\r\n","import { Søkerinfo } from 'app/types/Søkerinfo';\r\nimport ApiAction, { ApiActionTypes } from '../types/ApiAction';\r\nimport FetchState, { FetchStatus } from 'app/types/FetchState';\r\nimport Kvittering from 'app/types/Kvittering';\r\n\r\nexport interface ApiState {\r\n    søkerinfo: FetchState<Søkerinfo>;\r\n    kvittering: FetchState<Kvittering>;\r\n}\r\n\r\nconst getDefaultState = (): ApiState => ({\r\n    søkerinfo: {\r\n        status: FetchStatus.UNFETCHED,\r\n    },\r\n    kvittering: {\r\n        status: FetchStatus.UNFETCHED,\r\n    },\r\n});\r\n\r\nconst apiReducer = (state = getDefaultState(), action: ApiAction): ApiState => {\r\n    switch (action.type) {\r\n        case ApiActionTypes.GET_SØKERINFO_REQUEST:\r\n            return {\r\n                ...state,\r\n                søkerinfo: {\r\n                    status: FetchStatus.IN_PROGRESS,\r\n                },\r\n            };\r\n\r\n        case ApiActionTypes.GET_SØKERINFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                søkerinfo: {\r\n                    status: FetchStatus.SUCCESS,\r\n                    data: {\r\n                        ...action.payload.søkerinfo,\r\n                    },\r\n                },\r\n            };\r\n\r\n        case ApiActionTypes.GET_SØKERINFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                søkerinfo: {\r\n                    status: FetchStatus.FAILURE,\r\n                    error: action.payload.error,\r\n                },\r\n            };\r\n\r\n        case ApiActionTypes.SEND_SØKNAD_REQUEST:\r\n            return {\r\n                ...state,\r\n                kvittering: {\r\n                    status: FetchStatus.IN_PROGRESS,\r\n                },\r\n            };\r\n\r\n        case ApiActionTypes.SEND_SØKNAD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                kvittering: {\r\n                    status: FetchStatus.SUCCESS,\r\n                    data: action.payload.kvittering,\r\n                },\r\n            };\r\n\r\n        case ApiActionTypes.SEND_SØKNAD_FAILURE:\r\n            return {\r\n                ...state,\r\n                kvittering: {\r\n                    status: FetchStatus.FAILURE,\r\n                    error: action.payload.error,\r\n                },\r\n            };\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default apiReducer;\r\n","// prettier-ignore\r\nconst preposisjonerNor = ['OM', 'OVENFOR', 'ETTER', 'MOT', 'BLANT', 'RUNDT', 'SOM', 'PÅ', 'FØR', 'BAK', 'NEDENFOR', 'UNDER', 'MELLOM', 'UTOVER', 'MEN', 'AV', 'NED', 'UNNTATT', 'FOR', 'FRA', 'I', 'INNSIDEN', 'INN', 'NESTE', 'AV', 'PÅ', 'MOTSATT', 'UT', 'UTENFOR', 'OVER', 'PER', 'RUNDE', 'SIDEN', 'ENN', 'GJENNOM', 'TIL', 'TIL', 'MOT', 'UNDER', 'TIL', 'OPP', 'VIA', 'MED', 'INNEN', 'UTEN', 'DETTE'];\r\n\r\n// prettier-ignore\r\nconst preposisjonerEng = ['ABOUT', 'ABOVE', 'AFTER', 'AGAINST', 'AMONG', 'AROUND', 'AS', 'AT', 'BEFORE', 'BEHIND', 'BELOW', 'BENEATH', 'BETWEEN', 'BEYOND', 'BUT', 'BY', 'DOWN', 'EXCEPT', 'FOR', 'FROM', 'IN', 'INSIDE', 'INTO', 'NEXT', 'OF', 'ON', 'OPPOSITE', 'OUT', 'OUTSIDE', 'OVER', 'PER', 'ROUND', 'SINCE', 'THAN', 'THROUGH', 'TILL', 'TO', 'TOWARD', 'UNDER', 'UNTIL', 'UP', 'VIA', 'WITH', 'WITHIN', 'WITHOUT', 'THIS'];\r\n\r\nconst preposisjoner = [...preposisjonerNor, ...preposisjonerEng];\r\nconst forkortelser = ['AS', 'ASA'];\r\n\r\nconst normalizeWord =\r\n    (isFirstWord: boolean) =>\r\n    (word: string): string => {\r\n        if (forkortelser.includes(word)) {\r\n            return word;\r\n        } else if (preposisjoner.includes(word) && !isFirstWord) {\r\n            return word.toLowerCase();\r\n        } else {\r\n            return word.slice(0, 1) + word.slice(1).toLowerCase();\r\n        }\r\n    };\r\n\r\nconst SPACE = ' ';\r\nconst COMMA = ',';\r\nconst HYPHEN = '-';\r\n\r\nconst normalizeName = (name: string) => {\r\n    return name\r\n        .split(COMMA)\r\n        .map((chunkOfName) =>\r\n            chunkOfName\r\n                .split(SPACE)\r\n                .map((word, wordIndex) =>\r\n                    word\r\n                        .split(HYPHEN)\r\n                        .map(normalizeWord(wordIndex === 0))\r\n                        .join(HYPHEN)\r\n                )\r\n                .join(SPACE)\r\n        )\r\n        .join(COMMA);\r\n};\r\n\r\nexport default normalizeName;\r\n","import { Attachment } from 'common/storage/attachment/types/Attachment';\r\nimport { TidsperiodeMedValgfriSluttdato } from 'common/types';\r\n\r\nexport enum AnnenInntektType {\r\n    'MILITÆRTJENESTE' = 'MILITÆR_ELLER_SIVILTJENESTE',\r\n    'JOBB_I_UTLANDET' = 'JOBB_I_UTLANDET',\r\n}\r\n\r\nabstract class AnnenInntektBase {\r\n    // @ts-ignore Fiks\r\n    tidsperiode: TidsperiodeMedValgfriSluttdato;\r\n    // @ts-ignore Fiks\r\n    pågående: boolean;\r\n    // @ts-ignore Fiks\r\n    vedlegg: Attachment[];\r\n}\r\n\r\nexport class MilitærtjenesteInntekt extends AnnenInntektBase {\r\n    // @ts-ignore Fiks\r\n    type: AnnenInntektType.MILITÆRTJENESTE;\r\n}\r\n\r\nexport class JobbIUtlandetInntekt extends AnnenInntektBase {\r\n    // @ts-ignore Fiks\r\n    type: AnnenInntektType.JOBB_I_UTLANDET;\r\n    // @ts-ignore Fiks\r\n    arbeidsgiverNavn: string;\r\n    // @ts-ignore Fiks\r\n    land: string;\r\n}\r\n\r\nexport type AnnenInntekt = MilitærtjenesteInntekt | JobbIUtlandetInntekt;\r\n\r\nexport interface AnnenInntektPartialInterface {\r\n    type: AnnenInntektType;\r\n    tidsperiode: Partial<TidsperiodeMedValgfriSluttdato>;\r\n    vedlegg: Attachment[];\r\n}\r\n","import { IntlShape } from 'react-intl';\r\n\r\ntype MessageValue = string | number | boolean | Date | null | undefined;\r\n\r\nconst getMessage = (intl: IntlShape, id: string, value?: { [key: string]: MessageValue }): string =>\r\n    intl.formatMessage({ id }, value);\r\n\r\nexport default getMessage;\r\n","import Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport { AnnenInntekt, AnnenInntektType } from '../types/AnnenInntekt';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { IntlShape } from 'react-intl';\r\nimport { SøkerinfoDTOArbeidsforhold } from 'app/types/SøkerinfoArbeidsforholdDTO';\r\nimport { guid } from 'nav-frontend-js-utils';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport normalizeName from './normalizeName';\r\nimport moment from 'moment';\r\n\r\nexport const getArbeidsforholdNavnFromId = (\r\n    id: string | undefined,\r\n    arbeidsforhold: Arbeidsforhold[]\r\n): string | undefined => {\r\n    const arbForhold = arbeidsforhold.find((forhold) => forhold.guid === id);\r\n\r\n    return arbForhold !== undefined ? arbForhold.arbeidsgiverNavn : undefined;\r\n};\r\n\r\nexport const getAnnenInntektElementTitle = (annenInntekt: AnnenInntekt, intl: IntlShape): string => {\r\n    return annenInntekt.type === AnnenInntektType.JOBB_I_UTLANDET\r\n        ? `${annenInntekt.arbeidsgiverNavn}`\r\n        : getMessage(intl, 'inntektstype.militær_eller_siviltjeneste');\r\n};\r\n\r\nconst getArbeidsgiverId = (arbeidsforhold: Arbeidsforhold): string => {\r\n    return arbeidsforhold.arbeidsgiverId !== undefined ? arbeidsforhold.arbeidsgiverId : '';\r\n};\r\n\r\nexport const getAktiveArbeidsforhold = (arbeidsforhold: Arbeidsforhold[], termindato?: Date): Arbeidsforhold[] => {\r\n    if (termindato === undefined) {\r\n        return arbeidsforhold;\r\n    }\r\n\r\n    return arbeidsforhold.filter((arb) =>\r\n        arb.tom ? moment(arb.tom).isSameOrAfter(moment(termindato).subtract(9, 'months')) : true\r\n    );\r\n};\r\n\r\nexport const mapArbeidsforhold = (arbeidsforhold: SøkerinfoDTOArbeidsforhold[] | undefined): Arbeidsforhold[] => {\r\n    if (arbeidsforhold !== undefined && arbeidsforhold.length > 0) {\r\n        return arbeidsforhold.map(\r\n            (forhold: SøkerinfoDTOArbeidsforhold): Arbeidsforhold => ({\r\n                ...forhold,\r\n                fom: new Date(forhold.fom),\r\n                tom: forhold.tom !== undefined ? new Date(forhold.tom) : undefined,\r\n                guid: guid(),\r\n                arbeidsgiverNavn:\r\n                    forhold.arbeidsgiverNavn !== undefined ? normalizeName(forhold.arbeidsgiverNavn) : undefined,\r\n            })\r\n        );\r\n    }\r\n\r\n    return [];\r\n};\r\n\r\nexport const getUnikeArbeidsforhold = (\r\n    arbeidsforhold: Arbeidsforhold[] | undefined,\r\n    termindato: string\r\n): Arbeidsforhold[] => {\r\n    if (arbeidsforhold !== undefined && arbeidsforhold.length > 0) {\r\n        const aktiveArbeidsforhold = getAktiveArbeidsforhold(arbeidsforhold, new Date(termindato));\r\n\r\n        return uniqBy(aktiveArbeidsforhold, getArbeidsgiverId).map((forhold) => ({\r\n            ...forhold,\r\n            fom: new Date(forhold.fom),\r\n            tom: forhold.tom !== undefined ? new Date(forhold.tom) : undefined,\r\n            guid: forhold.guid,\r\n            arbeidsgiverNavn:\r\n                forhold.arbeidsgiverNavn !== undefined ? normalizeName(forhold.arbeidsgiverNavn) : undefined,\r\n        }));\r\n    }\r\n\r\n    return [];\r\n};\r\n","import { all, put, call, takeLatest } from 'redux-saga/effects';\r\nimport { getSøkerinfo, sendSøknad } from '../../api/api';\r\nimport { Søkerinfo } from 'app/types/Søkerinfo';\r\nimport Kvittering from 'app/types/Kvittering';\r\nimport { ApiActionTypes, GetSøkerinfoRequest, SendSøknadRequest } from '../types/ApiAction';\r\nimport normalizeName from 'app/utils/normalizeName';\r\nimport { SøkerinfoDTOArbeidsforhold } from 'app/types/SøkerinfoArbeidsforholdDTO';\r\nimport { mapArbeidsforhold } from 'app/utils/arbeidsforholdUtils';\r\n\r\nfunction* getSøkerInfoSaga(_: GetSøkerinfoRequest): any {\r\n    try {\r\n        const response = yield call(getSøkerinfo);\r\n        const { søker } = response.data;\r\n        const arbeidsforhold: SøkerinfoDTOArbeidsforhold[] | undefined =\r\n            response.data !== undefined ? response.data.arbeidsforhold : [];\r\n        const søkerinfo: Søkerinfo = {\r\n            ...response.data,\r\n            arbeidsforhold: mapArbeidsforhold(arbeidsforhold),\r\n            søker: {\r\n                ...søker,\r\n                fornavn: normalizeName(søker.fornavn),\r\n                mellomnavn: søker.mellomnavn ? normalizeName(søker.mellomnavn) : undefined,\r\n                etternavn: normalizeName(søker.etternavn),\r\n            },\r\n        };\r\n\r\n        yield put({ type: ApiActionTypes.GET_SØKERINFO_SUCCESS, payload: { søkerinfo } });\r\n    } catch (error) {\r\n        yield put({ type: ApiActionTypes.GET_SØKERINFO_FAILURE, payload: { error } });\r\n    }\r\n}\r\n\r\nfunction* sendSøknadSaga(action: SendSøknadRequest): any {\r\n    try {\r\n        const response = yield call(sendSøknad, action.payload.søknad);\r\n        const kvittering: Kvittering = response.data;\r\n\r\n        yield put({ type: ApiActionTypes.SEND_SØKNAD_SUCCESS, payload: { kvittering } });\r\n    } catch (error) {\r\n        yield put({ type: ApiActionTypes.SEND_SØKNAD_FAILURE, payload: { error } });\r\n    }\r\n}\r\n\r\nfunction* apiSaga() {\r\n    yield all([takeLatest(ApiActionTypes.GET_SØKERINFO_REQUEST, getSøkerInfoSaga)]);\r\n    yield all([takeLatest(ApiActionTypes.SEND_SØKNAD_REQUEST, sendSøknadSaga)]);\r\n}\r\n\r\nexport default apiSaga;\r\n","import Environment from 'app/Environment';\r\nimport { Attachment } from '../attachment/types/Attachment';\r\nimport axios from 'axios';\r\n\r\nfunction saveAttachment(attachment: Attachment) {\r\n    const config = {\r\n        withCredentials: true,\r\n        timeout: 30 * 1000,\r\n        headers: {\r\n            'content-type': 'multipart/form-data',\r\n        },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append('id', attachment.id);\r\n    formData.append('vedlegg', attachment.file, attachment.filename);\r\n\r\n    const url = `${Environment.REST_API_URL}/storage/vedlegg`;\r\n    return axios.post(url, formData, config);\r\n}\r\n\r\nfunction deleteAttachment(attachment: Attachment) {\r\n    const config = {\r\n        timeout: 15 * 1000,\r\n        withCredentials: true,\r\n    };\r\n    const url = `${Environment.REST_API_URL}/storage/vedlegg/${attachment.id}`;\r\n    return axios.delete(url, config);\r\n}\r\n\r\nconst AttachmentApi = { saveAttachment, deleteAttachment };\r\n\r\nexport default AttachmentApi;\r\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport AttachmentApi from '../../../common/storage/api/attachmentApi';\r\nimport {\r\n    UploadAttachmentRequest,\r\n    AttachmentActionTypes,\r\n    UploadAttachmentSuccess,\r\n    UploadAttachmentFailure,\r\n    DeleteAttachmentRequest,\r\n    DeleteAttachmentSuccess,\r\n    DeleteAttachmentFailure,\r\n} from '../types/AttachmentAction';\r\n\r\nfunction* uploadAttachment(action: UploadAttachmentRequest): any {\r\n    const { attachment } = action.payload;\r\n\r\n    try {\r\n        const response = yield call(AttachmentApi.saveAttachment, attachment);\r\n        const url: string = response.headers.location || 'mockurl';\r\n        const uuid: string = response.data;\r\n\r\n        const successAction: UploadAttachmentSuccess = {\r\n            type: AttachmentActionTypes.UPLOAD_ATTACHMENT_SUCCESS,\r\n            payload: {\r\n                attachment,\r\n                uuid,\r\n                url,\r\n            },\r\n        };\r\n\r\n        yield put(successAction);\r\n    } catch (error) {\r\n        const failureAction: UploadAttachmentFailure = {\r\n            type: AttachmentActionTypes.UPLOAD_ATTACHMENT_FAILURE,\r\n            payload: {\r\n                attachment,\r\n                // @ts-ignore Fiks\r\n                error,\r\n            },\r\n        };\r\n\r\n        yield put(failureAction);\r\n    }\r\n}\r\n\r\nfunction* deleteAttachment(action: DeleteAttachmentRequest) {\r\n    const { attachment } = action.payload;\r\n\r\n    try {\r\n        yield call(AttachmentApi.deleteAttachment, attachment);\r\n\r\n        const successAction: DeleteAttachmentSuccess = {\r\n            type: AttachmentActionTypes.DELETE_ATTACHMENT_SUCCESS,\r\n            payload: {\r\n                attachment,\r\n            },\r\n        };\r\n\r\n        yield put(successAction);\r\n    } catch (error) {\r\n        const failureAction: DeleteAttachmentFailure = {\r\n            type: AttachmentActionTypes.DELETE_ATTACHMENT_FAILURE,\r\n            payload: {\r\n                attachment,\r\n                // @ts-ignore Fiks\r\n                error,\r\n            },\r\n        };\r\n        yield put(failureAction);\r\n    }\r\n}\r\n\r\nexport default function* attachmentSaga() {\r\n    yield all([\r\n        takeEvery(AttachmentActionTypes.UPLOAD_ATTACHMENT_REQUEST, uploadAttachment),\r\n        takeEvery(AttachmentActionTypes.DELETE_ATTACHMENT_REQUEST, deleteAttachment),\r\n    ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport apiSaga from './apiSaga';\r\nimport attachmentSaga from './attachmentSaga';\r\n\r\nfunction* rootSaga() {\r\n    yield all([apiSaga(), attachmentSaga()]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { combineReducers, createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport attachment, { AttachmentState } from './reducers/attachmentReducer';\r\nimport common, { CommonState } from './reducers/commonReducer';\r\nimport api, { ApiState } from './reducers/apiReducer';\r\nimport rootSaga from './sagas';\r\n\r\nexport interface State {\r\n    common: CommonState;\r\n    attachment: AttachmentState;\r\n    api: ApiState;\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    common,\r\n    attachment,\r\n    api,\r\n});\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\r\n    }\r\n}\r\n\r\nexport const sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = (window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst configureStore = (initialState?: State) => {\r\n    const enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\r\n    return createStore(rootReducer, initialState, enhancer);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import Arbeidsforhold from './Arbeidsforhold';\r\n\r\nexport default interface Bankkonto {\r\n    kontonummer: string;\r\n    banknavn: string;\r\n}\r\n\r\nexport enum Kjønn {\r\n    'MANN' = 'M',\r\n    'KVINNE' = 'K',\r\n}\r\n\r\nexport interface PersonBase {\r\n    fnr: string;\r\n    fornavn: string;\r\n    mellomnavn?: string;\r\n    etternavn: string;\r\n    kjønn: Kjønn;\r\n    fødselsdato: Date;\r\n}\r\n\r\nexport interface Person extends PersonBase {\r\n    land: string;\r\n    ikkeNordiskEøsLand: boolean;\r\n    erMyndig: boolean;\r\n    bankkonto?: Bankkonto;\r\n}\r\n\r\nexport interface Søkerinfo {\r\n    søker: Person;\r\n    arbeidsforhold: Arbeidsforhold[];\r\n}\r\n","import { get } from 'lodash';\r\n\r\nimport FetchState, { FetchStatus } from 'app/types/FetchState';\r\n\r\nexport const getData = <T>(fetchState: FetchState<T>, defaultValue: any): T => {\r\n    return fetchState && fetchState.status === FetchStatus.SUCCESS ? fetchState.data : defaultValue;\r\n};\r\n\r\nexport const getErrorCode = <T>(fetchState: FetchState<T>): number | undefined => {\r\n    return fetchState && fetchState.status === FetchStatus.FAILURE && fetchState.error.response\r\n        ? get(fetchState, 'error.response.status')\r\n        : undefined;\r\n};\r\n","import classNames from 'classnames';\r\n\r\nconst BEMHelper = (cls: string) => ({\r\n    block: cls,\r\n    element: (e?: string, m?: string) => `${cls}__${e}${m ? ` ${cls}__${e}--${m}` : ''}`,\r\n    modifier: (m?: string) => `${cls}--${m}`,\r\n    modifierConditional: (m: string, condition: boolean | undefined) =>\r\n        condition === true ? `${cls}--${m}` : undefined,\r\n    child: (c: string) => BEMHelper(BEMHelper(cls).element(c)),\r\n    classNames,\r\n});\r\n\r\nexport default BEMHelper;\r\n","import React from 'react';\r\n\r\n/**\r\n *  Skjuler tekst slik at den ikke er synlig på skjerm, men leses av skjermleser\r\n */\r\nexport interface AriaTextProps {\r\n    id?: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst AriaText: React.FunctionComponent<AriaTextProps> = (props) => {\r\n    return (\r\n        <span id={props.id} className=\"sr-only\">\r\n            {props.children}\r\n        </span>\r\n    );\r\n};\r\nexport default AriaText;\r\n","// Ensure touches occur rapidly\r\nconst delay = 500;\r\n// Sequential touches must be in close vicinity\r\nconst minZoomTouchDelta = 10;\r\n\r\n// Track state of the last touch\r\nlet lastTapAt = 0;\r\nlet lastClientX = 0;\r\nlet lastClientY = 0;\r\n\r\nexport default function preventDoubleTapZoom(event: React.TouchEvent<any>) {\r\n    // Exit early if this involves more than one finger (e.g. pinch to zoom)\r\n    if (event.touches.length > 1) {\r\n        return;\r\n    }\r\n\r\n    const tapAt = new Date().getTime();\r\n    const timeDiff = tapAt - lastTapAt;\r\n    const { clientX, clientY } = event.touches[0];\r\n    const xDiff = Math.abs(lastClientX - clientX);\r\n    const yDiff = Math.abs(lastClientY - clientY);\r\n    if (xDiff < minZoomTouchDelta && yDiff < minZoomTouchDelta && event.touches.length === 1 && timeDiff < delay) {\r\n        event.preventDefault();\r\n        // Trigger a fake click for the tap we just prevented\r\n        (event.target as any).click();\r\n    }\r\n    lastClientX = clientX;\r\n    lastClientY = clientY;\r\n    lastTapAt = tapAt;\r\n}\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './sirkelknapp.less';\r\nimport { guid } from 'nav-frontend-js-utils';\r\nimport AriaText from '../aria/AriaText';\r\nimport preventDoubleTapZoom from 'common/util/preventDoubleTapZoom';\r\n\r\nexport type Stil = 'hvit' | 'bla' | 'info';\r\n\r\nexport interface SirkelknappProps {\r\n    /** Tekst som blir lest opp og satt som tittel på knappen */\r\n    ariaLabel: string;\r\n    /** Ikon som brukes inne i knappen */\r\n    ikon: React.ReactNode;\r\n    /** Funksjon som kalles knappen klikkes på */\r\n    onClick: () => void;\r\n    /** Om knappen er disabled eller ikke. Default false. */\r\n    disabled?: boolean;\r\n    /** Om knappen skal ha tilstanded pressed/valgt. Default false. */\r\n    toggle?: {\r\n        pressed: boolean;\r\n    };\r\n    /** Layout varianter */\r\n    stil?: Stil;\r\n    /** Størrelse - default normal */\r\n    size?: 'normal' | 'stor';\r\n    posisjoneringFraHøyre?: number;\r\n}\r\n\r\nconst Sirkelknapp: React.FunctionComponent<SirkelknappProps> = ({\r\n    onClick,\r\n    ariaLabel,\r\n    ikon,\r\n    toggle,\r\n    disabled,\r\n    stil = 'info',\r\n    size = 'normal',\r\n    posisjoneringFraHøyre,\r\n}) => {\r\n    const labelId = guid();\r\n    return (\r\n        <button\r\n            style={{ left: posisjoneringFraHøyre }}\r\n            type=\"button\"\r\n            onClick={() => onClick()}\r\n            onTouchStart={preventDoubleTapZoom}\r\n            aria-labelledby={labelId}\r\n            className={classnames(`sirkelknapp`, `sirkelknapp--${stil}`, `sirkelknapp--${size}`, {\r\n                'sirkelknapp--pressed': toggle && toggle.pressed,\r\n                'sirkelknapp--disabled': disabled,\r\n            })}\r\n            disabled={disabled}\r\n            aria-pressed={toggle ? toggle.pressed : undefined}\r\n        >\r\n            <span className=\"sirkelknapp__ikon\" role=\"presentation\">\r\n                {ikon}\r\n            </span>\r\n            <AriaText id={labelId}>{ariaLabel}</AriaText>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Sirkelknapp;\r\n","import * as React from 'react';\r\n\r\nconst LukkInfoIkon = () => (\r\n    <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n            <g transform=\"translate(-16.000000, -20.000000)\">\r\n                <g transform=\"translate(16.000000, 20.000000)\">\r\n                    <g strokeWidth=\"1\" fillRule=\"evenodd\" fill=\"#98E2F3\">\r\n                        <path\r\n                            d=\"M11.9989565,0 C5.39478261,0 0.0125217391,5.37182609 8.24610291e-16,11.976 C-0.00626086957,15.1815652 1.23547826,18.1972174 3.49773913,20.4688696 C5.76,22.7394783 8.77147826,23.9937391 11.9770435,24 L12,24 C18.6031304,24 23.9864348,18.6271304 24,12.021913 C24.0125217,5.40626087 18.6396522,0.0125217391 11.9989565,0 Z\"\r\n                            fillRule=\"nonzero\"\r\n                        />\r\n                    </g>\r\n                    <path\r\n                        d=\"M12,10.6512393 L15.3719018,7.27933749 C15.7443518,6.9068875 16.3482125,6.9068875 16.7206625,7.27933749 C17.0931125,7.65178748 17.0931125,8.25564822 16.7206625,8.62809821 L13.3487607,12 L16.7206625,15.3719018 C17.0931125,15.7443518 17.0931125,16.3482125 16.7206625,16.7206625 C16.3482125,17.0931125 15.7443518,17.0931125 15.3719018,16.7206625 L12,13.3487607 L8.62809821,16.7206625 C8.25564822,17.0931125 7.65178748,17.0931125 7.27933749,16.7206625 C6.9068875,16.3482125 6.9068875,15.7443518 7.27933749,15.3719018 L10.6512393,12 L7.27933749,8.62809821 C6.9068875,8.25564822 6.9068875,7.65178748 7.27933749,7.27933749 C7.65178748,6.9068875 8.25564822,6.9068875 8.62809821,7.27933749 L12,10.6512393 Z\"\r\n                        fill=\"#000000\"\r\n                        fillRule=\"nonzero\"\r\n                    />\r\n                </g>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default LukkInfoIkon;\r\n","import * as React from 'react';\r\n\r\nconst InfoIkon = (props: any) => (\r\n    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n        <g fillRule=\"nonzero\" fill=\"none\">\r\n            <path d=\"M12 0C5.382 0 0 5.382 0 12s5.382 12 12 12c6.617 0 12-5.382 12-12S18.617 0 12 0z\" fill=\"#98E2F3\" />\r\n            <g fill=\"#000\">\r\n                <path d=\"M12 5a1.566 1.566 0 1 1 .11 3.13A1.566 1.566 0 0 1 12 5zM14.976 17.01c.563 0 1.043.431 1.043.991s-.48.992-1.043.992H9.39c-.564 0-1.043-.431-1.043-.992 0-.56.479-.99 1.043-.99h1.6v-5.016h-.986c-.565 0-1.044-.43-1.044-.991 0-.56.48-.991 1.044-.991h2.03c.563 0 1.043.43 1.043.99v6.007H14.976z\" />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default InfoIkon;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Sirkelknapp, { Stil } from 'common/components/sirkelknapp/Sirkelknapp';\r\nimport LukkInfoIkon from 'common/components/ikoner/LukkInfoIkon';\r\nimport InfoIkon from 'common/components/ikoner/InfoIkon';\r\nimport { Collapse } from 'react-collapse';\r\nconst classNames = require('classnames');\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport './infoboks.less';\r\n\r\ninterface InfoboksProps {\r\n    tekst: string | React.ReactNode;\r\n    stil?: Stil;\r\n    contentFullWidth?: boolean;\r\n    fieldsetClsName?: string;\r\n}\r\n\r\nconst Infoboks: React.FunctionComponent<InfoboksProps> = ({\r\n    tekst,\r\n    stil = 'info',\r\n    contentFullWidth,\r\n    fieldsetClsName,\r\n}) => {\r\n    const [isExpanded, setIsExpanded] = useState<boolean>(false);\r\n    const [windowPos, setWindowPos] = useState<number>(0);\r\n    const intl = useIntl();\r\n\r\n    const toggleIsExpanded = () => {\r\n        setIsExpanded(!isExpanded);\r\n    };\r\n\r\n    const getComponentSize = () => {\r\n        const cls = fieldsetClsName ? fieldsetClsName : '';\r\n        if (cls.length > 1) {\r\n            const overskriftTilblockElement = document.querySelector('.' + cls + ' .skjema__legend');\r\n            const overskriftTilblockElementBredde = overskriftTilblockElement\r\n                ? overskriftTilblockElement.clientWidth + 16\r\n                : 0;\r\n            setWindowPos(overskriftTilblockElementBredde);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getComponentSize();\r\n        window.addEventListener('resize', getComponentSize);\r\n        return () => {\r\n            window.removeEventListener('resize', getComponentSize);\r\n        };\r\n    }, [getComponentSize]);\r\n\r\n    const ikon = isExpanded ? <LukkInfoIkon /> : <InfoIkon />;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <span className=\"infoboks__sirkel\">\r\n                <Sirkelknapp\r\n                    posisjoneringFraHøyre={windowPos !== 0 ? windowPos : undefined}\r\n                    stil={stil}\r\n                    ariaLabel={getMessage(intl, 'infoboks.sirkeltekst')}\r\n                    onClick={toggleIsExpanded}\r\n                    ikon={ikon}\r\n                    toggle={{ pressed: isExpanded }}\r\n                />\r\n            </span>\r\n            <Collapse\r\n                className={classNames('infoboks', {\r\n                    'infoboks--open': isExpanded,\r\n                    'infoboks__content--fullWidth': contentFullWidth,\r\n                })}\r\n                isOpened={isExpanded}\r\n            >\r\n                {isExpanded ? <div className=\"infoboks__wrapper typo-normal\">{tekst}</div> : <span />}\r\n            </Collapse>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Infoboks;\r\n","import * as React from 'react';\r\nimport Infoboks from 'common/components/infoboks/Infoboks';\r\nimport BEMHelper from 'common/util/bem';\r\nimport { Element } from 'nav-frontend-typografi';\r\n\r\nimport './labelMedInfobox.less';\r\n\r\ninterface LabelMedInfoboxProps {\r\n    title: string | React.ReactNode;\r\n    info?: string | React.ReactNode;\r\n    stil?: 'normal' | 'seksjon';\r\n    tag?: string;\r\n}\r\n\r\nconst LabelMedInfobox: React.FunctionComponent<LabelMedInfoboxProps> = ({ title, info, stil, tag = 'strong' }) => {\r\n    const cls = BEMHelper('labelMedInfobox');\r\n    return (\r\n        <div className={cls.element('heading', `stil-${stil || 'normal'}`)}>\r\n            <Element className={`typo-element ${cls.element('title')}`} tag={tag}>\r\n                {title}\r\n            </Element>\r\n            {info && <Infoboks tekst={info} contentFullWidth={true} />}\r\n        </div>\r\n    );\r\n};\r\nexport default LabelMedInfobox;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport BEMHelper from 'common/util/bem';\r\nimport LabelMedInfobox from '../label-med-infobox/LabelMedInfobox';\r\n\r\nimport './block.less';\r\n\r\nexport type BlockPadding = 'xl' | 'l' | 'm' | 's' | 'xs' | 'xxs' | 'none';\r\n\r\nexport interface BlockProps {\r\n    header?: {\r\n        title: string;\r\n        info?: string;\r\n        stil?: 'normal' | 'seksjon';\r\n    };\r\n    visible?: boolean;\r\n    animated?: boolean;\r\n    margin?: BlockPadding;\r\n    marginTop?: BlockPadding;\r\n    hasChildBlocks?: boolean;\r\n    align?: undefined | 'left' | 'center' | 'right';\r\n    style?: 'info' | undefined;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst cls = BEMHelper('block');\r\n\r\nconst Block: React.FunctionComponent<BlockProps> = ({\r\n    visible,\r\n    margin = 'm',\r\n    header,\r\n    animated = true,\r\n    children,\r\n    align,\r\n    marginTop,\r\n    hasChildBlocks,\r\n    style,\r\n}) => {\r\n    if (children === undefined || (animated !== true && visible === false)) {\r\n        return null;\r\n    }\r\n\r\n    let bottomMargin: BlockPadding;\r\n    if (margin === undefined && marginTop === undefined) {\r\n        bottomMargin = 'l';\r\n    } else if (margin === undefined && marginTop !== undefined) {\r\n        bottomMargin = 'none';\r\n    } else if (margin !== undefined) {\r\n        bottomMargin = margin;\r\n    } else {\r\n        bottomMargin = 'l';\r\n    }\r\n\r\n    const contentClass = classNames(cls.block, !hasChildBlocks ? cls.modifier(bottomMargin) : cls.modifier('none'), {\r\n        [cls.modifier(`top-${marginTop}`)]: marginTop,\r\n        [cls.modifier(`align-${align}`)]: align,\r\n        [cls.modifier(`style-${style}`)]: style,\r\n    });\r\n\r\n    const content =\r\n        header !== undefined ? (\r\n            <section className={contentClass}>\r\n                <LabelMedInfobox {...header} />\r\n                {children}\r\n            </section>\r\n        ) : (\r\n            <div className={contentClass}>{children}</div>\r\n        );\r\n    return visible === true || visible === undefined ? content : null;\r\n};\r\n\r\nexport default Block;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n    svgProps: any;\r\n}\r\n\r\n// tslint:disable max-line-length\r\nconst VeilederNormal: React.FunctionComponent<Props> = ({ svgProps }) => (\r\n    <svg viewBox=\"0 0 184 184\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" {...svgProps}>\r\n        <title>NAV veileder</title>\r\n        <defs>\r\n            <circle id=\"path-1\" cx=\"92\" cy=\"92\" r=\"92\" />\r\n            <path\r\n                d=\"M101.810133,50.0610156 L101.721719,50.0610156 C101.721719,22.7239453 81.8017601,0.5625 57.2241912,0.5625 C32.6499586,0.5625 12.73,22.7239453 12.73,50.0610156 L12.73,50.0857715 C12.721659,73.4321973 0.558823529,86.7805566 0.558823529,86.7805566 C0.558823529,86.7805566 12.5698529,101.363408 57.2258594,101.363408 C57.2408732,101.363408 57.2558869,101.363408 57.2709007,101.363408 C57.2859145,101.363408 57.2975919,101.363408 57.3126057,101.363408 C101.971949,101.363408 113.982978,86.7805566 113.982978,86.7805566 C113.982978,86.7805566 101.810133,73.4239453 101.810133,50.0610156\"\r\n                id=\"path-3\"\r\n            />\r\n            <path\r\n                d=\"M136.232308,172.688701 C123.107248,179.898969 108.032548,184 92,184 C75.3402045,184 59.7146708,179.571799 46.2362132,171.828213 L46.2362132,151.148343 C46.2362132,139.661598 59.4361654,127.337779 69.2432912,121.702281 C71.0426321,124.754626 75.7927857,136.924152 90.2482666,136.924152 C104.597596,136.924152 111.448764,124.055747 111.741134,121.033203 C121.74621,126.309309 136.318934,139.182969 136.318934,151.148343 L136.318934,170.757239 C136.318934,171.408316 136.289643,172.052553 136.232308,172.688701 Z\"\r\n                id=\"path-5\"\r\n            />\r\n        </defs>\r\n        <g id=\"Icons/employee/large-animation\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n            <use id=\"Background\" fill=\"#C1B5D0\" xlinkHref=\"#path-1\" />\r\n            <g id=\"Head\" transform=\"translate(34.000000, 33.000000)\">\r\n                <use id=\"Hair\" fill=\"#D2654C\" xlinkHref=\"#path-3\" />\r\n                <path\r\n                    d=\"M35.1424429,88.7918975 C36.8828197,91.545216 41.770955,139.920311 56.4434743,139.920311 C71.1191694,139.920311 77.7445056,90.6457646 77.7445056,88.0809374 C55.2759879,75.3469309 35.1424429,88.7918975 35.1424429,88.7918975 Z\"\r\n                    id=\"Neck\"\r\n                    fill=\"#E7E5E2\"\r\n                />\r\n                <path\r\n                    d=\"M23.1456799,45.9823968 C23.1456799,45.9823968 22.9708433,46.9648859 22.7444922,46.8032399 C22.4291618,46.676804 22.0919769,46.6015826 21.7329373,46.5999821 C20.1859452,46.5983816 18.9277457,47.8835474 18.9246236,49.4711992 L18.9090132,60.4569161 C18.9058911,62.044568 20.1578464,63.3329346 21.7079607,63.3361355 C22.3276941,63.3361355 22.8959133,63.1248754 23.3611036,62.7743757 C27.1076033,80.46421 40.4607527,92.9571296 56.3833763,92.9843374 C72.306,93.0099447 85.7012975,80.5586369 89.4993115,62.8816062 C89.9629409,63.2321059 90.53116,63.446567 91.1524545,63.4481674 C92.7010077,63.4497679 93.9592072,62.1646021 93.9607683,60.5785507 L93.9779397,49.5912334 C93.9795008,48.0035815 92.7275454,46.7152149 91.1789922,46.712014 C90.8215137,46.712014 90.4812067,46.7872354 90.1674373,46.9120709 C54.2572378,51.1228693 41.7314405,26.9703505 40.6730543,26.96875 C40.6730543,26.96875 25.6542737,40.8769439 23.1456799,45.9823968 Z\"\r\n                    id=\"Face\"\r\n                    fill=\"#E7E5E2\"\r\n                />\r\n                path\r\n                <g id=\"Eyes\" transform=\"translate(41.000000, 48.000000)\" fill=\"#635E59\">\r\n                    <path\r\n                        d=\"M3.47531756,8.31698633 C1.06143428,8.49687891 0.385813879,4.9765957 1.11314844,2.67760156 C1.24994072,2.24189844 2.04900781,0.258128906 3.46364017,0.258128906 C4.87660432,0.258128906 5.50051057,1.34243555 5.58725689,1.52892969 C6.62654458,3.77016016 6.11607583,8.11893945 3.47531756,8.31698633\"\r\n                        id=\"Left-eye\"\r\n                        className=\"eye\"\r\n                    />\r\n                    p\r\n                    <path\r\n                        d=\"M30.4157229,8.31698633 C32.8296062,8.49687891 33.5052266,4.9765957 32.777892,2.67760156 C32.6410997,2.24189844 31.8420326,0.258128906 30.4274003,0.258128906 C29.0144361,0.258128906 28.3905299,1.34243555 28.3037835,1.52892969 C27.2644959,3.77016016 27.7749646,8.11893945 30.4157229,8.31698633\"\r\n                        id=\"Right-eye\"\r\n                        className=\"eye\"\r\n                    />\r\n                </g>\r\n                <path\r\n                    d=\"M58.7110091,60.364205 C60.1306218,60.1480094 61.1001552,60.2836877 61.4473734,60.7052702 C62.7579535,62.2987995 62.3387549,63.984682 60.090273,65.3686506 C58.9080828,66.0960311 57.2808371,66.3520422 56.4193636,65.9748641 C55.9981117,65.7904278 55.5054912,65.9787594 55.3190649,66.3955144 C55.1326385,66.8122694 55.3230022,67.2996313 55.744254,67.4840675 C57.1680527,68.1074478 59.3576241,67.7629673 60.9713968,66.7700417 C64.0269504,64.8893106 64.7262249,62.0770525 62.7409852,59.6632077 C61.9008785,58.6431736 60.4137473,58.4350617 58.4572041,58.7330274 C58.0019066,58.8023656 57.6896312,59.2237268 57.7597175,59.674164 C57.8298039,60.1246013 58.2557116,60.4335431 58.7110091,60.364205 Z\"\r\n                    id=\"Nose\"\r\n                    fill=\"#D1BFA3\"\r\n                    fillRule=\"nonzero\"\r\n                    className=\"nose\"\r\n                />\r\n                <path\r\n                    d=\"M68.2190679,72.3964795 C68.1438286,72.5669742 67.9712887,72.8934138 67.6939953,73.323403 C67.2246061,74.0512684 66.6351711,74.7809912 65.9192675,75.4614735 C63.785928,77.4892605 61.0092008,78.6618137 57.4751366,78.5545725 C54.0292098,78.4500058 51.2648945,77.2955467 49.0975966,75.433905 C48.3018655,74.7503966 47.6449101,74.0184026 47.1198035,73.288772 C46.8101486,72.8585093 46.6167982,72.5322835 46.5322349,72.3622862 C46.328828,71.9533782 45.828872,71.7850263 45.4155518,71.9862618 C45.0022316,72.1874973 44.8320632,72.6821164 45.0354701,73.0910244 C45.157988,73.3373215 45.3964205,73.7396111 45.7608706,74.2460111 C46.3592725,75.0774849 47.1033887,75.9065954 48.003913,76.6801179 C50.4504998,78.7816601 53.577186,80.0874559 57.423993,80.2041873 C61.4298499,80.3257451 64.6323718,78.9733878 67.0750354,76.6515814 C67.8917829,75.8752447 68.5631498,75.0440899 69.1003465,74.2110776 C69.4270046,73.7045403 69.6394661,73.3025704 69.747911,73.056831 C69.9322296,72.6391594 69.7394062,72.1527449 69.3172278,71.9703939 C68.8950494,71.7880429 68.4033865,71.9788079 68.2190679,72.3964795 Z\"\r\n                    id=\"Mouth-happy\"\r\n                    fill=\"#D19E9C\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n                <path\r\n                    d=\"M65.7877687,76.0260621 C65.5868543,75.6656528 65.1970553,75.1736864 64.5869694,74.6902823 C63.4640698,73.8005482 62.0117505,73.3136803 60.2375239,73.4377742 L56.8172845,73.6787616 C56.3577881,73.7111374 56.0118216,74.1059022 56.0445467,74.5604936 C56.0772718,75.0150849 56.4762962,75.3573583 56.9357927,75.3249825 L60.3555996,75.0840255 C61.6954851,74.9903106 62.7381985,75.3398644 63.5441367,75.9784528 C63.9659849,76.312706 64.2240389,76.6383967 64.3269996,76.8230922 C64.5494683,77.2221664 65.056819,77.3672587 65.4601993,77.1471649 C65.8635795,76.9270711 66.0102374,76.4251363 65.7877687,76.0260621 Z\"\r\n                    id=\"Mouth-unsure\"\r\n                    fill=\"#D19E9C\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n                <path\r\n                    d=\"M48.5675754,75.364998 C48.5675754,75.364998 49.7987059,76.7694805 53.2268539,76.7430742 L56.65667,76.716668\"\r\n                    id=\"Mouth-hesitant\"\r\n                    stroke=\"#D19E9C\"\r\n                    strokeWidth=\"1.77023006\"\r\n                    strokeLinecap=\"round\"\r\n                />\r\n            </g>\r\n            <use id=\"Body\" fill=\"#5D4479\" xlinkHref=\"#path-5\" />\r\n            <g id=\"ID\" transform=\"translate(97.950368, 145.376465)\">\r\n                <path\r\n                    d=\"M27.9383089,20.2172852 L2.0877182,20.2172852 C0.934060587,20.2172852 0,19.2791268 0,18.120408 L0,4.16141873 C0,3.00269992 0.934060587,2.06298828 2.0877182,2.06298828 L27.9383089,2.06298828 C29.0919665,2.06298828 30.0275735,3.00269992 30.0275735,4.16141873 L30.0275735,18.120408 C30.0275735,19.2791268 29.0919665,20.2172852 27.9383089,20.2172852\"\r\n                    id=\"Fill-97\"\r\n                    fill=\"#D2242A\"\r\n                />\r\n                <path\r\n                    d=\"M21.4592616,11.9790218 C21.4592616,15.4071701 18.6368027,18.1896255 15.1538943,18.1896255 C11.6650626,18.1896255 8.8411228,15.4071701 8.8411228,11.9790218 C8.8411228,8.5508734 11.6650626,5.76841796 15.1538943,5.76841796 C18.6368027,5.76841796 21.4592616,8.5508734 21.4592616,11.9790218\"\r\n                    id=\"Fill-98\"\r\n                    fill=\"#FFFFFF\"\r\n                />\r\n                <polygon\r\n                    id=\"Fill-99\"\r\n                    fill=\"#FFFFFF\"\r\n                    points=\"6.98001766 14.7165848 5.74944925 14.7165848 7.06442488 11.543507 8.29795494 11.543507\"\r\n                />\r\n                <polygon\r\n                    id=\"Fill-100\"\r\n                    fill=\"#FFFFFF\"\r\n                    points=\"22.4888816 14.7165848 21.726255 14.7165848 23.0412306 11.543507 23.8038572 11.543507\"\r\n                />\r\n                <polygon\r\n                    id=\"Fill-101\"\r\n                    fill=\"#FFFFFF\"\r\n                    points=\"24.5937311 14.7165848 24.2709105 14.7165848 25.5829245 11.543507 25.9057451 11.543507\"\r\n                />\r\n                <path\r\n                    d=\"M10.3610451,14.7012805 L11.3295068,14.7012805 C11.379855,14.7012805 11.4183566,14.6633843 11.4183566,14.6152853 L11.4183566,11.646264 C11.4183566,11.598165 11.379855,11.5602688 11.3295068,11.5602688 L10.3506793,11.5602688 C10.2855228,11.5602688 10.2381363,11.6098253 10.2381363,11.6724998 L9.85312093,12.6067868 C9.82942767,12.6548859 9.86792921,12.7131877 9.91975821,12.7131877 L10.1966731,12.7131877 C10.2381363,12.7131877 10.2736762,12.7437962 10.2736762,12.7889801 L10.2736762,14.6152853 C10.2736762,14.6633843 10.3121777,14.7012805 10.3610451,14.7012805\"\r\n                    id=\"Fill-102\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M12.4651542,14.7012805 L13.4365776,14.7012805 C13.4869258,14.7012805 13.5298698,14.6633843 13.5298698,14.6152853 L13.5298698,11.646264 C13.5298698,11.598165 13.4869258,11.5602688 13.4365776,11.5602688 L11.9261326,11.5602688 C11.862457,11.5602688 11.8121088,11.6098253 11.8121088,11.6724998 L11.4256126,12.6067868 L11.2923381,12.7131877 L12.0653305,12.7131877 C12.2371066,12.7131877 12.3777853,12.8472819 12.3777853,13.0192724 L12.3777853,14.6152853 C12.3777853,14.6633843 12.4162868,14.7012805 12.4651542,14.7012805\"\r\n                    id=\"Fill-103\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M16.8091643,11.5605603 L15.8377408,11.5605603 C15.7888735,11.5605603 15.7488911,11.5984565 15.7488911,11.6465555 L15.7488911,14.6155768 C15.7488911,14.6636759 15.7888735,14.7015721 15.8377408,14.7015721 L16.8195301,14.7015721 C16.8846865,14.7015721 16.932073,14.6520155 16.932073,14.589341 L17.3170884,13.655054 C17.3407817,13.6040399 17.303761,13.5486531 17.2445278,13.5486531 L16.9764979,13.5486531 C16.932073,13.5486531 16.9009756,13.513672 16.9009756,13.4743183 L16.9009756,11.6465555 C16.9009756,11.5984565 16.8565508,11.5605603 16.8091643,11.5605603\"\r\n                    id=\"Fill-104\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M12.8135931,14.7012805 L13.4518301,14.7012805 C13.5140249,14.7012805 13.5643731,14.6502664 13.5643731,14.590507 L13.9493885,13.6533049 C13.9716009,13.6037484 13.9345802,13.5469041 13.8783087,13.5469041 L13.6087979,13.5469041 L12.8135931,14.7012805 Z\"\r\n                    id=\"Fill-105\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M19.4086105,11.5605603 L20.5636566,11.5605603 C20.6199281,11.5605603 20.6599105,11.6130319 20.6362172,11.664046 L19.4130529,14.653473 C19.404168,14.6840815 19.3760322,14.7015721 19.3419732,14.7015721 L18.2965083,14.7015721 L19.3330882,11.6115744 C19.3449348,11.5809659 19.3760322,11.5605603 19.4086105,11.5605603\"\r\n                    id=\"Fill-106\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M17.9603603,11.5605603 L16.3270065,11.5605603 C16.2115019,11.5605603 16.7964292,11.6713338 16.8378923,11.7748195 L17.9929385,14.6024589 C18.0166318,14.6651334 18.0758649,14.7015721 18.1410213,14.7015721 L19.1316955,14.7015721 L18.1128856,11.6669611 C18.0906732,11.599914 18.0284784,11.5605603 17.9603603,11.5605603\"\r\n                    id=\"Fill-107\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M15.8276712,12.5677246 C15.8276712,13.2002996 15.7462256,13.2381958 15.7462256,13.2381958 C15.7462256,13.2381958 15.6544143,12.6318566 15.1790684,12.6318566 C14.7126074,12.6318566 14.6059878,12.9000451 14.6059878,13.0997289 C14.6059878,13.3314787 14.8444011,13.5486531 14.9776757,13.5486531 L15.8276712,13.5486531 L15.3256704,14.6432702 C15.3079004,14.6797089 15.2723606,14.7015721 15.2323782,14.7015721 L14.845882,14.7015721 C14.4416158,14.7015721 13.3857852,14.1797706 13.3857852,13.1696911 C13.3857852,12.1581542 14.1706242,11.5605603 14.8251504,11.5605603 C15.3656527,11.5605603 15.8276712,11.9264043 15.8276712,12.5677246 Z\"\r\n                    id=\"Fill-108\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M16.5670488,4.94461292 L13.8882302,4.94461292 C13.6897992,4.94461292 13.5298698,4.78719794 13.5298698,4.59188677 L13.5298698,4.14733522 C13.5298698,3.95348159 13.6897992,3.79460907 13.8882302,3.79460907 L16.5670488,3.79460907 C16.7654798,3.79460907 16.9254093,3.95348159 16.9254093,4.14733522 L16.9254093,4.59188677 C16.9254093,4.78719794 16.7654798,4.94461292 16.5670488,4.94461292\"\r\n                    id=\"Fill-109\"\r\n                    fill=\"#5A1F57\"\r\n                />\r\n                <polygon\r\n                    id=\"Fill-110\"\r\n                    fill=\"#C2B5CF\"\r\n                    points=\"14.4521297 4.53857422 16.0040379 4.53857422 16.0040379 0.412597656 14.4521297 0.412597656\"\r\n                />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\n// tslint:enable max-line-length\r\n\r\nexport default VeilederNormal;\r\n","import React from 'react';\r\n\r\nexport interface Props {\r\n    svgProps: any;\r\n}\r\n\r\n// tslint:disable max-line-length\r\nconst VeilederKompakt: React.FunctionComponent<Props> = ({ svgProps }) => (\r\n    <svg viewBox=\"0 0 96 96\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" {...svgProps}>\r\n        <title>NAV veileder</title>\r\n        <defs>\r\n            <path\r\n                d=\"M67.557 34.114h-.059c0-18.7-13.188-33.859-29.46-33.859-16.269 0-29.457 15.16-29.457 33.86v.016c-.006 15.97-8.058 25.1-8.058 25.1s7.952 9.976 37.516 9.976H38.097c29.567 0 37.519-9.975 37.519-9.975s-8.06-9.137-8.06-25.118\"\r\n                id=\"a\"\r\n            />\r\n            <path\r\n                d=\"M20.143 87.094v-2.77c0-7.466 8.327-15.476 14.514-19.14 1.135 1.985 4.132 9.894 13.25 9.894 9.053 0 13.375-8.363 13.56-10.328 6.311 3.43 15.504 11.796 15.504 19.573v1.951A47.789 47.789 0 0 1 48 96a47.781 47.781 0 0 1-27.857-8.906z\"\r\n                id=\"b\"\r\n            />\r\n        </defs>\r\n        <g id=\"Icons/employee/medium-animation\" fill=\"none\" fillRule=\"evenodd\">\r\n            <circle id=\"Background\" fill=\"#C1B5D0\" cx={48} cy={48} r={48} />\r\n            <g id=\"Head\" transform=\"translate(10 5)\">\r\n                <use id=\"Hair\" fill=\"#D2654C\" xlinkHref=\"#a\" />\r\n                <path\r\n                    d=\"M44.017 90.627c-1.971.246-3.98.373-6.017.373-1.966 0-3.904-.118-5.808-.348-5.426-8.936-7.576-28.387-8.476-29.804 0 0 13.547-9.003 28.665-.476 0 1.322-2.642 21.184-8.364 30.255z\"\r\n                    id=\"Neck\"\r\n                    fill=\"#E7E5E2\"\r\n                />\r\n                <path\r\n                    d=\"M15.477 31.324s-.116.672-.266.562a1.76 1.76 0 0 0-.67-.14c-1.024 0-1.857.879-1.859 1.965l-.01 7.514c-.002 1.086.827 1.968 1.853 1.97.41 0 .786-.145 1.094-.384 2.48 12.1 11.321 20.646 21.863 20.664 10.541.018 19.41-8.5 21.924-20.591.307.24.683.386 1.095.388 1.025 0 1.858-.879 1.859-1.963l.011-7.516c.001-1.086-.828-1.967-1.853-1.97-.236 0-.462.052-.67.137-23.774 2.88-32.067-13.64-32.767-13.642 0 0-9.943 9.514-11.604 13.006z\"\r\n                    id=\"Face\"\r\n                    fill=\"#E7E5E2\"\r\n                />\r\n                <g id=\"Eyes\" transform=\"translate(27.03 31.865)\" fill=\"#635E59\">\r\n                    <path\r\n                        d=\"M2.569 6.528C.97 6.651.523 4.243 1.005 2.671c.09-.298.62-1.655 1.556-1.655.935 0 1.348.741 1.406.869.688 1.533.35 4.508-1.398 4.643\"\r\n                        id=\"Left-Eye\"\r\n                        className=\"eye\"\r\n                    />\r\n                    <path\r\n                        d=\"M20.404 6.528c1.599.123 2.046-2.285 1.564-3.857-.09-.298-.62-1.655-1.556-1.655-.935 0-1.348.741-1.406.869-.688 1.533-.35 4.508 1.398 4.643\"\r\n                        id=\"Right-eye\"\r\n                        className=\"eye\"\r\n                    />\r\n                </g>\r\n                <path\r\n                    d=\"M39.023 41.162c.94-.148 1.581-.055 1.811.233.868 1.09.59 2.243-.898 3.19-.783.498-1.86.673-2.43.415a.548.548 0 0 0-.729.288.57.57 0 0 0 .282.744c.942.427 2.392.191 3.46-.488 2.023-1.287 2.486-3.21 1.172-4.862-.556-.697-1.541-.84-2.836-.636a.563.563 0 0 0-.462.644c.046.308.328.52.63.472z\"\r\n                    id=\"Nose\"\r\n                    className=\"nose\"\r\n                    fill=\"#D1BFA3\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n                <path\r\n                    d=\"M45.318 49.392c-.05.117-.164.34-.348.635-.31.497-.701.997-1.175 1.462-1.412 1.387-3.25 2.19-5.59 2.116-2.282-.072-4.112-.861-5.547-2.135a8.352 8.352 0 0 1-1.31-1.467 5.156 5.156 0 0 1-.388-.634.547.547 0 0 0-.74-.257.57.57 0 0 0-.251.756c.08.168.239.443.48.79a9.467 9.467 0 0 0 1.485 1.665c1.62 1.437 3.69 2.33 6.237 2.41 2.652.083 4.772-.842 6.39-2.43a9.09 9.09 0 0 0 1.34-1.67c.216-.346.357-.62.429-.789a.57.57 0 0 0-.285-.743.548.548 0 0 0-.727.291z\"\r\n                    id=\"Mouth-happy\"\r\n                    fill=\"#D19E9C\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n                <path\r\n                    d=\"M43.852 52.464c-.132-.24-.386-.568-.784-.89-.732-.593-1.68-.918-2.837-.835l-2.231.16a.548.548 0 0 0-.504.588.546.546 0 0 0 .581.51l2.23-.16c.875-.063 1.555.17 2.08.595.276.223.444.44.512.563a.541.541 0 0 0 .739.216.553.553 0 0 0 .214-.747z\"\r\n                    id=\"Mouth-unsure\"\r\n                    fill=\"#D19E9C\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n                <path\r\n                    d=\"M32.057 51.462s.869 1.021 3.286 1.002l2.42-.02\"\r\n                    id=\"Mouth-hesitant\"\r\n                    stroke=\"#D19E9C\"\r\n                    strokeLinecap=\"round\"\r\n                />\r\n            </g>\r\n            <use id=\"Body\" fill=\"#5C4378\" xlinkHref=\"#b\" />\r\n            <g id=\"ID\" transform=\"translate(52.457 80.5)\">\r\n                <path\r\n                    d=\"M11.677 12.721H1.317c-.728 0-1.317-.59-1.317-1.32V2.619c0-.729.59-1.32 1.317-1.32h16.308a1.32 1.32 0 0 1 1.318 1.32V9.42a47.753 47.753 0 0 1-7.266 3.301z\"\r\n                    id=\"Card\"\r\n                    fill=\"#D2242A\"\r\n                />\r\n                <path\r\n                    d=\"M13.538 7.537c0 2.158-1.781 3.908-3.978 3.908-2.201 0-3.983-1.75-3.983-3.908C5.577 5.38 7.36 3.63 9.56 3.63c2.197 0 3.978 1.75 3.978 3.907\"\r\n                    id=\"Fill-98\"\r\n                    fill=\"#FFF\"\r\n                />\r\n                <path id=\"Fill-99\" fill=\"#FFF\" d=\"M4.403 9.26h-.776l.83-1.997h.778z\" />\r\n                <path id=\"Fill-100\" fill=\"#FFF\" d=\"M14.187 9.26h-.481l.83-1.997h.48z\" />\r\n                <path id=\"Fill-101\" fill=\"#FFF\" d=\"M15.515 9.26h-.204l.828-1.997h.204z\" />\r\n                <path\r\n                    d=\"M6.536 9.25h.611a.054.054 0 0 0 .056-.054V7.328a.054.054 0 0 0-.056-.054H6.53a.07.07 0 0 0-.071.07l-.243.588c-.015.03.01.067.042.067h.175c.026 0 .048.02.048.048v1.15c0 .03.024.053.055.053\"\r\n                    id=\"Fill-102\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M7.864 9.25h.612c.032 0 .06-.023.06-.054V7.328c0-.03-.028-.054-.06-.054h-.952a.07.07 0 0 0-.072.07l-.244.588L7.124 8h.487c.109 0 .198.085.198.193v1.004c0 .03.024.054.055.054\"\r\n                    id=\"Fill-103\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M10.604 7.274h-.613a.055.055 0 0 0-.056.054v1.868c0 .03.025.055.056.055h.62a.07.07 0 0 0 .07-.071l.243-.588c.015-.032-.008-.067-.045-.067h-.17a.047.047 0 0 1-.047-.047v-1.15c0-.03-.028-.054-.058-.054\"\r\n                    id=\"Fill-104\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M8.083 9.25h.403a.07.07 0 0 0 .071-.07l.243-.589a.048.048 0 0 0-.045-.067h-.17l-.502.726z\"\r\n                    id=\"Fill-105\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M12.244 7.274h.729c.035 0 .06.033.045.065l-.771 1.881c-.006.02-.024.03-.045.03h-.66l.654-1.944a.052.052 0 0 1 .048-.032\"\r\n                    id=\"Fill-106\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M11.33 7.274H10.3c-.073 0 .296.07.322.135l.729 1.78c.015.039.052.062.093.062h.625l-.643-1.91a.1.1 0 0 0-.096-.067\"\r\n                    id=\"Fill-107\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M9.985 7.908c0 .398-.052.422-.052.422s-.057-.382-.357-.382c-.295 0-.362.169-.362.295 0 .145.15.282.235.282h.536l-.317.689a.065.065 0 0 1-.059.037h-.243c-.256 0-.922-.329-.922-.964 0-.637.496-1.013.908-1.013.341 0 .633.23.633.634z\"\r\n                    id=\"Fill-108\"\r\n                    fill=\"#C52D35\"\r\n                />\r\n                <path\r\n                    d=\"M10.451 3.111h-1.69a.224.224 0 0 1-.226-.222v-.28c0-.121.101-.221.226-.221h1.69c.125 0 .226.1.226.222v.28c0 .122-.1.221-.226.221\"\r\n                    id=\"Fill-109\"\r\n                    fill=\"#5A1F57\"\r\n                />\r\n                <path id=\"Fill-110\" fill=\"#C2B5CF\" d=\"M9.117 2.856h.98V.26h-.98z\" />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default VeilederKompakt;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport VeilederNormal from './VeilederNormalSvg';\r\nimport VeilederKompakt from './VeilederKompaktSvg';\r\n\r\nimport './veileder.less';\r\n\r\nexport type Ansiktstype = 'glad' | 'undrende' | 'skeptisk';\r\n\r\nexport interface VeilederProps {\r\n    ansikt?: 'glad' | 'undrende' | 'skeptisk';\r\n    farge?: 'lilla' | 'gronn' | 'bla';\r\n    stil?: 'normal' | 'kompakt';\r\n}\r\n\r\ninterface OwnProps {\r\n    className?: string;\r\n}\r\n\r\ntype Props = VeilederProps & OwnProps;\r\n\r\nconst Veileder = (props: Props) => {\r\n    const { className, farge = 'lilla', ansikt = 'glad', stil = 'normal', ...rest } = props;\r\n\r\n    const svgProps = {\r\n        ...rest,\r\n        width: '184',\r\n        height: '184',\r\n        className: classnames(\r\n            'veileder',\r\n            `veileder--tema-${farge}`,\r\n            `veileder--${ansikt}`,\r\n            `veileder--${stil}`,\r\n            props.className\r\n        ),\r\n    };\r\n    return stil === 'normal' ? <VeilederNormal svgProps={svgProps} /> : <VeilederKompakt svgProps={svgProps} />;\r\n};\r\n\r\nexport default Veileder;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport './snakkeboble.less';\r\n\r\ninterface Props {\r\n    tittel?: string;\r\n    tekst: string | React.ReactNode;\r\n}\r\n\r\nconst bem = BEMHelper('snakkeboble');\r\n\r\nconst Snakkeboble: React.FunctionComponent<Props> = ({ tittel, tekst }) => (\r\n    <div className={classnames(bem.block, bem.modifier('hvit'))}>\r\n        <div className={bem.element('innhold')}>\r\n            {tittel && (\r\n                <div className={classnames(bem.element('tittel'), 'capitalizeName')}>\r\n                    <Element className=\"m_no-margin\">{tittel}</Element>\r\n                </div>\r\n            )}\r\n            <div className={bem.element('tekst')}>{tekst}</div>\r\n        </div>\r\n    </div>\r\n);\r\nexport default Snakkeboble;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport Snakkeboble from '../snakkeboble/Snakkeboble';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport './personMedSnakkeboble.less';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\n\r\ninterface Props {\r\n    personRenderer: () => React.ReactNode;\r\n    dialog?: Dialog;\r\n    fyltBakgrunn?: boolean;\r\n    stil?: 'kompakt';\r\n}\r\n\r\ninterface Dialog {\r\n    title?: string;\r\n    text: string | React.ReactNode;\r\n}\r\n\r\nconst bem = BEMHelper('personMedSnakkeboble');\r\n\r\nconst PersonMedSnakkeboble: React.FunctionComponent<Props> = ({\r\n    dialog,\r\n    personRenderer,\r\n    stil,\r\n    fyltBakgrunn = true,\r\n}) => {\r\n    return (\r\n        <div\r\n            className={classnames(\r\n                bem.block,\r\n                fyltBakgrunn ? bem.modifier('fyltBakgrunn') : undefined,\r\n                stil ? bem.modifier(stil) : undefined\r\n            )}\r\n        >\r\n            {dialog && (\r\n                <Normaltekst tag=\"div\" className={bem.element('snakkeboble')}>\r\n                    <Snakkeboble tittel={dialog.title} tekst={dialog.text} />\r\n                </Normaltekst>\r\n            )}\r\n            <div className={bem.element('person')}>{personRenderer()}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonMedSnakkeboble;\r\n","import React from 'react';\r\nimport Veileder, { VeilederProps } from '../veileder/Veileder';\r\nimport PersonMedSnakkeboble from 'common/components/person-med-snakkeboble/PersonMedSnakkeboble';\r\n\r\ninterface Props {\r\n    dialog?: VeilederMedSnakkebobleDialog;\r\n    veileder?: VeilederProps;\r\n}\r\n\r\nexport interface VeilederMedSnakkebobleDialog {\r\n    title: string;\r\n    text: string | React.ReactNode;\r\n}\r\n\r\nconst VeilederMedSnakkeboble: React.FunctionComponent<Props> = ({ dialog, veileder }) => {\r\n    return (\r\n        <PersonMedSnakkeboble fyltBakgrunn={true} dialog={dialog} personRenderer={() => <Veileder {...veileder} />} />\r\n    );\r\n};\r\n\r\nexport default VeilederMedSnakkeboble;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Block from 'common/components/block/Block';\r\nimport VeilederMedSnakkeboble from 'common/components/veileder-med-snakkeboble/VeilederMedSnakkeboble';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { useIntl } from 'react-intl';\r\n\r\ninterface Props {\r\n    tittel: string;\r\n    melding: string | React.ReactNode;\r\n}\r\n\r\nconst Feil: FunctionComponent<Props> = ({ tittel, melding }) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <Block margin=\"l\">\r\n            <VeilederMedSnakkeboble\r\n                veileder={{\r\n                    ansikt: 'skeptisk',\r\n                    farge: 'lilla',\r\n                    stil: 'normal',\r\n                }}\r\n                dialog={{\r\n                    title: getMessage(intl, tittel),\r\n                    text: melding,\r\n                }}\r\n            />\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default Feil;\r\n","import { StepID } from './SøknadStep';\r\n\r\nexport enum AppRoute {\r\n    'INTRO' = '/velkommen',\r\n    'SØKNAD' = '/soknad',\r\n    'SENDT' = '/sendt',\r\n}\r\n\r\nexport interface SøknadRoute {\r\n    path: AppRoute | string;\r\n    step?: StepID;\r\n    subStep?: string;\r\n}\r\n","export enum StepID {\r\n    'TERMIN' = 'termin',\r\n    'ARBEIDSFORHOLD' = 'arbeidsforhold',\r\n    'TILRETTELEGGING' = 'tilrettelegging',\r\n    'UTENLANDSOPPHOLD' = 'utenlandsopphold',\r\n    'OPPSUMMERING' = 'oppsummering',\r\n    'INGEN' = 'ingen',\r\n}\r\n\r\ninterface SøknadStep {\r\n    step: StepID;\r\n    subStep?: string;\r\n}\r\n\r\nexport default SøknadStep;\r\n","import { UferdigSøknad, Søknadfeil } from 'app/types/Søknad';\r\n\r\nconst validateIntro = (søknad: UferdigSøknad): Søknadfeil => {\r\n    const errors: Søknadfeil = {};\r\n\r\n    if (søknad.harGodkjentVilkår === false) {\r\n        errors.harGodkjentVilkår = 'valideringsfeil.vilkårMåGodkjennes';\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default validateIntro;\r\n","import moment, { Moment } from 'moment';\r\nimport { isISODateString } from 'nav-datovelger';\r\n\r\nexport function formaterDato(dato: Date, datoformat?: string): string {\r\n    return moment.utc(dato).format(datoformat || 'dddd D. MMMM YYYY');\r\n}\r\n\r\nexport function formaterDatoTall(dato: string, datoformat?: string): string {\r\n    return moment.utc(dato).format(datoformat || 'DD.MM.YYYY');\r\n}\r\n\r\nexport function formaterDatoUtenDag(dato: Date): string {\r\n    return moment.utc(dato).format('D. MMMM YYYY');\r\n}\r\n\r\nexport function år(dato: Moment): string {\r\n    return moment.utc(dato).format('YYYY');\r\n}\r\n\r\nexport function årToBokstaver(dato: Date): string {\r\n    return moment.utc(dato).format('YY');\r\n}\r\n\r\nexport function måned(dato: Moment): string {\r\n    return moment.utc(dato).format('MMMM');\r\n}\r\n\r\nexport function måned3bokstaver(dato: Moment): string {\r\n    return dato.format('MMM').substr(0, 3);\r\n}\r\n\r\nexport function dagOgMåned(dato: Date): string {\r\n    return moment(dato).format('DD.MM');\r\n}\r\n\r\nexport function mnd(dato: Moment): string {\r\n    return dato.format('MMM');\r\n}\r\n\r\nexport function ukedag(dato: Moment): string {\r\n    return dato.format('dddd');\r\n}\r\n\r\nexport function dagIMåned(dato: Moment): string {\r\n    return dato.format('D.');\r\n}\r\n\r\nexport const getUkerOgDagerFromDager = (dager: number): { uker: number; dager: number } => {\r\n    const uker = Math.floor(dager / 5);\r\n    return {\r\n        dager: dager - uker * 5,\r\n        uker,\r\n    };\r\n};\r\n\r\nexport const dateToISOFormattedDateString = (date?: Date) => (date ? moment.utc(date).format('YYYY-MM-DD') : undefined);\r\n\r\nexport const halvannetÅrSiden = (dato: Date) => moment(dato).startOf('day').subtract(1, 'year').subtract(6, 'months');\r\nexport const etÅrSiden = (dato: Date) =>\r\n    dateToISOFormattedDateString(moment(dato).startOf('day').subtract(1, 'year').add(1, 'day').toDate());\r\nexport const tiMånederSiden = (dato: string) =>\r\n    dateToISOFormattedDateString(moment(dato).startOf('day').subtract(10, 'months').add(1, 'day').toDate());\r\nexport const femMånederSiden = (dato: Date) => moment(dato).startOf('day').subtract(5, 'month');\r\nexport const enMånedSiden = (dato: Date) => moment(dato).startOf('day').subtract(1, 'month');\r\nexport const treUkerSiden = (dato: string) =>\r\n    dateToISOFormattedDateString(moment(dato).startOf('day').subtract(3, 'weeks').toDate());\r\nexport const dagenFør = (dato: string) => dateToISOFormattedDateString(moment(dato).startOf('day').toDate());\r\nexport const dagenEtter = (dato: Date) => moment(dato).startOf('day').add(1, 'day');\r\nexport const enMånedFremiTid = (dato: Date) => moment(dato).startOf('day').add(1, 'month');\r\nexport const niMånederFremITid = (dato: Date) =>\r\n    dateToISOFormattedDateString(moment(dato).startOf('day').add(9, 'months').toDate());\r\n\r\nexport const isInvalidDateString = (dateString: string | undefined) => {\r\n    return dateString !== undefined && dateString !== '' && isISODateString(dateString) === false;\r\n};\r\n","import moment from 'moment';\r\nimport { isEmpty } from 'lodash';\r\nimport { UferdigSøknad, Søknadfeil } from 'app/types/Søknad';\r\nimport {\r\n    dagenEtter,\r\n    niMånederFremITid,\r\n    etÅrSiden,\r\n    enMånedSiden,\r\n    halvannetÅrSiden,\r\n    isInvalidDateString,\r\n} from '../../../common/util/datoUtils';\r\n\r\nconst validateTermin = (søknad: UferdigSøknad): Søknadfeil => {\r\n    const errors: Søknadfeil = {};\r\n    let barn = {};\r\n    let fødselsdatoFeil = {};\r\n    let termindatoFeil = {};\r\n\r\n    if (søknad.barn.fødselsdato) {\r\n        if (isInvalidDateString(søknad.barn.fødselsdato)) {\r\n            fødselsdatoFeil = {\r\n                fødselsdato: { intlKey: 'valideringsfeil.ugyldigDato', values: { feltNavn: 'Fødselsdato' } },\r\n            };\r\n        } else {\r\n            if (!moment(søknad.barn.fødselsdato).isBefore(dagenEtter(new Date()))) {\r\n                fødselsdatoFeil = {\r\n                    fødselsdato: 'valideringsfeil.fødselsdatoMåVæreTilbakeITid',\r\n                };\r\n            }\r\n            if (moment(søknad.barn.fødselsdato).isBefore(halvannetÅrSiden(new Date()))) {\r\n                fødselsdatoFeil = {\r\n                    fødselsdato: 'valideringsfeil.forLangtTilbakeITid',\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    if (søknad.barn.termindato === undefined) {\r\n        termindatoFeil = {\r\n            termindato: 'valideringsfeil.termindatoErPåkrevd',\r\n        };\r\n    }\r\n\r\n    if (søknad.barn.termindato) {\r\n        if (isInvalidDateString(søknad.barn.termindato)) {\r\n            termindatoFeil = {\r\n                termindato: { intlKey: 'valideringsfeil.ugyldigDato', values: { feltNavn: 'Termindato' } },\r\n            };\r\n        } else {\r\n            if (moment(søknad.barn.termindato).isSameOrAfter(niMånederFremITid(new Date()))) {\r\n                termindatoFeil = {\r\n                    termindato: 'valideringsfeil.forLangtFremITid',\r\n                };\r\n            }\r\n            if (moment(søknad.barn.termindato).isBefore(etÅrSiden(new Date()))) {\r\n                termindatoFeil = {\r\n                    termindato: 'valideringsfeil.forLangtTilbakeITid',\r\n                };\r\n            }\r\n            if (\r\n                moment(søknad.barn.termindato).isBefore(enMånedSiden(new Date())) &&\r\n                søknad.barn.fødselsdato === undefined\r\n            ) {\r\n                termindatoFeil = {\r\n                    fødselsdato: 'valideringsfeil.vennligstOppgiBarnetsFødselsDato',\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    barn = { ...termindatoFeil, ...fødselsdatoFeil };\r\n\r\n    if (!isEmpty(barn)) {\r\n        errors.barn = barn;\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default validateTermin;\r\n","export enum Tilretteleggingstype {\r\n    'HEL' = 'hel',\r\n    'DELVIS' = 'delvis',\r\n    'INGEN' = 'ingen',\r\n    'NOE' = 'noe',\r\n}\r\n\r\nexport enum Arbeidsforholdstype {\r\n    'VIRKSOMHET' = 'virksomhet',\r\n    'SELVSTENDIG' = 'selvstendig',\r\n    'FRILANSER' = 'frilanser',\r\n    'PRIVAT' = 'privat',\r\n}\r\n\r\nexport interface TilretteleggingArbeidsforhold {\r\n    id?: string;\r\n    type: Arbeidsforholdstype;\r\n}\r\n\r\nexport interface DelvisTilrettelegging {\r\n    tilrettelagtArbeidFom: string;\r\n    stillingsprosent: number;\r\n}\r\n\r\nexport interface HelTilrettelegging {\r\n    tilrettelagtArbeidFom: string;\r\n}\r\n\r\nexport interface IngenTilrettelegging {\r\n    slutteArbeidFom: string;\r\n}\r\n\r\nexport interface Tilrettelegging {\r\n    id: string;\r\n    behovForTilretteleggingFom: string;\r\n    arbeidsforhold: TilretteleggingArbeidsforhold;\r\n    vedlegg: string[];\r\n    helTilrettelegging?: HelTilrettelegging[];\r\n    delvisTilrettelegging?: DelvisTilrettelegging[];\r\n    ingenTilrettelegging?: IngenTilrettelegging[];\r\n}\r\n\r\nexport type UferdigTilrettelegging = Tilrettelegging & {\r\n    behovForTilretteleggingFom?: string;\r\n    type: Tilretteleggingstype[];\r\n    helTilrettelegging?: [\r\n        {\r\n            tilrettelagtArbeidFom?: string;\r\n        }\r\n    ];\r\n    delvisTilrettelegging?: DelvisTilrettelegging[];\r\n    ingenTilrettelegging?: [\r\n        {\r\n            slutteArbeidFom?: string;\r\n        }\r\n    ];\r\n    risikoFaktorer?: string;\r\n    tilretteleggingstiltak?: string;\r\n};\r\n\r\nexport default Tilrettelegging;\r\n","import moment from 'moment';\r\nimport { Tidsperiode } from 'common/types';\r\n\r\nexport const dateToHours = (date: Date) => moment(date).format('HH:mm');\r\n\r\ntype FormatDateOverloads = {\r\n    (dato: string): string;\r\n    (dato: string | undefined): string | undefined;\r\n};\r\n\r\nexport const formatDate: FormatDateOverloads = (dato: string | undefined): any => {\r\n    if (dato) {\r\n        const parsetDato = moment(dato);\r\n        return dato && parsetDato.isValid() ? parsetDato.format('DD.MM.YYYY') : '';\r\n    }\r\n    return dato;\r\n};\r\n\r\nexport const prettifyTidsperiode = (tidsperiode: Partial<Tidsperiode>) => {\r\n    return `${formatDate(tidsperiode.fom)} - ${formatDate(tidsperiode.tom) || 'pågående'}`;\r\n};\r\n","import moment from 'moment';\r\nimport { get, set, merge } from 'lodash';\r\nimport { UferdigSøknad, Søknadfeil, Søknadsgrunnlag } from 'app/types/Søknad';\r\nimport { FormikErrors } from 'formik';\r\nimport {\r\n    Tilretteleggingstype,\r\n    Arbeidsforholdstype,\r\n    IngenTilrettelegging,\r\n    DelvisTilrettelegging,\r\n    HelTilrettelegging,\r\n} from '../../types/Tilrettelegging';\r\nimport { formatDate } from '../formatDate';\r\nimport { isInvalidDateString } from 'common/util/datoUtils';\r\n\r\nconst validateTilrettelegging = (søknad: UferdigSøknad, arbeidsforholdId?: string): Søknadfeil => {\r\n    const errors: Søknadfeil = {};\r\n    const checkForDuplicateDates = (dates: string[], date: string) => {\r\n        return dates.filter((d: string) => d === date).length > 1;\r\n    };\r\n\r\n    const tiMånederSiden = moment(søknad.barn.termindato).startOf('day').subtract(10, 'months');\r\n\r\n    const idx = søknad.søknadsgrunnlag.findIndex((grunnlag: Søknadsgrunnlag) => grunnlag.id === arbeidsforholdId);\r\n    if (søknad.tilrettelegging) {\r\n        søknad.tilrettelegging.forEach((tilrettelegging, index) => {\r\n            if (index > idx) {\r\n                // Ikke valider arbeidsforhold som bruker ikke har kommet til enda i stegflyten\r\n                return;\r\n            }\r\n            const tErrors: FormikErrors<any> = {};\r\n\r\n            if (moment(tilrettelegging.behovForTilretteleggingFom).isBefore(tiMånederSiden)) {\r\n                set(tErrors, 'behovForTilretteleggingFom', 'valideringsfeil.maxTiMånederFørTerminDato');\r\n            }\r\n\r\n            if (moment(tilrettelegging.behovForTilretteleggingFom).isSameOrAfter(søknad.barn.termindato)) {\r\n                set(tErrors, 'behovForTilretteleggingFom', 'valideringsfeil.datoMåVæreFørTerminDato');\r\n            }\r\n\r\n            const getInputName = (name: string) => `tilrettelegging.${index}.${name}`;\r\n            const tilretteleggingstypeName = getInputName('type');\r\n            const valgteTyper = get(søknad, tilretteleggingstypeName) || [];\r\n\r\n            const ingenTilretteleggingDatoer: string[] =\r\n                tilrettelegging.ingenTilrettelegging !== undefined\r\n                    ? tilrettelegging.ingenTilrettelegging\r\n                          .filter((ingen: IngenTilrettelegging) => ingen.slutteArbeidFom !== undefined)\r\n                          .reduce((result: string[], ingen: IngenTilrettelegging) => {\r\n                              result.push(formatDate(ingen.slutteArbeidFom));\r\n                              return result;\r\n                          }, [])\r\n                    : [];\r\n\r\n            const delvisTilretteleggingDatoer: string[] =\r\n                tilrettelegging.delvisTilrettelegging !== undefined\r\n                    ? tilrettelegging.delvisTilrettelegging\r\n                          .filter((delvis: DelvisTilrettelegging) => delvis.tilrettelagtArbeidFom !== undefined)\r\n                          .reduce((result: string[], delvis: DelvisTilrettelegging) => {\r\n                              result.push(formatDate(delvis.tilrettelagtArbeidFom));\r\n                              return result;\r\n                          }, [])\r\n                    : [];\r\n\r\n            const helTilretteleggingDatoer: string[] =\r\n                tilrettelegging.helTilrettelegging !== undefined\r\n                    ? tilrettelegging.helTilrettelegging\r\n                          .filter((hel: HelTilrettelegging) => hel.tilrettelagtArbeidFom !== undefined)\r\n                          .reduce((result: string[], hel: HelTilrettelegging) => {\r\n                              result.push(formatDate(hel.tilrettelagtArbeidFom)!);\r\n                              return result;\r\n                          }, [])\r\n                    : [];\r\n\r\n            const alleDatoer = [\r\n                ...ingenTilretteleggingDatoer,\r\n                ...delvisTilretteleggingDatoer,\r\n                ...helTilretteleggingDatoer,\r\n            ];\r\n\r\n            if (\r\n                tilrettelegging.arbeidsforhold.type === Arbeidsforholdstype.FRILANSER ||\r\n                tilrettelegging.arbeidsforhold.type === Arbeidsforholdstype.SELVSTENDIG\r\n            ) {\r\n                if (tilrettelegging.risikoFaktorer === undefined || tilrettelegging.risikoFaktorer.length < 3) {\r\n                    set(tErrors, 'risikoFaktorer', 'valideringsfeil.feltetErPåkrevd');\r\n                }\r\n                if (tilrettelegging.risikoFaktorer !== undefined && tilrettelegging.risikoFaktorer.length > 2000) {\r\n                    set(tErrors, 'risikoFaktorer', 'valideringsfeil.feltetKanVæreMax2000Tegn');\r\n                }\r\n                if (\r\n                    tilrettelegging.tilretteleggingstiltak === undefined ||\r\n                    tilrettelegging.tilretteleggingstiltak.length < 3\r\n                ) {\r\n                    set(tErrors, 'tilretteleggingstiltak', 'valideringsfeil.feltetErPåkrevd');\r\n                }\r\n                if (\r\n                    tilrettelegging.tilretteleggingstiltak !== undefined &&\r\n                    tilrettelegging.tilretteleggingstiltak.length > 2000\r\n                ) {\r\n                    set(tErrors, 'tilretteleggingstiltak', 'valideringsfeil.feltetKanVæreMax2000Tegn');\r\n                }\r\n            }\r\n\r\n            if (valgteTyper.length === 0) {\r\n                set(tErrors, 'type', 'valideringsfeil.feltetErPåkrevd');\r\n            }\r\n\r\n            if (valgteTyper.includes(Tilretteleggingstype.INGEN)) {\r\n                if (tilrettelegging.ingenTilrettelegging) {\r\n                    tilrettelegging.ingenTilrettelegging.forEach((ingenTil, ind) => {\r\n                        const { slutteArbeidFom } = ingenTil;\r\n                        if (slutteArbeidFom === undefined || slutteArbeidFom === '') {\r\n                            set(\r\n                                tErrors,\r\n                                `ingenTilrettelegging.${ind}.slutteArbeidFom`,\r\n                                'valideringsfeil.ingenTilrettelegging.slutteArbeidFom.påkrevd'\r\n                            );\r\n                        }\r\n\r\n                        if (isInvalidDateString(slutteArbeidFom)) {\r\n                            set(\r\n                                tErrors,\r\n                                `ingenTilrettelegging.${ind}.slutteArbeidFom`,\r\n                                'valideringsfeil.ingenTilrettelegging.slutteArbeidFom.ugyldigDato'\r\n                            );\r\n                        } else {\r\n                            if (moment(slutteArbeidFom).isBefore(tilrettelegging.behovForTilretteleggingFom)) {\r\n                                set(\r\n                                    tErrors,\r\n                                    `ingenTilrettelegging.${ind}.slutteArbeidFom`,\r\n                                    'valideringsfeil.ingenTilrettelegging.tilrettelagtArbeidForTidlig'\r\n                                );\r\n                            }\r\n\r\n                            if (moment(slutteArbeidFom).isSameOrAfter(søknad.barn.termindato)) {\r\n                                set(\r\n                                    tErrors,\r\n                                    `ingenTilrettelegging.${ind}.slutteArbeidFom`,\r\n                                    'valideringsfeil.ingenTilrettelegging.forLangtFremITid'\r\n                                );\r\n                            }\r\n\r\n                            if (moment(slutteArbeidFom).isBefore(tiMånederSiden)) {\r\n                                set(\r\n                                    tErrors,\r\n                                    `ingenTilrettelegging.${ind}.slutteArbeidFom`,\r\n                                    'valideringsfeil.ingenTilrettelegging.forLangtTilbakeITid'\r\n                                );\r\n                            }\r\n\r\n                            if (checkForDuplicateDates(alleDatoer, formatDate(slutteArbeidFom))) {\r\n                                merge(\r\n                                    tErrors,\r\n                                    set(\r\n                                        tErrors,\r\n                                        `ingenTilrettelegging.${ind}.slutteArbeidFom`,\r\n                                        'valideringsfeil.overlappendePeriode'\r\n                                    )\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (valgteTyper.includes(Tilretteleggingstype.DELVIS)) {\r\n                if (tilrettelegging.delvisTilrettelegging) {\r\n                    tilrettelegging.delvisTilrettelegging.forEach((delTil, ind) => {\r\n                        const { tilrettelagtArbeidFom } = delTil;\r\n\r\n                        // Browser konverterer ugyldig input for <input type=\"number\" ... /> til tom streng\r\n                        const isEmptyInputField =\r\n                            delTil.stillingsprosent !== undefined &&\r\n                            (delTil.stillingsprosent as unknown as string).length === 0;\r\n\r\n                        if (\r\n                            delTil.stillingsprosent !== undefined &&\r\n                            !isEmptyInputField &&\r\n                            (delTil.stillingsprosent <= 0 || delTil.stillingsprosent >= 100)\r\n                        ) {\r\n                            merge(\r\n                                tErrors,\r\n                                set(\r\n                                    tErrors,\r\n                                    `delvisTilrettelegging.${ind}.stillingsprosent`,\r\n                                    'valideringsfeil.delvisTilrettelegging.stillingsprosent.range'\r\n                                )\r\n                            );\r\n                        }\r\n\r\n                        if (isEmptyInputField || delTil.stillingsprosent === undefined) {\r\n                            merge(\r\n                                tErrors,\r\n                                set(\r\n                                    tErrors,\r\n                                    `delvisTilrettelegging.${ind}.stillingsprosent`,\r\n                                    'valideringsfeil.delvisTilrettelegging.stillingsprosent.påkrevd'\r\n                                )\r\n                            );\r\n                        }\r\n\r\n                        if (tilrettelagtArbeidFom === undefined || tilrettelagtArbeidFom === '') {\r\n                            merge(\r\n                                tErrors,\r\n                                set(\r\n                                    tErrors,\r\n                                    `delvisTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                    'valideringsfeil.delvisTilrettelegging.tilrettelagtArbeidFom.påkrevd'\r\n                                )\r\n                            );\r\n                        }\r\n\r\n                        if (isInvalidDateString(tilrettelagtArbeidFom)) {\r\n                            set(\r\n                                tErrors,\r\n                                `delvisTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                'valideringsfeil.delvisTilrettelegging.tilrettelagtArbeidFom.ugyldigDato'\r\n                            );\r\n                        } else {\r\n                            if (moment(tilrettelagtArbeidFom).isSameOrAfter(søknad.barn.termindato)) {\r\n                                set(\r\n                                    tErrors,\r\n                                    `delvisTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                    'valideringsfeil.delvisTilrettelegging.forLangtFremITid'\r\n                                );\r\n                            }\r\n\r\n                            if (moment(tilrettelagtArbeidFom).isBefore(tiMånederSiden)) {\r\n                                set(\r\n                                    tErrors,\r\n                                    `delvisTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                    'valideringsfeil.delvisTilrettelegging.forLangtTilbakeITid'\r\n                                );\r\n                            }\r\n\r\n                            if (moment(tilrettelagtArbeidFom).isBefore(tilrettelegging.behovForTilretteleggingFom)) {\r\n                                set(\r\n                                    tErrors,\r\n                                    `delvisTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                    'valideringsfeil.delvisTilrettelegging.tilrettelagtArbeidForTidlig'\r\n                                );\r\n                            }\r\n\r\n                            if (checkForDuplicateDates(alleDatoer, formatDate(tilrettelagtArbeidFom))) {\r\n                                merge(\r\n                                    tErrors,\r\n                                    set(\r\n                                        tErrors,\r\n                                        `delvisTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                        'valideringsfeil.overlappendePeriode'\r\n                                    )\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (valgteTyper.includes(Tilretteleggingstype.HEL)) {\r\n                if (tilrettelegging.helTilrettelegging) {\r\n                    tilrettelegging.helTilrettelegging.forEach((helTil, ind) => {\r\n                        const { tilrettelagtArbeidFom } = helTil;\r\n\r\n                        if (tilrettelagtArbeidFom === undefined || tilrettelagtArbeidFom === '') {\r\n                            set(\r\n                                tErrors,\r\n                                `helTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                'valideringsfeil.helTilrettelegging.tilrettelagtArbeidFom.påkrevd'\r\n                            );\r\n                        }\r\n\r\n                        if (isInvalidDateString(tilrettelagtArbeidFom)) {\r\n                            set(\r\n                                tErrors,\r\n                                `helTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                'valideringsfeil.helTilrettelegging.tilrettelagtArbeidFom.ugyldigDato'\r\n                            );\r\n                        } else {\r\n                            if (moment(tilrettelagtArbeidFom).isBefore(tilrettelegging.behovForTilretteleggingFom)) {\r\n                                set(\r\n                                    tErrors,\r\n                                    `helTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                    'valideringsfeil.helTilrettelegging.tilrettelagtArbeidForTidlig'\r\n                                );\r\n                            }\r\n\r\n                            if (moment(tilrettelagtArbeidFom).isSameOrAfter(søknad.barn.termindato)) {\r\n                                set(\r\n                                    tErrors,\r\n                                    `helTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                    'valideringsfeil.helTilrettelegging.forLangtFremITid'\r\n                                );\r\n                            }\r\n\r\n                            if (moment(tilrettelagtArbeidFom).isBefore(tiMånederSiden)) {\r\n                                set(\r\n                                    tErrors,\r\n                                    `helTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                    'valideringsfeil.helTilrettelegging.forLangtTilbakeITid'\r\n                                );\r\n                            }\r\n\r\n                            if (checkForDuplicateDates(alleDatoer, formatDate(tilrettelagtArbeidFom))) {\r\n                                merge(\r\n                                    tErrors,\r\n                                    set(\r\n                                        tErrors,\r\n                                        `helTilrettelegging.${ind}.tilrettelagtArbeidFom`,\r\n                                        'valideringsfeil.overlappendePeriode'\r\n                                    )\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (Object.keys(tErrors).length > 0) {\r\n                if (!errors.tilrettelegging) {\r\n                    errors.tilrettelegging = [];\r\n                }\r\n                /* @ts-ignore TS-feil-fiks */\r\n                errors.tilrettelegging.push(tErrors);\r\n            }\r\n        });\r\n    }\r\n    return errors;\r\n};\r\n\r\nexport default validateTilrettelegging;\r\n","import { UferdigSøknad, Søknadfeil } from 'app/types/Søknad';\r\n\r\nconst validateOppsummering = (søknad: UferdigSøknad): Søknadfeil => {\r\n    const errors: Søknadfeil = {};\r\n\r\n    if (søknad.harGodkjentOppsummering !== true) {\r\n        errors.harGodkjentOppsummering = 'valideringsfeil.oppsummeringMåGodkjennes';\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default validateOppsummering;\r\n","import { UferdigSøknad, Søknadfeil } from 'app/types/Søknad';\r\nimport validateIntro from './validateIntro';\r\nimport validateTermin from './validateTermin';\r\nimport { StepID } from 'app/types/SøknadStep';\r\nimport { SøknadRoute, AppRoute } from 'app/types/Routes';\r\nimport validateTilrettelegging from './validateTilrettelegging';\r\nimport validateOppsummering from './validateOppsummering';\r\n\r\nconst validateSøknad =\r\n    (route: SøknadRoute) =>\r\n    (values: UferdigSøknad): Søknadfeil => {\r\n        switch (route.path) {\r\n            case AppRoute.INTRO:\r\n                return validateIntro(values);\r\n\r\n            case AppRoute.SØKNAD:\r\n                return validateUntilStep(route.step, values, route.subStep);\r\n\r\n            default:\r\n                return {};\r\n        }\r\n    };\r\n\r\nconst validateUntilStep = (step: StepID = StepID.INGEN, values: UferdigSøknad, subStep?: string): Søknadfeil => {\r\n    switch (step) {\r\n        case StepID.TERMIN:\r\n            return {\r\n                ...validateIntro(values),\r\n                ...validateTermin(values),\r\n            };\r\n\r\n        case StepID.ARBEIDSFORHOLD:\r\n            return validateUntilStep(StepID.TERMIN, values);\r\n\r\n        case StepID.TILRETTELEGGING:\r\n            return {\r\n                ...validateUntilStep(StepID.ARBEIDSFORHOLD, values),\r\n                ...validateTilrettelegging(values, subStep),\r\n            };\r\n\r\n        case StepID.UTENLANDSOPPHOLD:\r\n            return validateUntilStep(StepID.TILRETTELEGGING, values);\r\n\r\n        case StepID.OPPSUMMERING:\r\n            return {\r\n                ...validateUntilStep(StepID.UTENLANDSOPPHOLD, values),\r\n                ...validateOppsummering(values),\r\n            };\r\n\r\n        case StepID.INGEN:\r\n            return {};\r\n    }\r\n};\r\n\r\nexport default validateSøknad;\r\n","import { Location } from 'history';\r\nimport { isEmpty } from 'lodash';\r\n\r\nimport { appIsRunningInDevEnvironment } from './envUtils';\r\nimport { SøknadRoute, AppRoute } from 'app/types/Routes';\r\nimport { Søknadsgrunnlag, UferdigSøknad } from 'app/types/Søknad';\r\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport SøknadStep, { StepID } from 'app/types/SøknadStep';\r\nimport validateSøknad from './validation/validateSøknad';\r\n\r\nexport const getSøknadStepPath = (step: StepID, subStep?: string) => {\r\n    const path = `${AppRoute.SØKNAD}/${step}`;\r\n    return subStep ? path + `/${subStep}` : path;\r\n};\r\n\r\nfunction pureSplice<T>(array: T[], start: number, deleteCount: number, ...substitutes: T[]): T[] {\r\n    const newArray = [...array];\r\n    newArray.splice(start, deleteCount, ...substitutes);\r\n\r\n    return newArray;\r\n}\r\n\r\nconst mainSteps = [\r\n    StepID.TERMIN,\r\n    StepID.ARBEIDSFORHOLD,\r\n    StepID.TILRETTELEGGING,\r\n    StepID.UTENLANDSOPPHOLD,\r\n    StepID.OPPSUMMERING,\r\n];\r\n\r\nexport const getAllSteps = (søknadsgrunnlag: Søknadsgrunnlag[]): SøknadStep[] => {\r\n    const tilretteleggingSteps = søknadsgrunnlag.map((tilrettelegging) => ({\r\n        step: StepID.TILRETTELEGGING,\r\n        subStep: tilrettelegging.id,\r\n    }));\r\n\r\n    return pureSplice(\r\n        mainSteps.map((step) => ({ step })),\r\n        mainSteps.indexOf(StepID.TILRETTELEGGING),\r\n        1,\r\n        ...tilretteleggingSteps\r\n    );\r\n};\r\n\r\nexport const getAdjacentSteps = (currentStep: SøknadStep, allSteps: SøknadStep[]): [SøknadStep, SøknadStep] => {\r\n    const invalidStep = { step: StepID.INGEN };\r\n    const indexOfCurrentStep = allSteps.findIndex(\r\n        ({ step, subStep }) => step === currentStep.step && subStep === currentStep.subStep\r\n    );\r\n\r\n    if (indexOfCurrentStep === -1) {\r\n        return [invalidStep, invalidStep];\r\n    }\r\n\r\n    const isFirstStep = indexOfCurrentStep === 0;\r\n    const isLastStep = indexOfCurrentStep === allSteps.length - 1;\r\n    const previousStep = isFirstStep ? invalidStep : allSteps[indexOfCurrentStep - 1];\r\n    const nextStep = isLastStep ? invalidStep : allSteps[indexOfCurrentStep + 1];\r\n\r\n    return [previousStep, nextStep];\r\n};\r\n\r\nexport const parsePathFromLocation = (location: Location): SøknadRoute => {\r\n    if (!location) {\r\n        return {\r\n            path: AppRoute.INTRO,\r\n        };\r\n    }\r\n\r\n    const [path, step, subStep] = location.pathname.split('/').slice(1);\r\n    return {\r\n        path: `/${path}` as AppRoute,\r\n        step: step as StepID,\r\n        subStep: subStep as string,\r\n    };\r\n};\r\n\r\nexport const finnArbeidsforholdNavn = (arbeidsgiverId: string, arbeidsforhold: Arbeidsforhold[]): string => {\r\n    const matchingArbeidsforhold = arbeidsforhold.find((forhold) => forhold.guid === arbeidsgiverId);\r\n    if (matchingArbeidsforhold) {\r\n        return matchingArbeidsforhold.arbeidsgiverNavn || matchingArbeidsforhold.guid;\r\n    }\r\n    return arbeidsgiverId;\r\n};\r\n\r\nexport const isNextStepAvailable = (route: SøknadRoute, values: UferdigSøknad): boolean =>\r\n    appIsRunningInDevEnvironment() || isEmpty(validateSøknad(route)(values));\r\n","import { FrilansInformasjonPartial, FrilansInformasjonPartialDTO } from './FrilansInformasjon';\r\nimport { Næring, NæringDTO } from './SelvstendigNæringsdrivende';\r\nimport { AnnenInntekt } from './AnnenInntekt';\r\nimport { Språkkode } from 'common/types';\r\n\r\nexport enum Søkerrolle {\r\n    'MOR' = 'mor',\r\n}\r\n\r\nexport interface Søker {\r\n    rolle: Søkerrolle.MOR;\r\n    harJobbetSomFrilansSiste10Mnd: boolean;\r\n    frilansInformasjon?: FrilansInformasjonPartial;\r\n    harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd: boolean;\r\n    selvstendigNæringsdrivendeInformasjon?: Næring[];\r\n    harHattAnnenInntektSiste10Mnd: boolean;\r\n    andreInntekterSiste10Mnd?: AnnenInntekt[];\r\n    språkkode: Språkkode;\r\n}\r\n\r\nexport interface SøkerDTO {\r\n    rolle: Søkerrolle.MOR;\r\n    harJobbetSomFrilansSiste10Mnd: boolean;\r\n    frilansInformasjon?: FrilansInformasjonPartialDTO;\r\n    harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd: boolean;\r\n    selvstendigNæringsdrivendeInformasjon?: NæringDTO[];\r\n    harHattAnnenInntektSiste10Mnd: boolean;\r\n    andreInntekterSiste10Mnd?: AnnenInntekt[];\r\n    språkkode: Språkkode;\r\n}\r\n\r\nexport default Søker;\r\n","import {\r\n    InformasjonOmUtenlandsoppholdDTO,\r\n    InformasjonOmUtenlandsoppholdPartial,\r\n} from './InformasjonOmUtenlandsopphold';\r\nimport { BarnDTO, UferdigBarn } from './Barn';\r\nimport Søker, { SøkerDTO, Søkerrolle } from './Søker';\r\nimport { UferdigTilrettelegging, Arbeidsforholdstype } from './Tilrettelegging';\r\nimport { Attachment } from 'common/storage/attachment/types/Attachment';\r\nimport { FormikErrors } from 'formik';\r\nimport { TilretteleggingDTO } from './TilretteleggingDTO';\r\n\r\nexport enum Søknadstype {\r\n    'SVANGERSKAPSPENGER' = 'svangerskapspenger',\r\n}\r\n\r\ninterface SøknadDTO {\r\n    type: Søknadstype;\r\n    erEndringssøknad: boolean;\r\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsoppholdDTO;\r\n    barn: BarnDTO;\r\n    vedlegg?: Attachment[];\r\n    tilrettelegging: TilretteleggingDTO[];\r\n    søker: SøkerDTO;\r\n}\r\nexport interface UferdigSøknad {\r\n    harGodkjentVilkår: boolean;\r\n    harGodkjentOppsummering: boolean;\r\n    informasjonOmUtenlandsopphold: InformasjonOmUtenlandsoppholdPartial;\r\n    barn: UferdigBarn;\r\n    tilrettelegging: UferdigTilrettelegging[];\r\n    søknadsgrunnlag: Søknadsgrunnlag[];\r\n    søker: Partial<Søker>;\r\n}\r\n\r\nexport const initialSøknad: UferdigSøknad = {\r\n    harGodkjentVilkår: false,\r\n    harGodkjentOppsummering: false,\r\n    barn: {},\r\n    tilrettelegging: [],\r\n    søknadsgrunnlag: [],\r\n    informasjonOmUtenlandsopphold: {\r\n        jobbetINorgeSiste12Mnd: true,\r\n        iNorgePåHendelsestidspunktet: true,\r\n        tidligereOpphold: [],\r\n        senereOpphold: [],\r\n    },\r\n    søker: {\r\n        rolle: Søkerrolle.MOR,\r\n        selvstendigNæringsdrivendeInformasjon: [],\r\n        andreInntekterSiste10Mnd: [],\r\n    },\r\n};\r\n\r\nexport interface Søknadsgrunnlag {\r\n    id: string;\r\n    type: Arbeidsforholdstype;\r\n}\r\n\r\nexport type Søknadfeil = FormikErrors<UferdigSøknad>;\r\n\r\nexport default SøknadDTO;\r\n","import React, { ReactNode, FunctionComponent, useCallback } from 'react';\r\nimport { Formik } from 'formik';\r\n\r\nimport { CustomFormikProps } from 'app/types/Formik';\r\nimport { FormikBag } from 'app/types/FormikBag';\r\nimport { logValidationErrors } from 'app/utils/devUtils';\r\nimport { parsePathFromLocation } from 'app/utils/stepUtils';\r\nimport { UferdigSøknad, initialSøknad } from 'app/types/Søknad';\r\nimport validateSøknad from 'app/utils/validation/validateSøknad';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n//Hack for å unngå å gjera endringar etter oppgraderingar til formik 2\r\nexport const useIsValid = (values: any) => {\r\n    const location = useLocation();\r\n    const currentPath = parsePathFromLocation(location);\r\n    const errors = validateSøknad(currentPath)(values);\r\n    return Object.keys(errors).length === 0;\r\n}\r\n\r\ninterface Props {\r\n    contentRenderer: (formikProps: CustomFormikProps) => ReactNode;\r\n}\r\n\r\nconst FormikWrapper: FunctionComponent<Props> = ({ contentRenderer }) => {\r\n    const location = useLocation();\r\n\r\n    const currentPath = parsePathFromLocation(location);\r\n\r\n    const validate = useCallback((values: any) => {\r\n        const errors = validateSøknad(currentPath)(values);\r\n        logValidationErrors(currentPath, errors);\r\n        return errors;\r\n    }, [currentPath]);\r\n\r\n    const onSubmit = useCallback((_søknad: UferdigSøknad, { setSubmitting, setFormikState }: FormikBag) => {\r\n        setSubmitting(false);\r\n        setFormikState((f) => ({\r\n            ...f,\r\n            submitCount: 0,\r\n         }));\r\n    }, [])\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialSøknad}\r\n            validate={validate}\r\n            // @ts-ignore Fiks\r\n            onSubmit={onSubmit}\r\n        >\r\n            {(values) => contentRenderer(values)}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default FormikWrapper;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Spinner from 'nav-frontend-spinner';\r\n\r\nimport BEMHelper from 'common/util/bem';\r\nimport './loading.less';\r\n\r\nconst cls = BEMHelper('loading');\r\n\r\nconst Loading: FunctionComponent = () => {\r\n    return (\r\n        <div className={cls.block}>\r\n            <Spinner type=\"XXL\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import { Søknadsgrunnlag } from 'app/types/Søknad';\r\nimport {\r\n    Arbeidsforholdstype,\r\n    UferdigTilrettelegging,\r\n    Tilrettelegging,\r\n    Tilretteleggingstype,\r\n    HelTilrettelegging,\r\n    DelvisTilrettelegging,\r\n    IngenTilrettelegging,\r\n} from 'app/types/Tilrettelegging';\r\nimport {\r\n    ArbeidsforholdDTO,\r\n    HelTilretteleggingDTO,\r\n    IngenTilretteleggingDTO,\r\n    DelvisTilretteleggingDTO,\r\n    TilretteleggingDTO,\r\n} from '../types/TilretteleggingDTO';\r\n\r\nexport const mapGrunnlagTilTilrettelegging = (søknadsgrunnlag: Søknadsgrunnlag[]) => {\r\n    return søknadsgrunnlag.map(({ id, type }) => {\r\n        const arbeidsgiversId =\r\n            type === Arbeidsforholdstype.VIRKSOMHET || type === Arbeidsforholdstype.PRIVAT ? { id } : {};\r\n\r\n        return {\r\n            id,\r\n            vedlegg: [],\r\n            arbeidsforhold: {\r\n                ...arbeidsgiversId,\r\n                type,\r\n            },\r\n        };\r\n    });\r\n};\r\n\r\nexport const mergeSøknadsgrunnlagIntoTilrettelegging = (\r\n    søknadsgrunnlag: Søknadsgrunnlag[],\r\n    existingTilrettelegging: UferdigTilrettelegging[]\r\n) => {\r\n    const nyeTilrettelegginger = mapGrunnlagTilTilrettelegging(\r\n        søknadsgrunnlag.filter(\r\n            (grunnlag: Søknadsgrunnlag) =>\r\n                !existingTilrettelegging.find((t: UferdigTilrettelegging) => t.id === grunnlag.id)\r\n        )\r\n    );\r\n\r\n    const selectedTilrettelegging = existingTilrettelegging.filter((t) =>\r\n        søknadsgrunnlag.map((s) => s.id).includes(t.id)\r\n    );\r\n\r\n    return [...selectedTilrettelegging, ...nyeTilrettelegginger];\r\n};\r\n\r\nconst mapHelTilrettelegging = (\r\n    tilrettelegging: Tilrettelegging,\r\n    arbeidsforhold: ArbeidsforholdDTO,\r\n    helTilrettelegging: HelTilrettelegging\r\n): HelTilretteleggingDTO | undefined => {\r\n    if (!tilrettelegging.helTilrettelegging) {\r\n        return undefined;\r\n    }\r\n    return {\r\n        type: Tilretteleggingstype.HEL,\r\n        behovForTilretteleggingFom: new Date(tilrettelegging.behovForTilretteleggingFom),\r\n        arbeidsforhold,\r\n        vedlegg: tilrettelegging.vedlegg,\r\n        tilrettelagtArbeidFom: new Date(helTilrettelegging.tilrettelagtArbeidFom),\r\n    };\r\n};\r\n\r\nconst mapDelvisTilrettelegging = (\r\n    tilrettelegging: Tilrettelegging,\r\n    arbeidsforhold: ArbeidsforholdDTO,\r\n    delvisTilrettelegging: DelvisTilrettelegging\r\n): DelvisTilretteleggingDTO | undefined => {\r\n    if (!tilrettelegging.delvisTilrettelegging) {\r\n        return undefined;\r\n    }\r\n    return {\r\n        type: Tilretteleggingstype.DELVIS,\r\n        behovForTilretteleggingFom: new Date(tilrettelegging.behovForTilretteleggingFom),\r\n        arbeidsforhold,\r\n        vedlegg: tilrettelegging.vedlegg,\r\n        tilrettelagtArbeidFom: new Date(delvisTilrettelegging.tilrettelagtArbeidFom),\r\n        stillingsprosent: delvisTilrettelegging.stillingsprosent,\r\n    };\r\n};\r\n\r\nconst mapIngenTilrettelegging = (\r\n    tilrettelegging: Tilrettelegging,\r\n    arbeidsforhold: ArbeidsforholdDTO,\r\n    ingenTilrettelegging: IngenTilrettelegging\r\n): IngenTilretteleggingDTO | undefined => {\r\n    if (!tilrettelegging.ingenTilrettelegging) {\r\n        return undefined;\r\n    }\r\n    return {\r\n        type: Tilretteleggingstype.INGEN,\r\n        behovForTilretteleggingFom: new Date(tilrettelegging.behovForTilretteleggingFom),\r\n        arbeidsforhold,\r\n        vedlegg: tilrettelegging.vedlegg,\r\n        slutteArbeidFom: new Date(ingenTilrettelegging.slutteArbeidFom),\r\n    };\r\n};\r\n\r\nconst mapArbeidsforholdForTilrettelegging = (tilrettelegging: UferdigTilrettelegging): ArbeidsforholdDTO => {\r\n    switch (tilrettelegging.arbeidsforhold.type) {\r\n        case Arbeidsforholdstype.FRILANSER:\r\n            return {\r\n                type: Arbeidsforholdstype.FRILANSER,\r\n                risikoFaktorer: tilrettelegging.risikoFaktorer,\r\n                tilretteleggingstiltak: tilrettelegging.tilretteleggingstiltak,\r\n            };\r\n        case Arbeidsforholdstype.SELVSTENDIG:\r\n            return {\r\n                type: Arbeidsforholdstype.SELVSTENDIG,\r\n                risikoFaktorer: tilrettelegging.risikoFaktorer,\r\n                tilretteleggingstiltak: tilrettelegging.tilretteleggingstiltak,\r\n            };\r\n        case Arbeidsforholdstype.PRIVAT:\r\n            return {\r\n                type: Arbeidsforholdstype.PRIVAT,\r\n                id: tilrettelegging.arbeidsforhold.id || tilrettelegging.id,\r\n            };\r\n        case Arbeidsforholdstype.VIRKSOMHET:\r\n            return {\r\n                type: Arbeidsforholdstype.VIRKSOMHET,\r\n                id: tilrettelegging.arbeidsforhold.id || tilrettelegging.id,\r\n            };\r\n    }\r\n};\r\n\r\nexport const mapTilretteleggingerTilDTO = (tilrettelegging: UferdigTilrettelegging[]): TilretteleggingDTO[] => {\r\n    const dto: TilretteleggingDTO[] = [];\r\n    tilrettelegging.forEach((t) => {\r\n        const arbeidsforhold = mapArbeidsforholdForTilrettelegging(t);\r\n        if (t.helTilrettelegging) {\r\n            t.helTilrettelegging.forEach((helTil: HelTilrettelegging) => {\r\n                const helTilrettelegging = mapHelTilrettelegging(t, arbeidsforhold, helTil);\r\n                if (helTilrettelegging) {\r\n                    dto.push(helTilrettelegging);\r\n                }\r\n            });\r\n        }\r\n        if (t.delvisTilrettelegging) {\r\n            t.delvisTilrettelegging.forEach((delTil: DelvisTilrettelegging) => {\r\n                const delvisTilrettelegging = mapDelvisTilrettelegging(t, arbeidsforhold, delTil);\r\n                if (delvisTilrettelegging) {\r\n                    dto.push(delvisTilrettelegging);\r\n                }\r\n            });\r\n        }\r\n        if (t.ingenTilrettelegging) {\r\n            t.ingenTilrettelegging.forEach((ingenTil: IngenTilrettelegging) => {\r\n                const ingenTilrettelegging = mapIngenTilrettelegging(t, arbeidsforhold, ingenTil);\r\n                if (ingenTilrettelegging) {\r\n                    dto.push(ingenTilrettelegging);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return dto;\r\n};\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\r\n\r\nimport Arbeidsforhold from '../../../app/types/Arbeidsforhold';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport { formatDate } from 'app/utils/formatDate';\r\nimport './arbeidsforhold.less';\r\nimport { dateToISOFormattedDateString } from 'common/util/datoUtils';\r\n\r\ninterface InformasjonOmArbeidsforholdProps {\r\n    arbeidsforhold: Arbeidsforhold;\r\n}\r\n\r\ntype Props = InformasjonOmArbeidsforholdProps;\r\nconst InformasjonOmArbeidsforhold: React.FunctionComponent<Props> = ({ arbeidsforhold }: Props) => {\r\n    const intl = useIntl();\r\n    const cls = BEMHelper('arbeidsforholdInfoBox');\r\n    return (\r\n        <div className={cls.block}>\r\n            <div className={cls.element('topRow')}>\r\n                {arbeidsforhold.arbeidsgiverIdType === 'orgnr' && (\r\n                    <Normaltekst>\r\n                        {getMessage(intl, 'annenInntekt.arbeidsforhold.organisasjonsnummer', {\r\n                            organisasjonsnummer: arbeidsforhold.arbeidsgiverId,\r\n                        })}\r\n                    </Normaltekst>\r\n                )}\r\n                <Normaltekst className={cls.element('stillingsprosent')}>\r\n                    {getMessage(intl, 'annenInntekt.arbeidsforhold.stillingsprosent', {\r\n                        stillingsprosent: arbeidsforhold.stillingsprosent,\r\n                    })}\r\n                </Normaltekst>\r\n            </div>\r\n            <Element>\r\n                {arbeidsforhold.arbeidsgiverIdType === 'orgnr'\r\n                    ? arbeidsforhold.arbeidsgiverNavn\r\n                    : getMessage(intl, 'arbeidsgiver')}\r\n            </Element>\r\n            <Normaltekst>\r\n                {getMessage(intl, 'annenInntekt.arbeidsforhold.periode', {\r\n                    fom: formatDate(dateToISOFormattedDateString(arbeidsforhold.fom)),\r\n                    tom: arbeidsforhold.tom\r\n                        ? formatDate(dateToISOFormattedDateString(arbeidsforhold.tom))\r\n                        : getMessage(intl, 'pågående'),\r\n                })}\r\n            </Normaltekst>\r\n        </div>\r\n    );\r\n};\r\nexport default InformasjonOmArbeidsforhold;\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\n\r\nimport Arbeidsforhold from '../../../app/types/Arbeidsforhold';\r\n\r\nimport ArbeidsforholdInfoBox from 'common/components/arbeidsforhold-infobox/InformasjonOmArbeidsforhold';\r\nimport getMessage from 'common/util/i18nUtils';\r\n\r\nimport './arbeidsforhold.less';\r\nimport { guid } from 'nav-frontend-js-utils';\r\n\r\ninterface ArbeidsforholdInfoWrapperProps {\r\n    arbeidsforhold: Arbeidsforhold[] | undefined;\r\n}\r\nconst InformasjonOmArbeidsforholdWrapper: React.FunctionComponent<ArbeidsforholdInfoWrapperProps> = ({\r\n    arbeidsforhold,\r\n}) => {\r\n    const intl = useIntl();\r\n    const harArbeidsforhold = arbeidsforhold !== undefined && arbeidsforhold.length > 0;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!harArbeidsforhold && (\r\n                <div className=\"arbeidsforholdInfoBox\">\r\n                    <Normaltekst>\r\n                        {getMessage(intl, 'annenInntekt.arbeidsforhold.ingenRegistrerteArbeidsforhold')}\r\n                    </Normaltekst>\r\n                </div>\r\n            )}\r\n            {harArbeidsforhold && (\r\n                <ul className=\"arbeidsforholdList\">\r\n                    {arbeidsforhold!.map((arbeidsforholdElement: Arbeidsforhold) => (\r\n                        <li key={guid()}>\r\n                            <ArbeidsforholdInfoBox\r\n                                key={arbeidsforholdElement.arbeidsgiverId}\r\n                                arbeidsforhold={arbeidsforholdElement}\r\n                            />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default InformasjonOmArbeidsforholdWrapper;\r\n","import React, { ReactNode } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './veilederinfo.less';\r\nimport Veileder, { Ansiktstype } from '../veileder/Veileder';\r\n\r\ntype Infotype = 'info' | 'advarsel' | 'feil';\r\n\r\nexport interface VeilederInfoProps {\r\n    visVeileder?: boolean;\r\n    stil?: 'kompakt' | 'normal' | 'kunTekst';\r\n    type?: Infotype;\r\n    maxWidth?: '30' | '45';\r\n    CustomIcon?: any;\r\n    children: ReactNode | ReactNode[];\r\n}\r\n\r\nconst getAnsiktFromType = (type: Infotype): Ansiktstype => {\r\n    switch (type) {\r\n        case 'advarsel':\r\n            return 'undrende';\r\n        case 'feil':\r\n            return 'skeptisk';\r\n        default:\r\n            return 'glad';\r\n    }\r\n};\r\n\r\nconst Veilederinfo: React.FunctionComponent<VeilederInfoProps> = ({\r\n    visVeileder = true,\r\n    stil = 'normal',\r\n    type = 'info',\r\n    maxWidth,\r\n    children,\r\n    CustomIcon,\r\n}) => {\r\n    return (\r\n        <div\r\n            className={classnames(\r\n                'veilederinfo',\r\n                `veilederinfo--${stil}`,\r\n                `veilederinfo--${type}`,\r\n                maxWidth ? `veilederinfo--maxWidth-${maxWidth}` : null,\r\n                {\r\n                    'veilederinfo--utenVeileder': !visVeileder,\r\n                }\r\n            )}\r\n        >\r\n            {visVeileder && (\r\n                <span className=\"veilederinfo__veileder\" role=\"presentation\" aria-hidden={true}>\r\n                    {CustomIcon !== undefined ? (\r\n                        <CustomIcon />\r\n                    ) : (\r\n                        <Veileder farge=\"lilla\" ansikt={getAnsiktFromType(type)} stil=\"kompakt\" />\r\n                    )}\r\n                </span>\r\n            )}\r\n            <div className={classnames('veilederinfo__innhold', `veilederinfo__innhold--${type}`, 'typo-normal')}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Veilederinfo;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { CheckboksPanelGruppe, CheckboksPanelGruppeProps } from 'nav-frontend-skjema';\r\nimport { FieldArrayRenderProps, FieldArray } from 'formik';\r\nimport { Omit } from 'lodash';\r\nimport { Søknadsgrunnlag } from 'app/types/Søknad';\r\nimport { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\r\n\r\nexport interface SøknadsgrunnlagOption {\r\n    value: string;\r\n    type: Arbeidsforholdstype;\r\n    label: string;\r\n}\r\n\r\ninterface OwnProps {\r\n    name: string;\r\n    label: string;\r\n    options: SøknadsgrunnlagOption[];\r\n}\r\n\r\ntype Props = OwnProps & Omit<CheckboksPanelGruppeProps, 'onChange' | 'checkboxes' | 'legend'>;\r\n\r\nconst VelgSøknadsgrunnlag: FunctionComponent<Props> = (props) => {\r\n    const { name, label, options } = props;\r\n\r\n    return (\r\n        <FieldArray\r\n            name={name}\r\n            render={({ form, push, remove }: FieldArrayRenderProps) => {\r\n                return (\r\n                    <CheckboksPanelGruppe\r\n                        legend={label}\r\n                        checkboxes={options.map((option) => ({\r\n                            value: option.value,\r\n                            label: option.label,\r\n                            checked: form.values[name].some((v: Søknadsgrunnlag) => v.id === option.value),\r\n                        }))}\r\n                        onChange={(_, value) => {\r\n                            const indexOfGrunnlag = form.values[name].findIndex((v: Søknadsgrunnlag) => v.id === value);\r\n                            const matchingOption = options.find((o) => o.value === value);\r\n\r\n                            if (matchingOption) {\r\n                                if (indexOfGrunnlag === -1) {\r\n                                    push({\r\n                                        id: value,\r\n                                        type: matchingOption.type,\r\n                                    });\r\n                                } else {\r\n                                    remove(indexOfGrunnlag);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default VelgSøknadsgrunnlag;\r\n","import React from 'react';\r\nimport { RadioPanelGruppe, RadioPanelGruppeProps } from 'nav-frontend-skjema';\r\nimport Infoboks from 'common/components/infoboks/Infoboks';\r\n\r\nimport './radioPanelGruppeResponsive.less';\r\n\r\ninterface ResponsiveProps {\r\n    twoColumns?: boolean;\r\n    fieldsetClassname?: string;\r\n    infoboksTekst?: string | React.ReactNode;\r\n}\r\n\r\nexport type RadioPanelGruppeResponsiveProps = ResponsiveProps & RadioPanelGruppeProps;\r\n\r\nclass RadioPanelGruppeResponsive extends React.Component<RadioPanelGruppeResponsiveProps> {\r\n    render() {\r\n        const { infoboksTekst, fieldsetClassname, legend, name, radios, checked, feil, onChange } = this.props;\r\n\r\n        return (\r\n            <div className=\"radioPanelGruppe\">\r\n                {infoboksTekst && <Infoboks fieldsetClsName={fieldsetClassname} tekst={infoboksTekst} />}\r\n                <RadioPanelGruppe\r\n                    feil={feil}\r\n                    name={name}\r\n                    radios={radios}\r\n                    legend={legend}\r\n                    checked={checked}\r\n                    onChange={onChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RadioPanelGruppeResponsive;\r\n","import { FormikErrors } from 'formik';\r\nimport { SummaryError } from 'common/lib/validation/types';\r\nimport { UferdigSøknad } from 'app/types/Søknad';\r\nimport { IntlShape } from 'react-intl';\r\nimport getMessage from 'common/util/i18nUtils';\r\n\r\nexport const flattenErrors = (errors: FormikErrors<UferdigSøknad>, pathPrefix = ''): SummaryError[] => {\r\n    let flattened: SummaryError[] = [];\r\n\r\n    for (const key of Object.keys(errors)) {\r\n        const prefix = pathPrefix ? `${pathPrefix}.${key}` : key;\r\n\r\n        if (typeof errors[key] === 'string') {\r\n            flattened.push({\r\n                name: prefix,\r\n                text: errors[key],\r\n            });\r\n        } else if (typeof errors[key] === 'object') {\r\n            if (errors[key].intlKey) {\r\n                const { intlKey, values } = errors[key];\r\n                flattened.push({\r\n                    name: prefix,\r\n                    text: {\r\n                        intlKey,\r\n                        values,\r\n                    },\r\n                });\r\n            } else {\r\n                flattened = flattened.concat(flattenErrors(errors[key], prefix));\r\n            }\r\n        }\r\n    }\r\n\r\n    return flattened;\r\n};\r\n\r\nexport const translateError = (intl: IntlShape, error?: any) => {\r\n    if (error && error.intlKey) {\r\n        return getMessage(intl, error.intlKey, error.values);\r\n    }\r\n\r\n    return typeof error === 'string' ? getMessage(intl, error) : '';\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Field, FieldProps } from 'formik';\r\nimport { get, Omit } from 'lodash';\r\n\r\nimport RadioPanelGruppeResponsive, {\r\n    RadioPanelGruppeResponsiveProps,\r\n} from 'common/components/skjema/elements/radio-panel-gruppe-responsive/RadioPanelGruppeResponsive';\r\nimport { useIntl } from 'react-intl';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { translateError } from 'app/utils/errorUtils';\r\n\r\ntype Props = Omit<RadioPanelGruppeResponsiveProps, 'radios' | 'onChange'> & {\r\n    labels?: {\r\n        ja: string;\r\n        nei: string;\r\n    };\r\n};\r\n\r\nenum Radios {\r\n    'JA' = 'ja',\r\n    'NEI' = 'nei',\r\n}\r\n\r\nconst JaNeiSpørsmål: FunctionComponent<Props> = ({ labels, name, ...radioPanelGruppeProps }) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <Field\r\n            name={name}\r\n            type=\"string\"\r\n            render={({ field, form }: FieldProps) => {\r\n                let checked;\r\n                if (field.value === true) {\r\n                    checked = Radios.JA;\r\n                } else if (field.value === false) {\r\n                    checked = Radios.NEI;\r\n                }\r\n\r\n                const radios = [\r\n                    {\r\n                        label: labels ? labels.ja : getMessage(intl, 'jaNeiSpørsmål.ja'),\r\n                        value: Radios.JA,\r\n                    },\r\n                    {\r\n                        label: labels ? labels.nei : getMessage(intl, 'jaNeiSpørsmål.nei'),\r\n                        value: Radios.NEI,\r\n                    },\r\n                ];\r\n\r\n                const feilmelding = get(form.errors, name);\r\n                const feil = feilmelding && form.submitCount > 0 ? translateError(intl, feilmelding) : undefined;\r\n\r\n                return (\r\n                    <RadioPanelGruppeResponsive\r\n                        {...radioPanelGruppeProps}\r\n                        name={name}\r\n                        radios={radios}\r\n                        feil={feil}\r\n                        checked={checked}\r\n                        onChange={(_, value) => {\r\n                            form.setFieldValue(name, value === Radios.JA);\r\n                        }}\r\n                    />\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default JaNeiSpørsmål;\r\n","import * as React from 'react';\r\nimport BEMHelper from 'common/util/bem';\r\nimport './list.less';\r\n\r\ninterface ListProps<T> {\r\n    data: T[];\r\n    renderElement: (data: T, index: number) => JSX.Element;\r\n    className?: string;\r\n}\r\n\r\nconst bem = BEMHelper('list');\r\n\r\nexport default class List<T> extends React.Component<ListProps<T>> {\r\n    render() {\r\n        const { data, renderElement, className } = this.props;\r\n        return (\r\n            <ul className={`${bem.block} ${className ? className : ''}`}>\r\n                {data.map((dataObject: T, i: number) => renderElement(dataObject, i))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","import React, { FunctionComponent, useState } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { connect as formConnect, FieldArray } from 'formik';\r\nimport get from 'lodash/get';\r\n\r\nimport { FormikProps } from 'app/types/Formik';\r\nimport { Knapp } from 'nav-frontend-knapper';\r\nimport Block from 'common/components/block/Block';\r\nimport JaNeiSpørsmål from 'app/formik/wrappers/JaNeiSpørsmål';\r\nimport Modal from 'nav-frontend-modal';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport List from 'common/components/list/List';\r\nimport { UferdigSøknad } from 'app/types/Søknad';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport { AnnenInntekt } from 'app/types/AnnenInntekt';\r\nimport { Næring } from 'app/types/SelvstendigNæringsdrivende';\r\nimport './arbeidSeksjon.less';\r\n\r\nexport interface ModalFormProps<T> {\r\n    element?: T;\r\n    endre: boolean;\r\n    onAdd: (element: T) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nexport interface ModalSummaryProps<T> {\r\n    element: T;\r\n    onEdit: () => void;\r\n    onDelete: () => void;\r\n    editButtonAriaText?: string;\r\n    deleteButtonAriaText?: string;\r\n    //intl: InjectedIntl;\r\n}\r\n\r\ninterface OwnProps<T> {\r\n    name: string;\r\n    listName: string;\r\n    legend: string;\r\n    labels?: {\r\n        ja: string;\r\n        nei: string;\r\n    };\r\n    buttonLabel: string;\r\n    infoboksTekst?: string | React.ReactNode;\r\n    summaryListTitle?: {\r\n        title: string;\r\n        info?: string;\r\n    };\r\n    summaryListElementComponent: FunctionComponent<ModalSummaryProps<T>>;\r\n    renderForm: (props: ModalFormProps<T>) => React.ReactNode;\r\n}\r\n\r\ntype OuterProps = OwnProps<any>;\r\ntype Props = OuterProps & FormikProps;\r\n\r\nconst cls = BEMHelper('arbeidSeksjon');\r\n\r\nconst Arbeidsforholdseksjon: FunctionComponent<Props> = (props: Props) => {\r\n    const intl = useIntl();\r\n    const { formik, name, listName, legend, labels, buttonLabel, summaryListTitle, infoboksTekst } = props;\r\n    const visLeggTilKnapp = get(formik.values, name) === true;\r\n\r\n    const elementer: any[] = get(formik.values, listName, []);\r\n\r\n    const [currentIndex, selectIndex] = useState(get(elementer, 'length', 0));\r\n    const [modalIsOpen, toggleModal] = useState(false);\r\n    const [endre, toggleEndring] = useState(false);\r\n\r\n    const openModalForAdding = () => {\r\n        toggleEndring(false);\r\n        toggleModal(true);\r\n    };\r\n\r\n    const openModalForEditing = (index: number) => () => {\r\n        selectIndex(index);\r\n        toggleEndring(true);\r\n        toggleModal(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Block margin=\"none\">\r\n                <JaNeiSpørsmål\r\n                    twoColumns={true}\r\n                    name={name}\r\n                    legend={legend}\r\n                    labels={labels}\r\n                    infoboksTekst={infoboksTekst}\r\n                />\r\n            </Block>\r\n\r\n            <FieldArray\r\n                name={listName}\r\n                render={({ push, replace, remove }) => {\r\n                    return (\r\n                        <div className={cls.block}>\r\n                            <Block\r\n                                margin=\"none\"\r\n                                marginTop={summaryListTitle ? 's' : undefined}\r\n                                visible={elementer.length > 0 && visLeggTilKnapp}\r\n                                header={summaryListTitle}\r\n                            >\r\n                                <List\r\n                                    data={elementer}\r\n                                    renderElement={(element, index: number) => {\r\n                                        return (\r\n                                            <props.summaryListElementComponent\r\n                                                key={`${listName}-${index}`}\r\n                                                element={element}\r\n                                                onEdit={openModalForEditing(index)}\r\n                                                onDelete={() => {\r\n                                                    remove(index);\r\n                                                }}\r\n                                            />\r\n                                        );\r\n                                    }}\r\n                                />\r\n                            </Block>\r\n                            <Block visible={visLeggTilKnapp} marginTop=\"s\" margin=\"none\">\r\n                                <Knapp\r\n                                    className={cls.element('leggTil')}\r\n                                    onClick={openModalForAdding}\r\n                                    htmlType=\"button\"\r\n                                >\r\n                                    {buttonLabel}\r\n                                </Knapp>\r\n                            </Block>\r\n\r\n                            <Modal\r\n                                closeButton={true}\r\n                                isOpen={modalIsOpen}\r\n                                shouldCloseOnOverlayClick={false}\r\n                                contentLabel={getMessage(intl, `utenlandsopphold.modal.ariaLabel`)}\r\n                                onRequestClose={() => toggleModal(false)}\r\n                            >\r\n                                {props.renderForm({\r\n                                    endre,\r\n                                    element: endre ? elementer[currentIndex] : undefined,\r\n                                    onCancel: () => toggleModal(false),\r\n                                    onAdd: (arbeidsforhold: Næring | AnnenInntekt) => {\r\n                                        endre ? replace(currentIndex, arbeidsforhold) : push(arbeidsforhold);\r\n                                        toggleModal(false);\r\n                                    },\r\n                                })}\r\n                            </Modal>\r\n                        </div>\r\n                    );\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default formConnect<OuterProps, UferdigSøknad>(Arbeidsforholdseksjon);\r\n","import { TidsperiodeMedValgfriSluttdato, TidsperiodeMedValgfriSluttdatoDTO } from 'common/types';\r\n\r\nexport enum Næringstype {\r\n    'FISKER' = 'FISKE',\r\n    'JORDBRUK' = 'JORDBRUK_SKOGBRUK',\r\n    'DAGMAMMA' = 'DAGMAMMA',\r\n    'ANNET' = 'ANNEN',\r\n}\r\n\r\nexport interface Næring {\r\n    næringstyper: Næringstype[];\r\n    tidsperiode: Partial<TidsperiodeMedValgfriSluttdato>;\r\n    næringsinntekt: string;\r\n    pågående: boolean;\r\n    navnPåNæringen: string;\r\n    organisasjonsnummer: string;\r\n    registrertINorge: boolean;\r\n    registrertILand?: string;\r\n    stillingsprosent?: string;\r\n    harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene?: boolean;\r\n    oppstartsdato?: string;\r\n    hattVarigEndringAvNæringsinntektSiste4Kalenderår?: boolean;\r\n    endringAvNæringsinntektInformasjon?: EndringAvNæringsinntektInformasjon;\r\n    harRegnskapsfører: boolean;\r\n    regnskapsfører?: Næringsrelasjon;\r\n    harRevisor: boolean;\r\n    revisor?: Næringsrelasjon;\r\n    kanInnhenteOpplsyningerFraRevisor?: boolean;\r\n}\r\n\r\nexport interface EndringAvNæringsinntektInformasjon {\r\n    dato: string;\r\n    næringsinntektEtterEndring: string;\r\n    forklaring: string;\r\n}\r\n\r\nexport interface Næringsrelasjon {\r\n    navn: string;\r\n    telefonnummer: string;\r\n    erNærVennEllerFamilie: boolean;\r\n}\r\n\r\nexport interface NæringDTO {\r\n    næringstyper: Næringstype[];\r\n    tidsperiode: Partial<TidsperiodeMedValgfriSluttdatoDTO>;\r\n    næringsinntekt: string;\r\n    pågående: boolean;\r\n    navnPåNæringen: string;\r\n    organisasjonsnummer: string;\r\n    registrertINorge: boolean;\r\n    registrertILand?: string;\r\n    stillingsprosent?: string;\r\n    harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene?: boolean;\r\n    oppstartsdato?: Date;\r\n    hattVarigEndringAvNæringsinntektSiste4Kalenderår?: boolean;\r\n    endringAvNæringsinntektInformasjon?: EndringAvNæringsinntektInformasjonDTO;\r\n    harRegnskapsfører: boolean;\r\n    regnskapsfører?: Næringsrelasjon;\r\n    harRevisor: boolean;\r\n    revisor?: Næringsrelasjon;\r\n    kanInnhenteOpplsyningerFraRevisor?: boolean;\r\n}\r\n\r\nexport interface EndringAvNæringsinntektInformasjonDTO {\r\n    dato: Date;\r\n    næringsinntektEtterEndring: string;\r\n    forklaring: string;\r\n}\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { SkjemaGruppe, CheckboksPanel, CheckboksPanelGruppeProps, CheckboxProps } from 'nav-frontend-skjema';\r\nimport './checkboksPanelGruppeResponsive.less';\r\nimport 'nav-frontend-skjema-style';\r\n\r\ninterface ResponsiveProps {\r\n    columns?: undefined | 2 | 1;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport type CheckboxPanelgruppeResponsiveProps = CheckboksPanelGruppeProps & ResponsiveProps;\r\n\r\nclass CheckboksPanelGruppeResponsive extends React.Component<CheckboxPanelgruppeResponsiveProps> {\r\n    render() {\r\n        const { feil, columns, disabled = false, legend, checkboxes, onChange } = this.props;\r\n\r\n        if (checkboxes === undefined) {\r\n            return null;\r\n        }\r\n\r\n        const cls = classnames('checkboksPanelWrapper', {\r\n            'checkboksPanelWrapper--twoColumns': columns === 2,\r\n            'checkboksPanelWrapper--oneColumn': columns === 1,\r\n        });\r\n\r\n        return (\r\n            <div className=\"checkboksPanelGruppe\">\r\n                <SkjemaGruppe className=\"checkboksPanelGruppe--responsive\" feil={feil} legend={legend}>\r\n                    {checkboxes &&\r\n                        checkboxes.map((checkboks: CheckboxProps, index: number) => {\r\n                            return (\r\n                                <div className={cls} key={`${checkboks.value}`}>\r\n                                    <CheckboksPanel\r\n                                        {...checkboks}\r\n                                        checked={checkboks.checked || false}\r\n                                        disabled={disabled || false}\r\n                                        onChange={(event) => onChange(event, checkboks.value)}\r\n                                        key={index}\r\n                                        feil={!!checkboks.feil}\r\n                                    />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                </SkjemaGruppe>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CheckboksPanelGruppeResponsive;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { FieldArrayRenderProps, FieldArray } from 'formik';\r\nimport CheckboksPanelGruppeResponsive, {\r\n    CheckboxPanelgruppeResponsiveProps,\r\n} from 'common/components/skjema/elements/checkbox-panel-gruppe-responsive/CheckboksPanelGruppeResponsive';\r\nimport { Omit, get } from 'lodash';\r\nimport { translateError } from '../../utils/errorUtils';\r\nimport { useIntl } from 'react-intl';\r\n\r\ninterface OwnProps {\r\n    name: string;\r\n    label: string | React.ReactNode;\r\n    options: {\r\n        value: string;\r\n        label: string;\r\n    }[];\r\n}\r\n\r\ntype Props = OwnProps & Omit<CheckboxPanelgruppeResponsiveProps, 'onChange' | 'checkboxes' | 'legend'>;\r\n\r\nconst CheckboksPanelGruppe: FunctionComponent<Props> = (props) => {\r\n    const intl = useIntl();\r\n    const { name, label, options, ...checkboksPanelGruppeProps } = props;\r\n\r\n    return (\r\n        <FieldArray\r\n            name={name}\r\n            render={({ form, push, remove }: FieldArrayRenderProps) => {\r\n                const feilmelding = get(form.errors, name) as string;\r\n                return (\r\n                    <CheckboksPanelGruppeResponsive\r\n                        {...checkboksPanelGruppeProps}\r\n                        feil={feilmelding && form.submitCount > 0 ? translateError(intl, feilmelding) : undefined}\r\n                        legend={label}\r\n                        checkboxes={options.map((option) => {\r\n                            const values = get(form.values, name);\r\n                            return {\r\n                                ...option,\r\n                                checked: values && values.includes(option.value) ? true : false,\r\n                            };\r\n                        })}\r\n                        onChange={(_, value) => {\r\n                            const values = get(form.values, name) || [];\r\n                            const indexOfGrunnlag = values.indexOf(value);\r\n                            if (indexOfGrunnlag === -1) {\r\n                                push(value);\r\n                            } else {\r\n                                remove(indexOfGrunnlag);\r\n                            }\r\n                        }}\r\n                    />\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CheckboksPanelGruppe;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Field, FieldProps } from 'formik';\r\nimport { Input, InputProps } from 'nav-frontend-skjema';\r\nimport { get } from 'lodash';\r\nimport { useIntl } from 'react-intl';\r\nimport { translateError } from 'app/utils/errorUtils';\r\n\r\ninterface OwnProps {\r\n    name: string;\r\n}\r\n\r\ntype Props = OwnProps & InputProps;\r\n\r\nconst InputField: FunctionComponent<Props> = ({ name, ...inputProps }) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <Field\r\n            name={name}\r\n            type={inputProps.type}\r\n            render={({ field, form }: FieldProps) => {\r\n                const feilmelding = get(form.errors, name);\r\n                const feil =\r\n                    feilmelding && form.submitCount > 0\r\n                        ? {\r\n                              feilmelding: translateError(intl, feilmelding),\r\n                          }\r\n                        : undefined;\r\n\r\n                return (\r\n                    <Input\r\n                        {...field}\r\n                        {...inputProps}\r\n                        value={field.value === undefined ? '' : field.value}\r\n                        feil={feil?.feilmelding}\r\n                    />\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default InputField;\r\n","import * as countries from 'i18n-iso-countries';\r\n\r\n// prettier-ignore\r\nconst countriesInEøs = [\r\n    'BE', 'BG', 'DK', 'EE', 'FI', 'FR', 'GR', 'IE', 'IS', 'IT', 'HR', 'CY', 'LV', 'LI', 'LT', 'LU', 'MT', 'NL', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'GB', 'SE', 'CZ', 'DE', 'HU', 'AT', 'CH'];\r\n\r\nconst isCountryInEøs = (countryCode: string) => countriesInEøs.includes(countryCode);\r\nconst isCountryNorge = (countryCode: string) => countryCode === 'NO';\r\n\r\nexport type Countries = [string, string][];\r\n\r\nexport const getCountries = (visLandUtenforEøs: boolean, visNorge: boolean, locale: string): Countries => {\r\n    const countryNames: [string, string][] = Object.entries(countries.getNames(locale));\r\n    const namesDescending = (a: string[], b: string[]) => a[1].localeCompare(b[1], locale);\r\n    const applyFilters = ([countryCode]: string[]) => {\r\n        const keepNorway = visNorge || !isCountryNorge(countryCode);\r\n        const keepEøsCountry = visLandUtenforEøs || isCountryInEøs(countryCode);\r\n\r\n        return keepNorway && keepEøsCountry;\r\n    };\r\n\r\n    return countryNames.sort(namesDescending).filter(applyFilters);\r\n};\r\n\r\nexport const getContryName = (countryList: Countries, contrycode: string): string | undefined => {\r\n    const country = countryList.find((c) => c[0] === contrycode);\r\n    return country ? country[1] : undefined;\r\n};\r\n\r\nexport default getCountries;\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport AriaText from 'common/components/aria/AriaText';\r\nimport { getAvgrensningerDescriptionForInput } from 'common/components/skjema/elements/dato-input/datoInputDescription';\r\nimport { Avgrensninger, Tidsperiode } from 'common/types';\r\nimport BEMHelper from 'common/util/bem';\r\nimport { Datepicker, DatepickerLimitations } from 'nav-datovelger';\r\nimport { DatepickerProps } from 'nav-datovelger/lib/Datepicker';\r\nimport { SkjemaGruppe } from 'nav-frontend-skjema';\r\nimport { Element } from 'nav-frontend-typografi';\r\n\r\nimport './datoInput.less';\r\n\r\nexport interface DatoInputProps extends Omit<DatepickerProps, 'onChange' | 'input'> {\r\n    id: string;\r\n    name: string;\r\n    label: React.ReactNode;\r\n    dato?: string;\r\n    postfix?: string;\r\n    feil?: React.ReactNode;\r\n    onChange: (dato?: string) => void;\r\n    datoAvgrensinger?: Avgrensninger;\r\n}\r\n\r\nexport type Props = DatoInputProps;\r\n\r\nconst parseAvgrensinger = (avgrensinger: Avgrensninger): DatepickerLimitations => {\r\n    return {\r\n        maxDate: avgrensinger.maksDato,\r\n        minDate: avgrensinger.minDato,\r\n        weekendsNotSelectable: avgrensinger.helgedagerIkkeTillatt,\r\n        invalidDateRanges:\r\n            avgrensinger.ugyldigeTidsperioder &&\r\n            avgrensinger.ugyldigeTidsperioder.map((t: Tidsperiode) => ({\r\n                from: t.fom,\r\n                to: t.tom,\r\n            })),\r\n    };\r\n};\r\n\r\nconst bem = BEMHelper('datoInput');\r\n\r\nconst DatoInput: React.FunctionComponent<Props> = ({\r\n    id,\r\n    label,\r\n    postfix,\r\n    feil,\r\n    onChange,\r\n    calendarSettings,\r\n    name,\r\n    limitations,\r\n    dato,\r\n    datoAvgrensinger,\r\n    ...rest\r\n}) => {\r\n    const intl = useIntl();\r\n    const avgrensningerTekst = limitations ? getAvgrensningerDescriptionForInput(limitations) : undefined;\r\n    const ariaDescriptionId = avgrensningerTekst ? `${id}_ariaDesc` : undefined;\r\n\r\n    return (\r\n        <SkjemaGruppe id={id} feil={feil} legend={label ? <Element tag=\"div\">{label}</Element> : undefined}>\r\n            <div className={bem.block}>\r\n                <div className={bem.element('datovelger')}>\r\n                    <Datepicker\r\n                        {...rest}\r\n                        allowInvalidDateSelection={false}\r\n                        value={dato}\r\n                        locale={intl.locale as any}\r\n                        calendarSettings={calendarSettings}\r\n                        inputProps={{\r\n                            placeholder: 'dd.mm.åååå',\r\n                            name,\r\n                            'aria-describedby': ariaDescriptionId,\r\n                        }}\r\n                        onChange={(datoString: string) => onChange(datoString)}\r\n                        limitations={datoAvgrensinger ? parseAvgrensinger(datoAvgrensinger) : undefined}\r\n                    />\r\n                    {ariaDescriptionId && (\r\n                        <AriaText id={ariaDescriptionId} aria-role=\"presentation\" aria-hidden=\"true\">\r\n                            {avgrensningerTekst}\r\n                        </AriaText>\r\n                    )}\r\n                </div>\r\n                {postfix ? <div className={bem.element('postfix')}>{postfix}</div> : undefined}\r\n            </div>\r\n        </SkjemaGruppe>\r\n    );\r\n};\r\nexport default DatoInput;\r\n","import { formaterDatoTall } from 'common/util/datoUtils';\r\nimport { useIntl } from 'react-intl';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { DatepickerLimitations } from 'nav-datovelger';\r\n\r\nexport const getAvgrensningerDescriptionForInput = (\r\n    avgrensninger: DatepickerLimitations | undefined\r\n): string | undefined => {\r\n    const intl = useIntl();\r\n    if (avgrensninger) {\r\n        let str;\r\n        if (avgrensninger.minDate || avgrensninger.maxDate) {\r\n            const fraTekst = avgrensninger.minDate\r\n                ? getMessage(intl, 'datoinput.avgrensninger.beskrivelse.fraOgMed', {\r\n                      dato: formaterDatoTall(avgrensninger.minDate),\r\n                  })\r\n                : undefined;\r\n            const tilTekst = avgrensninger.maxDate\r\n                ? getMessage(intl, 'datoinput.avgrensninger.beskrivelse.tilOgMed', {\r\n                      dato: formaterDatoTall(avgrensninger.maxDate),\r\n                  })\r\n                : undefined;\r\n            str = getMessage(intl, 'datoinput.avgrensninger.beskrivelse.fraTil', { fra: fraTekst, til: tilTekst });\r\n        }\r\n        if (avgrensninger.weekendsNotSelectable) {\r\n            str = `${str} ${getMessage(intl, 'datoinput.avgrensninger.beskrivelse.ikkeHelg')}`;\r\n        }\r\n        if (str) {\r\n            return str;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Field, FieldProps } from 'formik';\r\nimport CommonDatoInput, { DatoInputProps } from 'common/components/skjema/elements/dato-input/DatoInput';\r\nimport get from 'lodash/get';\r\nimport { Omit } from 'lodash';\r\nimport { useIntl } from 'react-intl';\r\nimport { translateError } from 'app/utils/errorUtils';\r\n\r\ninterface OwnProps {\r\n    name: string;\r\n    label: string | React.ReactNode;\r\n    fullskjermKalender?: boolean;\r\n}\r\n\r\ntype Props = OwnProps & Omit<DatoInputProps, 'id' | 'onChange'>;\r\n\r\nconst DatoInput: FunctionComponent<Props> = ({ name, label, fullskjermKalender, ...datoInputProps }) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <Field\r\n            name={name}\r\n            type=\"string\"\r\n            render={({ form }: FieldProps) => {\r\n                const feilmelding = get(form.errors, name) as string;\r\n\r\n                return (\r\n                    <CommonDatoInput\r\n                        {...datoInputProps}\r\n                        name={name}\r\n                        id={name}\r\n                        label={label}\r\n                        dato={get(form.values, name)}\r\n                        feil={feilmelding && form.submitCount > 0 ? translateError(intl, feilmelding) : undefined}\r\n                        onChange={(dato?: string) => {\r\n                            form.setFieldValue(name, dato);\r\n                        }}\r\n                        calendarSettings={{\r\n                            position: fullskjermKalender ? 'fullscreen' : 'under',\r\n                        }}\r\n                    />\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DatoInput;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Field, FieldProps } from 'formik';\r\nimport { Textarea as NavFrontendTextarea, TextareaProps } from 'nav-frontend-skjema';\r\nimport { get } from 'lodash';\r\nimport { useIntl } from 'react-intl';\r\nimport { translateError } from 'app/utils/errorUtils';\r\n\r\ninterface OwnProps {\r\n    name: string;\r\n}\r\n\r\ntype Props = OwnProps & Omit<TextareaProps, 'value' | 'onChange'>;\r\n\r\nconst Textarea: FunctionComponent<Props> = ({ name, ...textareaProps }) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <Field\r\n            name={name}\r\n            type=\"textarea\"\r\n            render={({ field, form }: FieldProps) => {\r\n                const feilmelding = get(form.errors, name);\r\n                const feil = feilmelding && form.submitCount > 0 ? translateError(intl, feilmelding) : undefined;\r\n\r\n                return (\r\n                    <NavFrontendTextarea\r\n                        {...field}\r\n                        {...textareaProps}\r\n                        value={field.value === undefined ? '' : field.value}\r\n                        feil={feil}\r\n                    />\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Textarea;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Block from 'common/components/block/Block';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { useIntl } from 'react-intl';\r\nimport DatoInput from 'app/formik/wrappers/DatoInput';\r\nimport InputField from 'app/formik/wrappers/InputField';\r\nimport JaNeiSpørsmål from 'app/formik/wrappers/JaNeiSpørsmål';\r\nimport { Næring } from 'app/types/SelvstendigNæringsdrivende';\r\nimport Textarea from 'app/formik/wrappers/Textarea';\r\n\r\ninterface VarigEndringAvNæringsinntektProps {\r\n    values: Partial<Næring>;\r\n}\r\n\r\ntype Props = VarigEndringAvNæringsinntektProps;\r\nconst VarigEndringAvNæringsinntekt: FunctionComponent<Props> = (props: Props) => {\r\n    const intl = useIntl();\r\n    const { values } = props;\r\n\r\n    const visDato = values.hattVarigEndringAvNæringsinntektSiste4Kalenderår === true;\r\n    const visNæringsinntektEtterEndring =\r\n        visDato &&\r\n        values.endringAvNæringsinntektInformasjon !== undefined &&\r\n        values.endringAvNæringsinntektInformasjon.dato !== undefined;\r\n\r\n    const visForklaring =\r\n        visNæringsinntektEtterEndring &&\r\n        values.endringAvNæringsinntektInformasjon !== undefined &&\r\n        values.endringAvNæringsinntektInformasjon.næringsinntektEtterEndring !== undefined;\r\n\r\n    return (\r\n        <>\r\n            <Block>\r\n                <JaNeiSpørsmål\r\n                    name=\"hattVarigEndringAvNæringsinntektSiste4Kalenderår\"\r\n                    legend={getMessage(\r\n                        intl,\r\n                        'arbeidsforhold.selvstendig.endringAvNæringsinntektInformasjon.hattVarigEndringAvNæringsinntektSiste4Kalenderår'\r\n                    )}\r\n                />\r\n            </Block>\r\n\r\n            <Block visible={visDato}>\r\n                <DatoInput\r\n                    fullskjermKalender={true}\r\n                    name=\"endringAvNæringsinntektInformasjon.dato\"\r\n                    label={getMessage(intl, 'arbeidsforhold.selvstendig.endringAvNæringsinntektInformasjon.dato')}\r\n                />\r\n            </Block>\r\n\r\n            <Block visible={visNæringsinntektEtterEndring}>\r\n                <InputField\r\n                    name=\"endringAvNæringsinntektInformasjon.næringsinntektEtterEndring\"\r\n                    label={getMessage(\r\n                        intl,\r\n                        'arbeidsforhold.selvstendig.endringAvNæringsinntektInformasjon.næringsinntektEtterEndring'\r\n                    )}\r\n                    required={true}\r\n                />\r\n            </Block>\r\n\r\n            <Block visible={visForklaring}>\r\n                <Textarea\r\n                    name=\"endringAvNæringsinntektInformasjon.forklaring\"\r\n                    label={getMessage(intl, 'arbeidsforhold.selvstendig.endringAvNæringsinntektInformasjon.forklaring')}\r\n                    maxLength={1000}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VarigEndringAvNæringsinntekt;\r\n","import * as React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport Block from 'common/components/block/Block';\r\nimport InputField from 'app/formik/wrappers/InputField';\r\nimport JaNeiSpørsmål from 'app/formik/wrappers/JaNeiSpørsmål';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { Næring, Næringsrelasjon as NæringsrelasjonType } from 'app/types/SelvstendigNæringsdrivende';\r\n\r\ninterface NæringsrelasjonBolkProps {\r\n    values: Næring;\r\n    type: 'revisor' | 'regnskapsfører';\r\n}\r\n\r\ntype Props = NæringsrelasjonBolkProps;\r\n\r\nconst Næringsrelasjon: React.FunctionComponent<Props> = (props: Props) => {\r\n    const intl = useIntl();\r\n    const { values, type } = props;\r\n    const næringsrelasjon: Partial<NæringsrelasjonType> = values[type] || {};\r\n\r\n    const skalViseTelefonnummer = næringsrelasjon.navn !== undefined && næringsrelasjon.navn !== '';\r\n    const skalViseErNærVennEllerFamilie =\r\n        skalViseTelefonnummer && næringsrelasjon.telefonnummer !== undefined && næringsrelasjon.telefonnummer !== '';\r\n\r\n    return (\r\n        <>\r\n            <Block>\r\n                <InputField\r\n                    name={`${type}.navn`}\r\n                    label={getMessage(intl, `arbeidsforhold.selvstendig.næringsrelasjon.${type}.navn`)}\r\n                />\r\n            </Block>\r\n            <Block visible={skalViseTelefonnummer}>\r\n                <InputField\r\n                    name={`${type}.telefonnummer`}\r\n                    label={getMessage(intl, `arbeidsforhold.selvstendig.næringsrelasjon.${type}.tlfnr`)}\r\n                />\r\n            </Block>\r\n            <Block visible={skalViseErNærVennEllerFamilie}>\r\n                <JaNeiSpørsmål\r\n                    name={`${type}.erNærVennEllerFamilie`}\r\n                    legend={getMessage(intl, `arbeidsforhold.selvstendig.næringsrelasjon.erNærVennEllerFamilie`)}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\nexport default Næringsrelasjon;\r\n","import React, { FunctionComponent, ReactNode } from 'react';\r\nimport { Field, FieldProps } from 'formik';\r\nimport { Select as NavSelect } from 'nav-frontend-skjema';\r\nimport { SelectChangeEvent } from 'app/types/events';\r\nimport get from 'lodash/get';\r\nimport { translateError } from 'app/utils/errorUtils';\r\nimport { useIntl } from 'react-intl';\r\n\r\ninterface Props {\r\n    name: string;\r\n    label: string;\r\n    children: ReactNode | ReactNode[];\r\n}\r\n\r\nconst Select: FunctionComponent<Props> = (props) => {\r\n    const intl = useIntl();\r\n    const { name, label, children } = props;\r\n    return (\r\n        <Field\r\n            name={name}\r\n            render={({ field, form }: FieldProps<any>) => {\r\n                const feilmelding = get(form.errors, name);\r\n                const feil = feilmelding && form.submitCount > 0 ? translateError(intl, feilmelding) : undefined;\r\n\r\n                return (\r\n                    <NavSelect\r\n                        {...field}\r\n                        label={label}\r\n                        onChange={(e: SelectChangeEvent) => {\r\n                            form.setFieldValue(field.name, e.target.value);\r\n                        }}\r\n                        feil={feil}\r\n                    >\r\n                        {children}\r\n                    </NavSelect>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","export const getMod11 = (strValue: string): number => {\r\n    let checkNbr = 2;\r\n    let mod = 0;\r\n\r\n    for (let i = strValue.length - 2; i >= 0; --i) {\r\n        mod += parseInt(strValue.charAt(i), 10) * checkNbr;\r\n        if (++checkNbr > 7) {\r\n            checkNbr = 2;\r\n        }\r\n    }\r\n    const result = 11 - (mod % 11);\r\n    return result === 11 ? 0 : result;\r\n};\r\n","import { getMod11 } from './mod11';\r\n\r\nconst onlyNumbersRegExp = /^[0-9]*$/;\r\n\r\nexport const er9Tall = (orgnr: string): boolean => {\r\n    return onlyNumbersRegExp.test(orgnr) && orgnr.length === 9;\r\n};\r\n\r\nexport const starterPå8Eller9 = (orgnr: string): boolean => {\r\n    return orgnr.charAt(0) === '8' || orgnr.charAt(0) === '9';\r\n};\r\n\r\nexport const erGyldigNorskOrgnummer = (orgnr: string): boolean => {\r\n    if (!orgnr || er9Tall(orgnr) === false || starterPå8Eller9(orgnr) === false) {\r\n        return false;\r\n    }\r\n    return getMod11(orgnr) === parseInt(orgnr.charAt(8), 10);\r\n};\r\n","enum Valideringsfeil {\r\n    UGYLDIG_DATO = 'ugyldigDato',\r\n    FELTET_ER_PÅKREVD = 'feltetErPåkrevd',\r\n    OVERLAPPENDE_PERIODE = 'overlappendePeriode',\r\n    VILKÅR_MÅ_GODKJENNES = 'vilkårMåGodkjennes',\r\n    OPPSUMMERING_MÅ_GODKJENNES = 'oppsummeringMåGodkjennes',\r\n    FØDSELSDATO_MÅ_VÆRE_TILBAKE_I_TID = 'fødselsdatoMåVæreTilbakeITid',\r\n    TERMINDATO_ER_PÅKREVD = 'termindatoErPåkrevd',\r\n    TIDLIGERE_OPPHOLD_MÅ_VÆRE_TILBAKE_I_TID = 'tidligereOppholdMåVæreTilbakeITid',\r\n    TIDLIGERE_OPPHOLD_MÅ_VÆRE_FREMOVER_I_TID = 'tidligereOppholdMåVæreFremoverITid',\r\n    TIDSREISER_IKKE_TILLATT = 'tidsreiserIkkeTillatt',\r\n    STILLINGSPROSENT_RANGE = 'stillingsprosentRange',\r\n    TILRETTELAGT_ARBEID_FOR_TIDLIG = 'tilrettelagtArbeidForTidlig',\r\n    UGYLDIG_ORGANISASJONSNUMMER = 'ugyldigOrganisasjonsnummer',\r\n    MÅ_VÆRE_HELTALL = 'måVæreHeltall',\r\n    MÅ_BESTÅ_AV_9_SIFFER = 'måBeståAv9Siffer',\r\n    FELTET_KAN_VÆRE_MAX_100_TEGN = 'feltetKanVæreMax100Tegn',\r\n    FELTET_KAN_VÆRE_MAX_1000_TEGN = 'feltetKanVæreMax1000Tegn',\r\n    FELTET_KAN_VÆRE_MAX_2000_TEGN = 'feltetKanVæreMax2000Tegn',\r\n    FOR_LANGT_FREM_I_TID = 'forLangtFremITid',\r\n    FOR_LANGT_TILBAKE_I_TID = 'forLangtTilbakeITid',\r\n    VENNLIGST_OPPGI_BARNETS_FØDSELSDATO = 'vennligstOppgiBarnetsFødselsDato',\r\n    MAX_10_MÅNEDER_FØR_TERMINDATO = 'maxTiMånederFørTerminDato',\r\n    DATO_MÅ_VÆRE_FØR_TERMINDATO = 'datoMåVæreFørTerminDato',\r\n}\r\n\r\nexport default Valideringsfeil;\r\n","import { FormikErrors } from 'formik';\r\nimport { Næring } from 'app/types/SelvstendigNæringsdrivende';\r\nimport { erGyldigNorskOrgnummer } from './utils/organisasjonsnummer';\r\nimport Valideringsfeil from 'app/types/Valideringsfeil';\r\nimport { set } from 'lodash';\r\n\r\ntype SelvstendigNæringsdrivendeFeil = FormikErrors<Næring>;\r\n\r\nconst validateSelvstendigNæringsdrivende =\r\n    () =>\r\n    (næring: Partial<Næring>): SelvstendigNæringsdrivendeFeil => {\r\n        const errors: SelvstendigNæringsdrivendeFeil = {};\r\n\r\n        if (næring.navnPåNæringen && næring.navnPåNæringen.length > 100) {\r\n            errors.navnPåNæringen = 'valideringsfeil.feltetKanVæreMax100Tegn';\r\n        }\r\n\r\n        if (næring.organisasjonsnummer && !erGyldigNorskOrgnummer(næring.organisasjonsnummer)) {\r\n            errors.organisasjonsnummer =\r\n                næring.organisasjonsnummer.length !== 9\r\n                    ? 'valideringsfeil.måBeståAv9Siffer'\r\n                    : 'valideringsfeil.ugyldigOrganisasjonsnummer';\r\n        }\r\n\r\n        if (\r\n            (næring.næringsinntekt && isNaN(Number(næring.næringsinntekt))) ||\r\n            (næring.næringsinntekt && (næring.næringsinntekt.includes(',') || næring.næringsinntekt.includes('.')))\r\n        ) {\r\n            errors.næringsinntekt = Valideringsfeil.MÅ_VÆRE_HELTALL;\r\n        }\r\n\r\n        if (næring.revisor) {\r\n            const revisor = næring.revisor;\r\n            if (revisor.navn && revisor.navn.length > 100) {\r\n                set(errors, ['revisor', 'navn'], 'valideringsfeil.feltetKanVæreMax100Tegn');\r\n            }\r\n            if (revisor.navn && revisor.telefonnummer.length > 100) {\r\n                set(errors, ['revisor', 'telefonnummer'], 'valideringsfeil.feltetKanVæreMax100Tegn');\r\n            }\r\n        }\r\n\r\n        if (næring.regnskapsfører) {\r\n            const regnskapsfører = næring.regnskapsfører;\r\n            if (regnskapsfører.navn && regnskapsfører.navn.length > 100) {\r\n                set(errors, ['regnskapsfører', 'navn'], 'valideringsfeil.feltetKanVæreMax100Tegn');\r\n            }\r\n            if (regnskapsfører.navn && regnskapsfører.telefonnummer.length > 100) {\r\n                set(errors, ['regnskapsfører', 'telefonnummer'], 'valideringsfeil.feltetKanVæreMax100Tegn');\r\n            }\r\n        }\r\n\r\n        if (næring.endringAvNæringsinntektInformasjon) {\r\n            if (\r\n                næring.endringAvNæringsinntektInformasjon.forklaring &&\r\n                næring.endringAvNæringsinntektInformasjon.forklaring.length > 1000\r\n            ) {\r\n                set(\r\n                    errors,\r\n                    ['endringAvNæringsinntektInformasjon', 'forklaring'],\r\n                    'valideringsfeil.feltetKanVæreMax1000Tegn'\r\n                );\r\n            }\r\n\r\n            const næringsinntektEtterEndring = næring.endringAvNæringsinntektInformasjon.næringsinntektEtterEndring;\r\n            if (\r\n                (næringsinntektEtterEndring && isNaN(Number(næringsinntektEtterEndring))) ||\r\n                (næringsinntektEtterEndring &&\r\n                    (næringsinntektEtterEndring.includes(',') || næringsinntektEtterEndring.includes('.')))\r\n            ) {\r\n                set(\r\n                    errors,\r\n                    ['endringAvNæringsinntektInformasjon', 'næringsinntektEtterEndring'],\r\n                    Valideringsfeil.MÅ_VÆRE_HELTALL\r\n                );\r\n            }\r\n        }\r\n\r\n        return errors;\r\n    };\r\nexport default validateSelvstendigNæringsdrivende;\r\n","import { Søker } from 'app/types/Søker';\r\nimport * as _ from 'lodash';\r\nimport { FrilansInformasjon } from 'app/types/FrilansInformasjon';\r\nimport { DeepPartial } from 'redux';\r\nimport { Næring } from 'app/types/SelvstendigNæringsdrivende';\r\nimport moment from 'moment';\r\nimport { AnnenInntekt, AnnenInntektType } from 'app/types/AnnenInntekt';\r\n\r\nexport const cleanupFrilansinformasjon = (søker: Partial<Søker>): DeepPartial<FrilansInformasjon> => {\r\n    const { harJobbetSomFrilansSiste10Mnd, frilansInformasjon } = søker;\r\n\r\n    let relevanteFelter: string[] = [];\r\n    if (harJobbetSomFrilansSiste10Mnd && frilansInformasjon) {\r\n        relevanteFelter = [\r\n            'jobberFremdelesSomFrilans',\r\n            'oppstart',\r\n            'driverFosterhjem',\r\n            'harJobbetForNærVennEllerFamilieSiste10Mnd',\r\n        ];\r\n\r\n        if (frilansInformasjon.oppdragForNæreVennerEllerFamilieSiste10Mnd) {\r\n            relevanteFelter.push('oppdragForNæreVennerEllerFamilieSiste10Mnd');\r\n        }\r\n    }\r\n\r\n    return _.pick(frilansInformasjon, relevanteFelter);\r\n};\r\n\r\nexport const cleanupNæring = (næring: Partial<Næring>): DeepPartial<Næring> => {\r\n    const relevanteFelter: string[] = [\r\n        'næringstyper',\r\n        'navnPåNæringen',\r\n        'registrertINorge',\r\n        'harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene',\r\n        'tidsperiode',\r\n        'hattVarigEndringAvNæringsinntektSiste4Kalenderår',\r\n        'harRevisor',\r\n        'harRegnskapsfører',\r\n    ];\r\n\r\n    næring.registrertINorge === true\r\n        ? relevanteFelter.push('organisasjonsnummer')\r\n        : relevanteFelter.push('registrertILand');\r\n\r\n    næring.tidsperiode &&\r\n    næring.tidsperiode.fom !== undefined &&\r\n    moment(næring.tidsperiode.fom).isBefore(moment().subtract(4, 'year'))\r\n        ? relevanteFelter.push('endringAvNæringsinntektInformasjon')\r\n        : relevanteFelter.push(\r\n              'næringsinntekt',\r\n              'oppstartsdato',\r\n              'harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene'\r\n          );\r\n\r\n    if (næring.harRegnskapsfører === true) {\r\n        relevanteFelter.push('regnskapsfører');\r\n    } else if (næring.harRevisor === true) {\r\n        relevanteFelter.push('revisor', 'kanInnhenteOpplsyningerFraRevisor');\r\n    }\r\n    return _.pick(næring, relevanteFelter);\r\n};\r\n\r\nexport const cleanupSøker = (søker: Partial<Søker>) => {\r\n    const relevanteFelter: string[] = [\r\n        'rolle',\r\n        'harJobbetSomFrilansSiste10Mnd',\r\n        'harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd',\r\n        'harHattAnnenInntektSiste10Mnd',\r\n    ];\r\n\r\n    if (søker.harJobbetSomFrilansSiste10Mnd) {\r\n        relevanteFelter.push('frilansInformasjon');\r\n    }\r\n\r\n    if (søker.harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd) {\r\n        relevanteFelter.push('selvstendigNæringsdrivendeInformasjon');\r\n    }\r\n\r\n    if (søker.harHattAnnenInntektSiste10Mnd) {\r\n        relevanteFelter.push('andreInntekterSiste10Mnd');\r\n    }\r\n\r\n    return _.pick(søker, relevanteFelter);\r\n};\r\n\r\nexport const cleanupAnnenInntekt = (annenInntekt: Partial<AnnenInntekt>): AnnenInntekt => {\r\n    annenInntekt.vedlegg = annenInntekt.type === AnnenInntektType.MILITÆRTJENESTE ? annenInntekt.vedlegg : [];\r\n    return annenInntekt as AnnenInntekt;\r\n};\r\n","import * as React from 'react';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport './datoerInputLayout.less';\r\n\r\ninterface Props {\r\n    fra: React.ReactNode;\r\n    til?: React.ReactNode;\r\n    fullbredde?: boolean;\r\n}\r\n\r\nconst bem = BEMHelper('datoerInputLayout');\r\n\r\nconst DatoerInputLayout: React.FunctionComponent<Props> = ({ fra, til, fullbredde }) => (\r\n    <div className={bem.classNames(bem.block, bem.modifierConditional('fullbredde', fullbredde))}>\r\n        <div className={bem.element('fraDato')}>{fra}</div>\r\n        {til && <div className={bem.element('tilDato')}>{til}</div>}\r\n    </div>\r\n);\r\n\r\nexport default DatoerInputLayout;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport './knapperad.less';\r\n\r\nexport interface Props {\r\n    children: React.ReactNode;\r\n    align?: 'left' | 'right' | 'center';\r\n    stil?: 'normal' | 'mobile-50-50';\r\n}\r\n\r\nconst BEM = BEMHelper('knapperad');\r\n\r\nconst Knapperad: React.FunctionComponent<Props> = ({ children, align = 'center', stil = 'normal' }) => {\r\n    const cls = classnames(BEM.block, `${BEM.modifier(align)}`, `${BEM.modifier(stil)}`);\r\n    return (\r\n        <div className={cls}>\r\n            {React.Children.map(children, (knapp, index) => (\r\n                <span key={index} className={BEM.element('knapp')}>\r\n                    {knapp}\r\n                </span>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Knapperad;\r\n","import React, { FunctionComponent, useMemo } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Formik, FormikProps } from 'formik';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\nimport { Knapp, Hovedknapp } from 'nav-frontend-knapper';\r\nimport _ from 'lodash';\r\nimport { isValid } from 'i18n-iso-countries';\r\n\r\nimport BEMHelper from 'common/util/bem';\r\nimport { Næringstype, Næring } from 'app/types/SelvstendigNæringsdrivende';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport CheckboksPanelGruppe from 'app/formik/wrappers/CheckboksPanelGruppe';\r\nimport Block from 'common/components/block/Block';\r\nimport InputField from 'app/formik/wrappers/InputField';\r\nimport JaNeiSpørsmål from 'app/formik/wrappers/JaNeiSpørsmål';\r\nimport getCountries from 'app/utils/getCountries';\r\nimport DatoInput from 'app/formik/wrappers/DatoInput';\r\nimport Veilederinfo from 'common/components/veileder-info/Veilederinfo';\r\nimport VarigEndringAvNæringsinntekt from './VarigEndringAvNæringsinntekt';\r\nimport Næringsrelasjon from './Næringsrelasjon';\r\nimport { ModalFormProps } from '../ArbeidSeksjon/ArbeidSeksjon';\r\nimport Select from 'app/formik/wrappers/Select';\r\nimport validateSelvstendigNæringsdrivende from 'app/utils/validation/validateSelvstendigNæringsdrivende';\r\nimport { visKomponentSelvstendigNæringsdrivende } from '../utils/visibility';\r\nimport { cleanupNæring } from '../utils/cleanup';\r\nimport DatoerInputLayout from 'common/components/layout/datoerInputLayout/DatoerInputLayout';\r\nimport Knapperad from 'common/components/knapperad/Knapperad';\r\n\r\nconst cls = BEMHelper('selvstendig-næringsdrivende');\r\n\r\ntype Props = ModalFormProps<Næring>;\r\nconst SelvstendigNæringsdrivende: FunctionComponent<Props> = (props: Props) => {\r\n    const intl = useIntl();\r\n    const { endre, onCancel, element = { næringstyper: [] }, onAdd } = props;\r\n    const countries = useMemo(() => getCountries(true, true, intl.locale), []);\r\n    const onSubmit = (næring: Næring) => {\r\n        onAdd(cleanupNæring(næring) as Næring);\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            // @ts-ignore Fiks\r\n            initialValues={element}\r\n            validate={validateSelvstendigNæringsdrivende()}\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit, values }: FormikProps<Næring>) => {\r\n                const visKomponent = visKomponentSelvstendigNæringsdrivende(values);\r\n                return (\r\n                    <form\r\n                        className={cls.block}\r\n                        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            handleSubmit();\r\n                        }}\r\n                    >\r\n                        <Undertittel className=\"title\">\r\n                            {getMessage(intl, `arbeidsforhold.selvstendig.tittel${endre ? '.endre' : ''}`)}\r\n                        </Undertittel>\r\n\r\n                        <Block>\r\n                            <CheckboksPanelGruppe\r\n                                name=\"næringstyper\"\r\n                                label={getMessage(intl, 'arbeidsforhold.selvstendig.næringstype')}\r\n                                options={Object.values(Næringstype).map((næringstype: Næringstype) => ({\r\n                                    label: getMessage(intl, `næringstype.${næringstype.toLocaleLowerCase()}`),\r\n                                    value: næringstype,\r\n                                }))}\r\n                                columns={2}\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseNavnPåNæringen}>\r\n                            <InputField\r\n                                name=\"navnPåNæringen\"\r\n                                label={getMessage(intl, 'arbeidsforhold.selvstendig.navn')}\r\n                                required={true}\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseAdvarselFisker}>\r\n                            <Veilederinfo type=\"advarsel\">\r\n                                <FormattedMessage\r\n                                    id=\"arbeidsforhold.selvstendig.fisker\"\r\n                                    values={{ navnPåNæringen: values.navnPåNæringen }}\r\n                                />\r\n                            </Veilederinfo>\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseRegistrertINorge}>\r\n                            <JaNeiSpørsmål\r\n                                name=\"registrertINorge\"\r\n                                legend={getMessage(intl, 'arbeidsforhold.selvstendig.registrertINorge', {\r\n                                    navn: values.navnPåNæringen,\r\n                                })}\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseLand}>\r\n                            <Select\r\n                                name=\"registrertILand\"\r\n                                label={getMessage(intl, 'arbeidsforhold.seslvstendig.registrertILand')}\r\n                            >\r\n                                <option value=\"\" />\r\n                                {countries.map((countryOption: string[]) => {\r\n                                    const [countryCode, countryName] = countryOption;\r\n                                    return (\r\n                                        <option key={countryCode} value={countryCode}>\r\n                                            {countryName}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </Select>\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseOrgNr}>\r\n                            <InputField\r\n                                name=\"organisasjonsnummer\"\r\n                                label={getMessage(intl, 'arbeidsforhold.selvstendig.organisasjonsnummer')}\r\n                                required={true}\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseTidsperiode}>\r\n                            <DatoerInputLayout\r\n                                fullbredde={true}\r\n                                fra={\r\n                                    <DatoInput\r\n                                        fullskjermKalender={true}\r\n                                        name=\"tidsperiode.fom\"\r\n                                        label={getMessage(intl, 'arbeidsforhold.selvstendig.fom', {\r\n                                            navn: values.navnPåNæringen,\r\n                                        })}\r\n                                    />\r\n                                }\r\n                                til={\r\n                                    <DatoInput\r\n                                        fullskjermKalender={true}\r\n                                        name=\"tidsperiode.tom\"\r\n                                        label={getMessage(intl, 'arbeidsforhold.selvstendig.tom', {\r\n                                            navn: values.navnPåNæringen,\r\n                                        })}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalVisevarigEndringAvNæringsinntektBolk}>\r\n                            <VarigEndringAvNæringsinntekt values={values} />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseNæringsinntekt}>\r\n                            <InputField\r\n                                name=\"næringsinntekt\"\r\n                                label={getMessage(intl, 'arbeidsforhold.selvstendig.næringsinntekt')}\r\n                                required={true}\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseharBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene}>\r\n                            <JaNeiSpørsmål\r\n                                name=\"harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene\"\r\n                                legend={getMessage(\r\n                                    intl,\r\n                                    'arbeidsforhold.selvstendig.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene'\r\n                                )}\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseOppstartsdato}>\r\n                            <DatoInput\r\n                                fullskjermKalender={true}\r\n                                name=\"oppstartsdato\"\r\n                                label={getMessage(intl, 'arbeidsforhold.selvstendig.oppstartsdato')}\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseHarRegnskapsfører}>\r\n                            <JaNeiSpørsmål\r\n                                name=\"harRegnskapsfører\"\r\n                                legend={getMessage(intl, 'arbeidsforhold.selvstendig.harRegnskapsfører')}\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseNæringsrelasjonRegnskapsfører}>\r\n                            <Næringsrelasjon type=\"regnskapsfører\" values={values} />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseRevisor}>\r\n                            <JaNeiSpørsmål\r\n                                name=\"harRevisor\"\r\n                                legend={getMessage(intl, 'arbeidsforhold.selvstendig.harRevisor')}\r\n                            />\r\n                        </Block>\r\n                        <Block visible={visKomponent.skalViseNæringsrelasjonRevisor}>\r\n                            <Næringsrelasjon type=\"revisor\" values={values} />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseKanInnhenteOpplysningerFraRevisor}>\r\n                            <JaNeiSpørsmål\r\n                                name=\"kanInnhenteOpplsyningerFraRevisor\"\r\n                                legend={getMessage(\r\n                                    intl,\r\n                                    'arbeidsforhold.selvstendig.kanInnhenteOpplsyningerFraRevisor'\r\n                                )}\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseformButtons}>\r\n                            <Veilederinfo type=\"advarsel\">\r\n                                <FormattedMessage id=\"arbeidsforhold.selvstendig.bliKontaktet\" />\r\n                            </Veilederinfo>\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.skalViseformButtons}>\r\n                            <Knapperad stil=\"mobile-50-50\">\r\n                                <Knapp htmlType=\"button\" onClick={onCancel}>\r\n                                    <FormattedMessage id=\"avbryt\" />\r\n                                </Knapp>\r\n                                <Hovedknapp disabled={!isValid} htmlType=\"submit\">\r\n                                    <FormattedMessage id={endre ? 'endre' : 'leggtil'} />\r\n                                </Hovedknapp>\r\n                            </Knapperad>\r\n                        </Block>\r\n                    </form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SelvstendigNæringsdrivende;\r\n","import { Næring, Næringstype } from 'app/types/SelvstendigNæringsdrivende';\r\nimport { cleanupNæring } from './cleanup';\r\nimport moment from 'moment';\r\n\r\nexport const visKomponentSelvstendigNæringsdrivende = (næring: Partial<Næring>) => {\r\n    const normalisertNæring = cleanupNæring(næring);\r\n    const {\r\n        næringstyper,\r\n        navnPåNæringen,\r\n        registrertINorge,\r\n        organisasjonsnummer,\r\n        registrertILand,\r\n        tidsperiode = {},\r\n        næringsinntekt,\r\n        harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene,\r\n        oppstartsdato,\r\n        harRegnskapsfører,\r\n        regnskapsfører,\r\n        revisor,\r\n        harRevisor,\r\n        endringAvNæringsinntektInformasjon,\r\n        kanInnhenteOpplsyningerFraRevisor,\r\n        hattVarigEndringAvNæringsinntektSiste4Kalenderår,\r\n    } = normalisertNæring;\r\n\r\n    const skalViseNavnPåNæringen = næringstyper !== undefined && næringstyper.length! > 0;\r\n    const skalViseAdvarselFisker =\r\n        skalViseNavnPåNæringen && (næringstyper as Næringstype[]).includes(Næringstype.FISKER);\r\n    const skalViseRegistrertINorge = skalViseNavnPåNæringen && navnPåNæringen !== undefined && navnPåNæringen !== '';\r\n    const skalViseLand = skalViseRegistrertINorge && registrertINorge === false;\r\n    const skalViseOrgNr = skalViseRegistrertINorge && registrertINorge === true;\r\n    const skalViseTidsperiode =\r\n        (skalViseLand || skalViseOrgNr) &&\r\n        ((registrertINorge === true && organisasjonsnummer !== undefined && organisasjonsnummer !== '') ||\r\n            registrertILand !== undefined);\r\n    const skalVisevarigEndringAvNæringsinntektBolk =\r\n        tidsperiode !== undefined &&\r\n        tidsperiode.fom !== undefined &&\r\n        tidsperiode.fom !== '' &&\r\n        moment(tidsperiode.fom).isBefore(moment().subtract(4, 'year'));\r\n    const skalViseNæringsinntekt =\r\n        skalViseTidsperiode && !skalVisevarigEndringAvNæringsinntektBolk && tidsperiode.fom !== undefined;\r\n    const skalViseharBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene =\r\n        skalViseNæringsinntekt &&\r\n        !skalVisevarigEndringAvNæringsinntektBolk &&\r\n        næringsinntekt !== undefined &&\r\n        næringsinntekt !== '';\r\n    const skalViseOppstartsdato =\r\n        skalViseharBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene &&\r\n        !skalVisevarigEndringAvNæringsinntektBolk &&\r\n        harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene === true;\r\n    const skalViseHarRegnskapsfører =\r\n        (skalViseharBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene &&\r\n            oppstartsdato !== undefined &&\r\n            oppstartsdato !== '') ||\r\n        (skalViseharBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene &&\r\n            harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene === false) ||\r\n        (skalVisevarigEndringAvNæringsinntektBolk && hattVarigEndringAvNæringsinntektSiste4Kalenderår === false) ||\r\n        (endringAvNæringsinntektInformasjon !== undefined &&\r\n            endringAvNæringsinntektInformasjon.dato !== undefined &&\r\n            endringAvNæringsinntektInformasjon.dato !== '' &&\r\n            endringAvNæringsinntektInformasjon.næringsinntektEtterEndring !== undefined &&\r\n            endringAvNæringsinntektInformasjon.forklaring !== undefined &&\r\n            endringAvNæringsinntektInformasjon.forklaring !== '');\r\n    const skalViseNæringsrelasjonRegnskapsfører = skalViseHarRegnskapsfører && harRegnskapsfører === true;\r\n    const skalViseRevisor = skalViseHarRegnskapsfører && harRegnskapsfører === false;\r\n    const skalViseNæringsrelasjonRevisor = skalViseRevisor && harRevisor === true;\r\n    const skalViseKanInnhenteOpplysningerFraRevisor =\r\n        skalViseNæringsrelasjonRevisor && revisor !== undefined && revisor.erNærVennEllerFamilie !== undefined;\r\n    const skalViseformButtons =\r\n        (harRegnskapsfører === false && harRevisor === false && skalViseRevisor) ||\r\n        (harRegnskapsfører === true &&\r\n            skalViseNæringsrelasjonRegnskapsfører &&\r\n            regnskapsfører !== undefined &&\r\n            regnskapsfører.navn !== undefined &&\r\n            regnskapsfører.navn !== '' &&\r\n            regnskapsfører.telefonnummer !== undefined &&\r\n            regnskapsfører.telefonnummer !== '' &&\r\n            regnskapsfører.erNærVennEllerFamilie !== undefined) ||\r\n        (harRevisor === true &&\r\n            skalViseNæringsrelasjonRevisor &&\r\n            revisor !== undefined &&\r\n            revisor.navn !== undefined &&\r\n            revisor.navn !== '' &&\r\n            revisor.telefonnummer !== undefined &&\r\n            revisor.telefonnummer !== '' &&\r\n            revisor.erNærVennEllerFamilie !== undefined &&\r\n            kanInnhenteOpplsyningerFraRevisor !== undefined);\r\n\r\n    return {\r\n        skalViseNavnPåNæringen,\r\n        skalViseAdvarselFisker,\r\n        skalViseRegistrertINorge,\r\n        skalViseLand,\r\n        skalViseOrgNr,\r\n        skalViseTidsperiode,\r\n        skalVisevarigEndringAvNæringsinntektBolk,\r\n        skalViseNæringsinntekt,\r\n        skalViseharBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene,\r\n        skalViseOppstartsdato,\r\n        skalViseHarRegnskapsfører,\r\n        skalViseNæringsrelasjonRegnskapsfører,\r\n        skalViseRevisor,\r\n        skalViseNæringsrelasjonRevisor,\r\n        skalViseKanInnhenteOpplysningerFraRevisor,\r\n        skalViseformButtons,\r\n    };\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Field, FieldProps } from 'formik';\r\nimport { Omit, get } from 'lodash';\r\n\r\nimport RadioPanelGruppeResponsive, {\r\n    RadioPanelGruppeResponsiveProps,\r\n} from 'common/components/skjema/elements/radio-panel-gruppe-responsive/RadioPanelGruppeResponsive';\r\nimport { translateError } from 'app/utils/errorUtils';\r\n\r\ntype Props = Omit<RadioPanelGruppeResponsiveProps, 'onChange'> & {\r\n    id?: string;\r\n    value?: string;\r\n};\r\n\r\nconst RadioPanelGruppe: FunctionComponent<Props> = (props) => {\r\n    const intl = useIntl();\r\n    const { id, value, legend, ...radioPanelGruppeProps } = props;\r\n    return (\r\n        <Field\r\n            name={radioPanelGruppeProps.name}\r\n            type=\"string\"\r\n            render={({ field, form }: FieldProps) => {\r\n                const feilmelding = get(form.errors, radioPanelGruppeProps.name);\r\n                const feil = feilmelding && form.submitCount > 0 ? translateError(intl, feilmelding) : undefined;\r\n                return (\r\n                    <RadioPanelGruppeResponsive\r\n                        {...radioPanelGruppeProps}\r\n                        name={id || radioPanelGruppeProps.name}\r\n                        checked={value || field.value}\r\n                        legend={legend}\r\n                        onChange={(_, newValue) => {\r\n                            form.setFieldValue(radioPanelGruppeProps.name, newValue);\r\n                        }}\r\n                        feil={feil}\r\n                    />\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default RadioPanelGruppe;\r\n","import React from 'react';\r\n\r\nexport interface IconRef {\r\n    id: string;\r\n    viewBox: string;\r\n}\r\n\r\ninterface Props {\r\n    iconRef: IconRef;\r\n    size?: number;\r\n    className?: string;\r\n}\r\n\r\nconst CustomSVGFromSprite: React.FunctionComponent<Props> = ({ iconRef, size, className, ...other }) => {\r\n    if (!iconRef) {\r\n        return null;\r\n    }\r\n\r\n    const viewBox = { 'view-box': iconRef.viewBox };\r\n    return (\r\n        <svg className={className} height={size} width={size} {...viewBox} {...other}>\r\n            <use xlinkHref={`#${iconRef.id}`} />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default CustomSVGFromSprite;\r\n","import * as React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport CustomSVG from 'common/components/custom-svg/CustomSVG';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nconst uploadIcon = require('./upload.svg').default;\r\nimport { AttachmentType } from '../types/AttachmentType';\r\n\r\nimport './attachment.less';\r\n\r\ninterface AttachmentInputProps {\r\n    id: string;\r\n    onFilesSelect: (files: File[]) => void;\r\n    onClick: () => void;\r\n    attachmentType: AttachmentType;\r\n}\r\n\r\ntype Props = AttachmentInputProps;\r\n\r\nconst AttachmentInput: React.FunctionComponent<Props> = ({ id, onClick, attachmentType, onFilesSelect }) => {\r\n    const intl = useIntl();\r\n    const inputId = `${id}-input`;\r\n    const BEM = BEMHelper('attachmentButton');\r\n\r\n    const isFileExtensionValid = (filename: string): boolean => {\r\n        const validExtensions = ['pdf', 'jpeg', 'jpg', 'png'];\r\n        const extension = filename.split('.').pop();\r\n        if (extension) {\r\n            return validExtensions.includes(extension.toLowerCase());\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const getValidFiles = (files: File[]): File[] => {\r\n        return files.filter((file: File) => {\r\n            return isFileExtensionValid(file.name);\r\n        });\r\n    };\r\n\r\n    const fileSelectHandler = (fileList: FileList) => {\r\n        const files = Array.from(fileList) as File[];\r\n        const validFiles = getValidFiles(files);\r\n        if (validFiles.length > 0) {\r\n            onFilesSelect(validFiles);\r\n        }\r\n    };\r\n\r\n    const onFileDragOverHandler = (e: React.DragEvent<HTMLLabelElement>) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const onFileDropHandler = (e: React.DragEvent<HTMLLabelElement>) => {\r\n        e.preventDefault();\r\n        fileSelectHandler(e.dataTransfer.files);\r\n    };\r\n\r\n    const onFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files) {\r\n            fileSelectHandler(e.target.files);\r\n            e.target.value = '';\r\n        }\r\n    };\r\n\r\n    const onKeyPress = (e: React.KeyboardEvent<HTMLLabelElement>) => {\r\n        const ENTER_KEYCODE = 13;\r\n        const inputElement = document.getElementById(id);\r\n        if (e.which === ENTER_KEYCODE && inputElement !== null) {\r\n            inputElement.click();\r\n        }\r\n    };\r\n    return (\r\n        <label\r\n            role=\"button\"\r\n            aria-label={intl.formatMessage({\r\n                id: 'vedlegg.lastoppknapp.arialabel',\r\n            })}\r\n            id={id}\r\n            tabIndex={0}\r\n            htmlFor={inputId}\r\n            className={BEM.block}\r\n            onDragOver={(e) => onFileDragOverHandler(e)}\r\n            onDrop={(e) => onFileDropHandler(e)}\r\n            onKeyPress={(e) => onKeyPress(e)}\r\n        >\r\n            <div className={BEM.element('icon')}>\r\n                <CustomSVG iconRef={uploadIcon} size={22} />\r\n            </div>\r\n            <Element className={BEM.element('label')}>\r\n                <FormattedMessage id={`vedlegg.lastoppknapp.${attachmentType}`} />\r\n            </Element>\r\n            <input\r\n                id={inputId}\r\n                type=\"file\"\r\n                accept=\".pdf, .jpg, .jpeg, .png\"\r\n                onChange={(e) => onFileSelect(e)}\r\n                multiple={true}\r\n                onClick={onClick}\r\n            />\r\n        </label>\r\n    );\r\n};\r\nexport default AttachmentInput;\r\n","import React from 'react';\r\n\r\nconst TrashcanIkon = (props: any) => (\r\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" {...props}>\r\n        <path\r\n            d=\"M3.516 3.5h16v20h-16zm4-3h8v3h-8zm-6.5 3h22M7.516 7v12m4-12v12m4-12v12\"\r\n            stroke=\"#000\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeMiterlimit={10}\r\n            fill=\"none\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport default TrashcanIkon;\r\n","import React from 'react';\r\nimport TrashcanIkon from '../ikoner/TrashcanIkon';\r\nimport { KnappBaseProps } from 'nav-frontend-knapper';\r\nimport './slettKnapp.less';\r\n\r\nexport interface SlettKnappProps extends KnappBaseProps {\r\n    ariaLabel: string;\r\n    onClick: () => void;\r\n}\r\n\r\nconst SlettKnapp: React.FunctionComponent<SlettKnappProps> = ({ onClick, ariaLabel }) => (\r\n    <button\r\n        type=\"button\"\r\n        className=\"slettKnapp\"\r\n        aria-label={ariaLabel}\r\n        onClick={(e) => {\r\n            e.stopPropagation();\r\n            onClick();\r\n        }}\r\n    >\r\n        <TrashcanIkon width={20} height={20} />\r\n    </button>\r\n);\r\n\r\nexport default SlettKnapp;\r\n","import Bytes from 'bytes';\r\n\r\nexport const bytesString = (bytes: number): string => {\r\n    return Bytes(bytes, {\r\n        unitSeparator: ' ',\r\n        thousandsSeparator: ' ',\r\n        decimalPlaces: 1,\r\n        fixedDecimals: false,\r\n    });\r\n};\r\n\r\nexport const getTotalFileSize = (files: File[]): number => {\r\n    return files.reduce(\r\n        (a, b) =>\r\n            ({\r\n                size: a.size + b.size,\r\n            } as any),\r\n        { size: 0 }\r\n    ).size;\r\n};\r\n","import React from 'react';\r\n\r\nconst VedleggIkon = (props: any) => (\r\n    <svg width={20} height={20} {...props}>\r\n        <path\r\n            d=\"M3.398 19.372c-.43 0-.843-.088-1.24-.264a3.57 3.57 0 0 1-1.084-.752C.358 17.64 0 16.771 0 15.75c0-1.022.358-1.891 1.074-2.607l11.23-11.915c.43-.442.915-.764 1.456-.966a4.034 4.034 0 0 1 1.66-.254c.566.032 1.13.182 1.69.449a5.93 5.93 0 0 1 1.581 1.123c.43.443.765.967 1.006 1.572.241.606.355 1.24.342 1.905a5.185 5.185 0 0 1-.39 1.894 4.908 4.908 0 0 1-1.016 1.563l-8.496 9.023a.614.614 0 0 1-.879.04.631.631 0 0 1-.186-.44.627.627 0 0 1 .166-.46l8.496-9.023a3.66 3.66 0 0 0 .762-1.191c.182-.456.28-.931.293-1.426 0-.495-.085-.967-.254-1.416-.17-.45-.417-.83-.742-1.143a4.283 4.283 0 0 0-2.207-1.2c-.872-.19-1.667.08-2.383.81L1.973 14a2.37 2.37 0 0 0-.723 1.738c0 .677.24 1.257.723 1.738.221.222.462.388.722.499.26.11.534.153.82.126.274-.013.55-.087.83-.224.28-.137.538-.329.772-.576l8.926-9.492c.17-.17.348-.427.537-.772.189-.345.114-.68-.225-1.006-.182-.195-.338-.303-.468-.322-.13-.02-.215-.03-.254-.03a1.005 1.005 0 0 0-.39.147 2.738 2.738 0 0 0-.45.342l-6.719 7.148a.556.556 0 0 1-.43.196.652.652 0 0 1-.449-.176.556.556 0 0 1-.195-.43c0-.17.059-.319.176-.449l6.719-7.168c.273-.26.543-.462.81-.605.267-.144.537-.228.81-.254.222-.013.482.02.782.097.3.078.612.28.937.606.495.482.713 1.048.655 1.699-.059.651-.375 1.263-.948 1.836L6.016 18.18a4.242 4.242 0 0 1-1.153.83 3.39 3.39 0 0 1-1.289.341.453.453 0 0 0-.088.01.453.453 0 0 1-.088.01z\"\r\n            fill=\"#0067C5\"\r\n            fillRule=\"evenodd\"\r\n        />\r\n    </svg>\r\n);\r\nexport default VedleggIkon;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport { useIntl } from 'react-intl';\r\nimport SlettKnapp from '../../../components/slett-knapp/SlettKnapp';\r\n\r\nimport NavFrontendSpinner from 'nav-frontend-spinner';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { Attachment as AttachmentType } from 'common/storage/attachment/types/Attachment';\r\nimport { bytesString } from 'common/util/filesize';\r\nimport BEMHelper from 'common/util/bem';\r\nimport VedleggIkon from 'common/components/ikoner/VedleggIkon';\r\n\r\nimport './attachment.less';\r\n\r\ninterface Props {\r\n    attachment: AttachmentType;\r\n    showFileSize?: boolean;\r\n    onDelete?: (file: AttachmentType) => void;\r\n}\r\n\r\nconst Attachment: React.FunctionComponent<Props> = ({ attachment, showFileSize, onDelete }) => {\r\n    const intl = useIntl();\r\n    const BEM = BEMHelper('attachment');\r\n    const cls = classnames(BEM.block, {\r\n        [BEM.modifier('pending')]: attachment.pending,\r\n    });\r\n\r\n    return (\r\n        <div className={cls}>\r\n            {attachment.pending && (\r\n                <div className={BEM.element('spinner')}>\r\n                    <NavFrontendSpinner type=\"S\" />\r\n                </div>\r\n            )}\r\n            <VedleggIkon className={BEM.element('icon')} width={20} height={20} />\r\n            <div className={BEM.element('filename')}>\r\n                {attachment.url ? (\r\n                    <Lenke href={attachment.url} target=\"_blank\">\r\n                        {attachment.filename}\r\n                    </Lenke>\r\n                ) : (\r\n                    <React.Fragment>{attachment.filename}</React.Fragment>\r\n                )}\r\n                {showFileSize && <div>{bytesString(attachment.filesize)}</div>}\r\n            </div>\r\n            {onDelete && attachment.uploaded && !attachment.pending && (\r\n                <span className={BEM.element('deleteButton')}>\r\n                    <SlettKnapp\r\n                        onClick={() => onDelete(attachment)}\r\n                        ariaLabel={intl.formatMessage({ id: 'vedlegg.arialabel.slett' }, { navn: attachment.filename })}\r\n                    />\r\n                </span>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Attachment;\r\n","import * as React from 'react';\r\nimport AttachmentComponent from './Attachment';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport './attachment.less';\r\nimport { Attachment } from 'common/storage/attachment/types/Attachment';\r\n\r\ninterface Props {\r\n    attachments: Attachment[];\r\n    showFileSize?: boolean;\r\n    onDelete?: (file: Attachment) => void;\r\n}\r\n\r\nconst AttachmentList: React.FunctionComponent<Props> = (props) => {\r\n    const { attachments, showFileSize, onDelete } = props;\r\n    return (\r\n        <ul className=\"attachmentList\">\r\n            <TransitionGroup>\r\n                {attachments.map((attachment, index) => (\r\n                    <CSSTransition classNames=\"transitionFade\" timeout={500} key={index}>\r\n                        <li>\r\n                            <AttachmentComponent\r\n                                attachment={attachment}\r\n                                onDelete={onDelete}\r\n                                showFileSize={showFileSize}\r\n                            />\r\n                        </li>\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </ul>\r\n    );\r\n};\r\nexport default AttachmentList;\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport './labeltekst.less';\r\n\r\ntype MessageValue = string | number | boolean | Date | null | undefined;\r\n\r\ninterface Props {\r\n    children?: React.ReactNode;\r\n    intlId?: string;\r\n    intlValue?: { [key: string]: MessageValue };\r\n}\r\n\r\nconst Labeltekst: React.FunctionComponent<Props> = ({ children, intlId, intlValue }) => {\r\n    const intl = useIntl();\r\n    return <span className=\"labeltext\">{intlId ? intl.formatMessage({ id: intlId }, intlValue) : children}</span>;\r\n};\r\n\r\nexport default Labeltekst;\r\n","import { AttachmentType } from 'common/storage/attachment/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\n\r\nexport enum InnsendingsType {\r\n    SEND_SENERE = 'SEND_SENERE',\r\n}\r\n\r\nexport interface Attachment {\r\n    id: string;\r\n    filename: string;\r\n    filesize: number;\r\n    file: File;\r\n    url?: string;\r\n    uuid?: string;\r\n    pending: boolean;\r\n    uploaded: boolean;\r\n    type: AttachmentType;\r\n    skjemanummer: Skjemanummer;\r\n    innsendingsType?: InnsendingsType;\r\n    error?: any;\r\n}\r\n","import { guid } from 'nav-frontend-js-utils';\r\nimport { Attachment, InnsendingsType } from 'common/storage/attachment/types/Attachment';\r\nimport { AttachmentType } from 'common/storage/attachment/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\n\r\nexport const generateAttachmentId = () => 'V'.concat(guid().replace(/-/g, ''));\r\n\r\nexport const mapFileToAttachment = (\r\n    file: File,\r\n    type: AttachmentType,\r\n    skjemanummer: Skjemanummer,\r\n    innsendingsType?: InnsendingsType\r\n): Attachment => ({\r\n    id: generateAttachmentId(),\r\n    file,\r\n    filename: file.name,\r\n    filesize: file.size,\r\n    uploaded: false,\r\n    pending: false,\r\n    type,\r\n    skjemanummer,\r\n    innsendingsType,\r\n});\r\n\r\nexport const isAttachmentWithError = ({ pending, uploaded, innsendingsType, filesize }: Attachment) => {\r\n    if (innsendingsType === InnsendingsType.SEND_SENERE) {\r\n        return false;\r\n    }\r\n    return (pending === false && uploaded === false) || filesize === 0;\r\n};\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport AlertStripe from 'nav-frontend-alertstriper';\r\nimport Lukknapp, { LukknappProps } from 'nav-frontend-lukknapp';\r\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\r\nimport { guid } from 'nav-frontend-js-utils';\r\n\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport './alertstripeWithCloseButton.less';\r\n\r\ninterface AlertstripeContentProps {\r\n    lukknappProps: LukknappProps;\r\n    onClose?: () => void;\r\n    errorMessages: React.ReactNode[];\r\n}\r\n\r\nconst AlertstripeWithCloseButton = ({ lukknappProps, onClose, errorMessages }: AlertstripeContentProps) => {\r\n    const cls = BEMHelper('alertStripeContent');\r\n    return (\r\n        <AlertStripe type=\"advarsel\">\r\n            <div className={cls.block}>\r\n                {errorMessages.length === 1 && (\r\n                    <Normaltekst className={cls.element('title')}>{errorMessages[0]}</Normaltekst>\r\n                )}\r\n                {errorMessages.length > 1 && (\r\n                    <div className={cls.element('error-list')}>\r\n                        <Element className={cls.element('title')}>\r\n                            <FormattedMessage id=\"vedlegg.feilmelding.tittel.flereFeil\" />\r\n                        </Element>\r\n                        <ul>\r\n                            {errorMessages.map((message: React.ReactNode) => (\r\n                                <li className={cls.element('error-list-element')} key={guid()}>\r\n                                    <Normaltekst>{message}</Normaltekst>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n                {onClose && <Lukknapp className={cls.element('lukk-knapp')} {...lukknappProps} onClick={onClose} />}\r\n            </div>\r\n        </AlertStripe>\r\n    );\r\n};\r\nexport default AlertstripeWithCloseButton;\r\n","import * as React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport VedleggInput from './AttachmentInput';\r\nimport AttachmentList from './AttachmentList';\r\nimport LabelText from '../../../components/labeltekst/Labeltekst';\r\nimport { bytesString, getTotalFileSize } from 'common/util/filesize';\r\nimport { isAttachmentWithError, mapFileToAttachment } from './util';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { guid } from 'nav-frontend-js-utils';\r\nimport { Attachment } from 'common/storage/attachment/types/Attachment';\r\nimport Block from 'common/components/block/Block';\r\nimport AlertstripeWithCloseButton from 'common/components/alertstripe-content/AlertstripeWithCloseButton';\r\nimport { AttachmentType } from 'common/storage/attachment/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\n\r\nexport interface AttachmentOverviewProps {\r\n    attachments: Attachment[];\r\n    attachmentType: AttachmentType;\r\n    skjemanummer: Skjemanummer;\r\n    inputId?: string;\r\n    showFileSize?: boolean;\r\n    onFilesSelect: (files: Attachment[]) => void;\r\n    onFileDelete: (files: Attachment[]) => void;\r\n}\r\n\r\ninterface State {\r\n    errorMessage?: string;\r\n}\r\n\r\ntype Props = AttachmentOverviewProps;\r\nclass AttachmentOverview extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.deleteFailedAttachments = this.deleteFailedAttachments.bind(this);\r\n    }\r\n\r\n    createErrorMessagesForFailedAttachments(attachments: Attachment[]): React.ReactNode[] {\r\n        const errorMessages: React.ReactNode[] = [];\r\n        const attachmentsWithError = attachments.filter(isAttachmentWithError);\r\n        const multipleErrors = attachmentsWithError.length > 1;\r\n\r\n        attachmentsWithError.forEach((a: Attachment) => {\r\n            const error = a.error;\r\n            if (error && error.response !== undefined && error.response.status === 413) {\r\n                errorMessages.push(\r\n                    <FormattedMessage\r\n                        id={multipleErrors ? 'vedlegg.forStort.flereFeil' : 'vedlegg.forStort'}\r\n                        values={{ filename: a.filename }}\r\n                    />\r\n                );\r\n            } else {\r\n                errorMessages.push(\r\n                    <FormattedMessage\r\n                        id={multipleErrors ? 'vedlegg.feilmelding.flereFeil' : 'vedlegg.feilmelding'}\r\n                        values={{ filename: a.filename }}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        return errorMessages;\r\n    }\r\n\r\n    deleteFailedAttachments(): void {\r\n        this.props.onFileDelete(this.props.attachments.filter(isAttachmentWithError));\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            inputId = guid(),\r\n            attachments,\r\n            attachmentType,\r\n            skjemanummer,\r\n            showFileSize,\r\n            onFileDelete,\r\n            onFilesSelect,\r\n        } = this.props;\r\n\r\n        const showErrorMessage: boolean = this.props.attachments.some(isAttachmentWithError);\r\n        const attachmentsToRender = attachments.filter((a: Attachment) => !isAttachmentWithError(a));\r\n        const showAttachments = attachmentsToRender.length > 0;\r\n\r\n        return (\r\n            <>\r\n                <Block margin={showAttachments || showErrorMessage ? 'xs' : 'none'}>\r\n                    <VedleggInput\r\n                        id={inputId}\r\n                        onFilesSelect={(files: File[]) => {\r\n                            onFilesSelect(files.map((f) => mapFileToAttachment(f, attachmentType, skjemanummer)));\r\n                        }}\r\n                        onClick={this.deleteFailedAttachments}\r\n                        attachmentType={attachmentType}\r\n                    />\r\n                </Block>\r\n                <CSSTransition classNames=\"transitionFade\" timeout={150} in={showErrorMessage} unmountOnExit={true}>\r\n                    <>\r\n                        <Block margin=\"xs\" visible={showErrorMessage} animated={false}>\r\n                            <AlertstripeWithCloseButton\r\n                                lukknappProps={{\r\n                                    hvit: true,\r\n                                    type: 'button',\r\n                                    children: '',\r\n                                }}\r\n                                errorMessages={this.createErrorMessagesForFailedAttachments(\r\n                                    this.props.attachments.filter(isAttachmentWithError)\r\n                                )}\r\n                                onClose={this.deleteFailedAttachments}\r\n                            />\r\n                        </Block>\r\n                    </>\r\n                </CSSTransition>\r\n                <CSSTransition classNames=\"transitionFade\" timeout={150} in={showAttachments} unmountOnExit={true}>\r\n                    <>\r\n                        {showAttachments && (\r\n                            <>\r\n                                <Block margin=\"xs\">\r\n                                    <LabelText>\r\n                                        <FormattedMessage\r\n                                            id=\"vedlegg.liste.tittel\"\r\n                                            values={{\r\n                                                størrelse: bytesString(\r\n                                                    getTotalFileSize(attachmentsToRender.map((a: Attachment) => a.file))\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                    </LabelText>\r\n                                </Block>\r\n                                <AttachmentList\r\n                                    attachments={attachmentsToRender}\r\n                                    showFileSize={showFileSize}\r\n                                    onDelete={(file: Attachment) => onFileDelete([file])}\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </>\r\n                </CSSTransition>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default AttachmentOverview;\r\n","export enum AttachmentType {\r\n    TILRETTELEGGING = 'tilrettelegging',\r\n    ANNEN_INNTEKT = 'anneninntektDokumentasjon',\r\n}\r\n","export enum Skjemanummer {\r\n    ANNET = 'I000060',\r\n    SKJEMA_FOR_TILRETTELEGGING_OG_OMPLASSERING = 'I000109',\r\n    TILRETTELEGGING_FOR_ARBEIDSTAKERE = 'I000049',\r\n    TILRETTELEGGING_FOR_FRILANS_ELLER_SELVSTENDIG = 'I000001',\r\n}\r\n","import { FormikErrors } from 'formik';\r\nimport { AnnenInntekt, AnnenInntektType, JobbIUtlandetInntekt } from 'app/types/AnnenInntekt';\r\nimport { isISODateString } from 'nav-datovelger';\r\n\r\ntype AnnenInntektFeil = FormikErrors<AnnenInntekt>;\r\n\r\nconst validateAndreInntekter =\r\n    () =>\r\n    (annenInntekt: Partial<AnnenInntekt>): AnnenInntektFeil => {\r\n        const errors: AnnenInntektFeil = {};\r\n\r\n        if (annenInntekt.type === undefined || (annenInntekt.type && annenInntekt.type.length === 0)) {\r\n            errors.type = 'valideringsfeil.annenInntekt.inntektskilde.påkrevd';\r\n        }\r\n\r\n        if (annenInntekt.type === AnnenInntektType.JOBB_I_UTLANDET) {\r\n            if (!annenInntekt.land) {\r\n                (errors as FormikErrors<JobbIUtlandetInntekt>).land = 'valideringsfeil.annenInntekt.land.påkrevd';\r\n            }\r\n\r\n            if (!annenInntekt.arbeidsgiverNavn) {\r\n                (errors as FormikErrors<JobbIUtlandetInntekt>).arbeidsgiverNavn =\r\n                    'valideringsfeil.annenInntekt.arbeidsgiverNavn.påkrevd';\r\n            }\r\n\r\n            if (annenInntekt.arbeidsgiverNavn && annenInntekt.arbeidsgiverNavn.length > 100) {\r\n                (errors as FormikErrors<JobbIUtlandetInntekt>).arbeidsgiverNavn =\r\n                    'valideringsfeil.annenInntekt.arbeidsgiverNavn.max100Tegn';\r\n            }\r\n\r\n            if (\r\n                annenInntekt.tidsperiode === undefined ||\r\n                (annenInntekt.tidsperiode !== undefined && annenInntekt.tidsperiode.fom === undefined)\r\n            ) {\r\n                errors.tidsperiode = { fom: 'valideringsfeil.annenInntekt.fom.påkrevd' };\r\n            }\r\n\r\n            if (annenInntekt.tidsperiode !== undefined && !isISODateString(annenInntekt.tidsperiode.fom)) {\r\n                errors.tidsperiode = { fom: 'valideringsfeil.annenInntekt.fom.ugyldigDato' };\r\n            }\r\n        }\r\n        return errors;\r\n    };\r\nexport default validateAndreInntekter;\r\n","import React, { FunctionComponent, useMemo } from 'react';\r\nimport { useIntl, FormattedMessage } from 'react-intl';\r\nimport { Formik, FormikProps, FieldArray } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport BEMHelper from 'common/util/bem';\r\nimport { Knapp, Hovedknapp } from 'nav-frontend-knapper';\r\nimport { isValid } from 'i18n-iso-countries';\r\nimport RadioPanelGruppe from 'app/formik/wrappers/RadioPanelGruppe';\r\nimport Block from 'common/components/block/Block';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport getCountries from 'app/utils/getCountries';\r\nimport InputField from 'app/formik/wrappers/InputField';\r\nimport { AnnenInntektType, AnnenInntekt } from 'app/types/AnnenInntekt';\r\nimport Veilederinfo from 'common/components/veileder-info/Veilederinfo';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\nimport AttachmentOverview from 'common/storage/attachment/components/AttachmentOverview';\r\nimport { AttachmentType } from 'common/storage/attachment/types/AttachmentType';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport { Attachment } from 'common/storage/attachment/types/Attachment';\r\nimport { ModalFormProps } from '../ArbeidSeksjon/ArbeidSeksjon';\r\nimport { AttachmentActionTypes } from 'app/redux/types/AttachmentAction';\r\nimport Action from 'app/redux/types/Action';\r\nimport { State } from 'app/redux/store';\r\nimport validateAndreInntekter from 'app/utils/validation/validateAndreInntekter';\r\nimport DatoInput from 'app/formik/wrappers/DatoInput';\r\nimport Select from 'app/formik/wrappers/Select';\r\nimport DatoerInputLayout from 'common/components/layout/datoerInputLayout/DatoerInputLayout';\r\nimport Knapperad from 'common/components/knapperad/Knapperad';\r\nimport { cleanupAnnenInntekt } from '../utils/cleanup';\r\n\r\nconst cls = BEMHelper('andre-inntekter');\r\n\r\ninterface ConnectProps {\r\n    skjulFørstegangstjeneste?: boolean;\r\n    vedlegg: Attachment[];\r\n    uploadAttachment: (attachment: Attachment) => void;\r\n    deleteAttachment: (attachment: Attachment) => void;\r\n}\r\n\r\ntype Props = ConnectProps & ModalFormProps<AnnenInntekt>;\r\n\r\nconst AndreInntekter: FunctionComponent<Props> = (props) => {\r\n    const intl = useIntl();\r\n    const {\r\n        endre,\r\n        onCancel,\r\n        element = {\r\n            vedlegg: [] as Attachment[],\r\n        },\r\n        onAdd,\r\n        uploadAttachment,\r\n        deleteAttachment,\r\n        vedlegg,\r\n        skjulFørstegangstjeneste,\r\n    } = props;\r\n\r\n    const countries = useMemo(() => getCountries(true, false, intl.locale), []);\r\n    const onSubmit = (annenInntekt: AnnenInntekt) => {\r\n        onAdd(cleanupAnnenInntekt(annenInntekt) as AnnenInntekt);\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            // @ts-ignore Fiks\r\n            initialValues={element}\r\n            validate={validateAndreInntekter()}\r\n            onSubmit={onSubmit}\r\n            render={({ values, handleSubmit }: FormikProps<AnnenInntekt>) => {\r\n                const visKomponent = {\r\n                    navn: values.type === AnnenInntektType.JOBB_I_UTLANDET,\r\n                    land: values.type === AnnenInntektType.JOBB_I_UTLANDET,\r\n                    advarselDokumentasjon: values.type !== AnnenInntektType.JOBB_I_UTLANDET,\r\n                    vedlegg: values.type !== AnnenInntektType.JOBB_I_UTLANDET,\r\n                    visInnhold: values.type === AnnenInntektType.JOBB_I_UTLANDET,\r\n                };\r\n\r\n                return (\r\n                    <form\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            handleSubmit();\r\n                        }}\r\n                        className={cls.block}\r\n                    >\r\n                        <Block>\r\n                            <Undertittel>\r\n                                <FormattedMessage id={`arbeidsforhold.andreInntekter.tittel${endre ? '.endre' : ''}`} />\r\n                            </Undertittel>\r\n                        </Block>\r\n\r\n                        <Block>\r\n                            <RadioPanelGruppe\r\n                                twoColumns={true}\r\n                                name=\"type\"\r\n                                legend={getMessage(intl, 'arbeidsforhold.andreInntekter.inntektstype')}\r\n                                radios={[\r\n                                    {\r\n                                        value: AnnenInntektType.JOBB_I_UTLANDET,\r\n                                        label: getMessage(intl, 'inntektstype.jobb_i_utlandet'),\r\n                                    },\r\n                                    ...(skjulFørstegangstjeneste\r\n                                        ? []\r\n                                        : [\r\n                                              {\r\n                                                  value: AnnenInntektType.MILITÆRTJENESTE,\r\n                                                  label: getMessage(intl, 'inntektstype.militær_eller_siviltjeneste'),\r\n                                              },\r\n                                          ]),\r\n                                ]}\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block visible={visKomponent.visInnhold}>\r\n                            <Block visible={visKomponent.land}>\r\n                                <Select name=\"land\" label={getMessage(intl, 'arbeidsforhold.andreInntekter.land')}>\r\n                                    <option value=\"\" />\r\n                                    {countries.map((countryOption: string[]) => {\r\n                                        const [countryCode, countryName] = countryOption;\r\n                                        return (\r\n                                            <option key={countryCode} value={countryCode}>\r\n                                                {countryName}\r\n                                            </option>\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                            </Block>\r\n\r\n                            <Block visible={visKomponent.navn}>\r\n                                <InputField\r\n                                    name=\"arbeidsgiverNavn\"\r\n                                    label={getMessage(intl, 'arbeidsforhold.andreInntekter.arbeidsgiverNavn')}\r\n                                />\r\n                            </Block>\r\n\r\n                            <Block>\r\n                                <DatoerInputLayout\r\n                                    fra={\r\n                                        <DatoInput\r\n                                            fullskjermKalender={true}\r\n                                            name=\"tidsperiode.fom\"\r\n                                            label={getMessage(intl, 'fraOgMed')}\r\n                                        />\r\n                                    }\r\n                                    til={\r\n                                        <DatoInput\r\n                                            fullskjermKalender={true}\r\n                                            name=\"tidsperiode.tom\"\r\n                                            label={getMessage(intl, 'tilOgMed')}\r\n                                        />\r\n                                    }\r\n                                />\r\n                            </Block>\r\n\r\n                            <Block margin=\"none\" visible={visKomponent.advarselDokumentasjon}>\r\n                                <Veilederinfo type=\"info\">\r\n                                    <FormattedMessage id=\"arbeidsforhold.andreInntekter.militær_eller_siviltjeneste_info\" />\r\n                                </Veilederinfo>\r\n                            </Block>\r\n\r\n                            <Block visible={visKomponent.vedlegg}>\r\n                                <FieldArray\r\n                                    name={'vedlegg'}\r\n                                    render={({ form, push, remove }) => {\r\n                                        return (\r\n                                            <AttachmentOverview\r\n                                                attachmentType={AttachmentType.ANNEN_INNTEKT}\r\n                                                skjemanummer={Skjemanummer.ANNET}\r\n                                                attachments={vedlegg.filter((v) => form.values.vedlegg.includes(v.id))}\r\n                                                onFilesSelect={(files: Attachment[]) => {\r\n                                                    files.forEach((file) => {\r\n                                                        push(file.id);\r\n                                                        uploadAttachment(file);\r\n                                                    });\r\n                                                }}\r\n                                                onFileDelete={(files: Attachment[]) => {\r\n                                                    files.forEach((file: Attachment) => {\r\n                                                        remove(form.values.vedlegg.indexOf(file.id));\r\n                                                        deleteAttachment(file);\r\n                                                    });\r\n                                                }}\r\n                                            />\r\n                                        );\r\n                                    }}\r\n                                />\r\n                            </Block>\r\n                        </Block>\r\n                        <Block visible={values.type === AnnenInntektType.MILITÆRTJENESTE}>\r\n                            <Veilederinfo type=\"info\">\r\n                                <FormattedMessage\r\n                                    id=\"arbeidsforhold.veileder.førstegangstjeneste\"\r\n                                    values={{\r\n                                        a: (msg: any) => (\r\n                                            <a\r\n                                                className=\"lenke\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                href=\"https://www.nav.no/no/Person/Skjemaer-for-privatpersoner/Forsteside+for+innsending\"\r\n                                            >\r\n                                                {msg}\r\n                                            </a>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </Veilederinfo>\r\n                        </Block>\r\n                        <Knapperad stil=\"mobile-50-50\">\r\n                            <Knapp htmlType=\"button\" onClick={onCancel}>\r\n                                <FormattedMessage id=\"avbryt\" />\r\n                            </Knapp>\r\n                            <Hovedknapp\r\n                                disabled={!isValid || values.type === AnnenInntektType.MILITÆRTJENESTE}\r\n                                htmlType=\"submit\"\r\n                            >\r\n                                <FormattedMessage id={endre ? 'endre' : 'leggtil'} />\r\n                            </Hovedknapp>\r\n                        </Knapperad>\r\n                    </form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        vedlegg: state.attachment.vedlegg.filter((v) => v.type === AttachmentType.ANNEN_INNTEKT),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: (action: Action) => void) => {\r\n    return {\r\n        uploadAttachment: (attachment: Attachment) =>\r\n            dispatch({ type: AttachmentActionTypes.UPLOAD_ATTACHMENT_REQUEST, payload: { attachment } }),\r\n        deleteAttachment: (attachment: Attachment) =>\r\n            dispatch({ type: AttachmentActionTypes.DELETE_ATTACHMENT_REQUEST, payload: { attachment } }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AndreInntekter);\r\n","import { FormikErrors } from 'formik';\r\nimport { FrilansOppdrag } from 'app/types/FrilansInformasjon';\r\nimport { isISODateString } from 'nav-datovelger';\r\n\r\ntype FrilansoppdragFeil = FormikErrors<FrilansOppdrag>;\r\n\r\nconst validateFrilansoppdrag =\r\n    () =>\r\n    (frilansOppdrag: Partial<FrilansOppdrag>): FrilansoppdragFeil => {\r\n        const errors: FrilansoppdragFeil = {};\r\n\r\n        if (frilansOppdrag.navnPåArbeidsgiver === undefined || frilansOppdrag.navnPåArbeidsgiver === '') {\r\n            errors.navnPåArbeidsgiver = 'valideringsfeil.frilans.navnPåArbeidsgiver.påkrevd';\r\n        }\r\n\r\n        if (frilansOppdrag.navnPåArbeidsgiver !== undefined && frilansOppdrag.navnPåArbeidsgiver.length > 100) {\r\n            errors.navnPåArbeidsgiver = 'valideringsfeil.frilans.navnPåArbeidsgiver.max100Tegn';\r\n        }\r\n\r\n        if (\r\n            frilansOppdrag.tidsperiode === undefined ||\r\n            (frilansOppdrag.tidsperiode !== undefined && frilansOppdrag.tidsperiode.fom === undefined)\r\n        ) {\r\n            errors.tidsperiode = { fom: 'valideringsfeil.frilans.fom.påkrevd' };\r\n        }\r\n\r\n        if (frilansOppdrag.tidsperiode !== undefined && !isISODateString(frilansOppdrag.tidsperiode.fom)) {\r\n            errors.tidsperiode = { fom: 'valideringsfeil.frilans.fom.ugyldigDato' };\r\n        }\r\n\r\n        return errors;\r\n    };\r\nexport default validateFrilansoppdrag;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { useIntl, FormattedMessage } from 'react-intl';\r\nimport { Formik, FormikProps } from 'formik';\r\n\r\nimport { Utenlandsopphold } from 'app/types/InformasjonOmUtenlandsopphold';\r\n\r\nimport BEMHelper from 'common/util/bem';\r\nimport { Knapp, Hovedknapp } from 'nav-frontend-knapper';\r\nimport Block from 'common/components/block/Block';\r\nimport { isValid } from 'i18n-iso-countries';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport InputField from 'app/formik/wrappers/InputField';\r\nimport DatoInput from 'app/formik/wrappers/DatoInput';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\nimport Knapperad from 'common/components/knapperad/Knapperad';\r\nimport DatoerInputLayout from 'common/components/layout/datoerInputLayout/DatoerInputLayout';\r\nimport { ModalFormProps } from '../ArbeidSeksjon/ArbeidSeksjon';\r\nimport { FrilansOppdrag as FrilansOppdragType } from '../../../types/FrilansInformasjon';\r\nimport validateFrilansoppdrag from 'app/utils/validation/validateFrilansoppdrag';\r\n\r\nimport './frilansOppdrag.less';\r\n\r\nconst cls = BEMHelper('frilansOppdrag');\r\n\r\ntype Props = ModalFormProps<FrilansOppdragType>;\r\n\r\nconst FrilansOppdrag: FunctionComponent<Props> = (props: Props) => {\r\n    const intl = useIntl();\r\n    const { endre, onCancel, element = {}, onAdd } = props;\r\n\r\n    return (\r\n        <Formik\r\n            // @ts-ignore Fiks\r\n            initialValues={element}\r\n            validate={validateFrilansoppdrag()}\r\n            // @ts-ignore Fiks\r\n            onSubmit={onAdd}\r\n            render={({ handleSubmit }: FormikProps<Utenlandsopphold>) => {\r\n                return (\r\n                    <form\r\n                        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            handleSubmit();\r\n                        }}\r\n                        className={cls.block}\r\n                    >\r\n                        <Block>\r\n                            <Undertittel>{getMessage(intl, 'arbeidsforhold.frilans.oppdrag.tittel')}</Undertittel>\r\n                        </Block>\r\n\r\n                        <Block>\r\n                            <InputField\r\n                                name=\"navnPåArbeidsgiver\"\r\n                                label={getMessage(intl, 'arbeidsforhold.frilans.oppdrag.navnPåArbeidsgiver')}\r\n                            />\r\n                        </Block>\r\n\r\n                        <Block>\r\n                            <DatoerInputLayout\r\n                                fra={\r\n                                    <DatoInput\r\n                                        fullskjermKalender={true}\r\n                                        name=\"tidsperiode.fom\"\r\n                                        label={getMessage(intl, 'fraOgMed')}\r\n                                    />\r\n                                }\r\n                                til={\r\n                                    <DatoInput\r\n                                        fullskjermKalender={true}\r\n                                        name=\"tidsperiode.tom\"\r\n                                        label={getMessage(intl, 'tilOgMed')}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Block>\r\n\r\n                        <Knapperad align=\"center\">\r\n                            <Knapp htmlType=\"button\" onClick={onCancel}>\r\n                                <FormattedMessage id=\"avbryt\" />\r\n                            </Knapp>\r\n                            <Hovedknapp disabled={!isValid} htmlType=\"submit\">\r\n                                <FormattedMessage id={endre ? 'endre' : 'leggtil'} />\r\n                            </Hovedknapp>\r\n                        </Knapperad>\r\n                    </form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default FrilansOppdrag;\r\n","import React from 'react';\r\n\r\nconst Pencil = (props: any) => (\r\n    <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n        <title>Endre</title>\r\n        <defs />\r\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <path\r\n                d=\"M7.70873615,20.6606674 L2,22 L3.33933695,16.2921651 L17.1123472,2.51743349 C17.4435139,2.18613362 17.892753,2 18.3611884,2 C18.8296238,2 19.2788628,2.18613362 19.6100296,2.51743349 L21.4835121,4.39091 C22.1721626,5.08044118 22.1721626,6.19728745 21.4835121,6.88858439 L7.70873615,20.6606674 Z M20.861078,7.51366515 L16.4872644,3.14163137 L20.861078,7.51366515 Z M19.6012007,8.77353837 L15.2388646,4.39002712 L19.6012007,8.77353837 Z M7.93122324,20.4399468 L3.56094116,16.0687959 L7.93122324,20.4399468 Z\"\r\n                stroke=\"#0067C5\"\r\n                strokeWidth=\"0.899999976\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default Pencil;\r\n","import * as React from 'react';\r\nimport Normaltekst from 'nav-frontend-typografi/lib/normaltekst';\r\nimport BEMHelper from 'common/util/bem';\r\nimport { default as Etikett, EtikettBaseProps } from 'nav-frontend-etiketter';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport './interactiveListElement.less';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport Pencil from './Pencil';\r\n\r\nexport interface InteractiveListElementProps {\r\n    style?: 'gray' | 'grayWithBorder';\r\n    onEdit: () => void;\r\n    onDelete: () => void;\r\n    editButtonAriaText?: string;\r\n    deleteButtonAriaText?: string;\r\n}\r\n\r\ninterface AllListElementProps extends InteractiveListElementProps {\r\n    title: string;\r\n    text: string;\r\n    deleteLinkText: string;\r\n    etikettProps?: EtikettBaseProps;\r\n}\r\n\r\nconst bem = BEMHelper('interactiveListElement');\r\n\r\nconst InteractiveListElement: React.FunctionComponent<AllListElementProps> = ({\r\n    title,\r\n    text,\r\n    deleteLinkText,\r\n    etikettProps,\r\n    style = 'gray',\r\n    deleteButtonAriaText,\r\n    editButtonAriaText,\r\n    onDelete,\r\n    onEdit,\r\n}) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <li className={bem.classNames(bem.block, bem.modifier(style))}>\r\n            <div className={bem.element('top')}>\r\n                <Normaltekst className=\"title\">{title}</Normaltekst>\r\n                <button\r\n                    type=\"button\"\r\n                    className={bem.element('editButton')}\r\n                    onClick={onEdit}\r\n                    aria-label={editButtonAriaText || getMessage(intl, 'rediger')}\r\n                >\r\n                    <Pencil />\r\n                </button>\r\n            </div>\r\n            <Normaltekst className={bem.element('text')}>{text}</Normaltekst>\r\n            <div className={bem.element('bottom')}>\r\n                {etikettProps !== undefined && <Etikett {...etikettProps} />}\r\n                <button\r\n                    className={bem.element('deleteButton')}\r\n                    onClick={onDelete}\r\n                    type=\"button\"\r\n                    aria-label={deleteButtonAriaText}\r\n                >\r\n                    {deleteLinkText}\r\n                </button>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\nexport default InteractiveListElement;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { ModalSummaryProps } from '../ArbeidSeksjon/ArbeidSeksjon';\r\nimport { FrilansOppdrag } from 'app/types/FrilansInformasjon';\r\nimport InteractiveListElement from 'common/components/interactive-list-element/InteractiveListElement';\r\nimport { prettifyTidsperiode } from 'app/utils/formatDate';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { useIntl } from 'react-intl';\r\n\r\nconst FrilansListElement: FunctionComponent<ModalSummaryProps<FrilansOppdrag>> = ({ element, ...rest }) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <InteractiveListElement\r\n            style=\"grayWithBorder\"\r\n            title={element.navnPåArbeidsgiver}\r\n            text={prettifyTidsperiode(element.tidsperiode)}\r\n            deleteLinkText={getMessage(intl, 'utenlandsopphold.land.slett')}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nexport default FrilansListElement;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './infoBlock.less';\r\nimport { BlockPadding } from 'common/components/block/Block';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nexport interface Props {\r\n    children: React.ReactNode;\r\n    padding?: BlockPadding;\r\n}\r\n\r\nconst bem = BEMHelper('infoBlock');\r\n\r\nconst InfoBlock: React.FunctionComponent<Props> = ({ children, padding = 'xs' }) => (\r\n    <div className={classnames(bem.block, bem.modifier(`pad-${padding}`))}>{children}</div>\r\n);\r\n\r\nexport default InfoBlock;\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nconst FrilansSpørsmålInfoBoksTekst = () => {\r\n    return (\r\n        <>\r\n            <FormattedMessage id=\"arbeidsforhold.frilans.erFrilanser.infoboksTekst.title\" />\r\n            <ul>\r\n                <FormattedMessage tagName=\"li\" id=\"arbeidsforhold.frilans.erFrilanser.infoboksTekst.liste.punkt1\" />\r\n                <FormattedMessage tagName=\"li\" id=\"arbeidsforhold.frilans.erFrilanser.infoboksTekst.liste.punkt2\" />\r\n                <FormattedMessage tagName=\"li\" id=\"arbeidsforhold.frilans.erFrilanser.infoboksTekst.liste.punkt3\" />\r\n                <FormattedMessage tagName=\"li\" id=\"arbeidsforhold.frilans.erFrilanser.infoboksTekst.liste.punkt4\" />\r\n                <FormattedMessage tagName=\"li\" id=\"arbeidsforhold.frilans.erFrilanser.infoboksTekst.liste.punkt5\" />\r\n                <FormattedMessage tagName=\"li\" id=\"arbeidsforhold.frilans.erFrilanser.infoboksTekst.liste.punkt6\" />\r\n                <FormattedMessage tagName=\"li\" id=\"arbeidsforhold.frilans.erFrilanser.infoboksTekst.liste.punkt7\" />\r\n            </ul>\r\n            <FormattedMessage\r\n                id=\"arbeidsforhold.frilans.erFrilanser.infoboksTekst.link\"\r\n                values={{\r\n                    a: (msg: any) => (\r\n                        <a\r\n                            className=\"lenke\"\r\n                            rel=\"noopener inoreferrer\"\r\n                            href=\"https://www.skatteetaten.no/bedrift-og-organisasjon/arbeidsgiver/a-meldingen/veiledning/arbeidsforholdet/type-arbeidsforhold/frilanser-oppdragstaker-og-personer-som-mottar-honorarer\\\"\r\n                        >\r\n                            {msg}\r\n                        </a>\r\n                    ),\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default FrilansSpørsmålInfoBoksTekst;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport JaNeiSpørsmål from 'app/formik/wrappers/JaNeiSpørsmål';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport DatoInput from 'app/formik/wrappers/DatoInput';\r\nimport Block from 'common/components/block/Block';\r\nimport ArbeidSeksjon from '../ArbeidSeksjon/ArbeidSeksjon';\r\nimport FrilansOppdrag from './FrilansOppdrag';\r\nimport { CustomFormikProps } from 'app/types/Formik';\r\nimport { cleanupFrilansinformasjon } from '../utils/cleanup';\r\nimport _ from 'lodash';\r\nimport FrilansListElement from './FrilansListElement';\r\nimport InfoBlock from 'common/components/info-block/InfoBlock';\r\n\r\nimport FrilansSpørsmålInfoBoksTekst from './FrilansSpørsmålInfoBoksTekst';\r\n\r\ninterface Props {\r\n    formikProps: CustomFormikProps;\r\n}\r\n\r\nconst FrilansSpørsmål: FunctionComponent<Props> = (props: Props) => {\r\n    const intl = useIntl();\r\n    const { formikProps } = props;\r\n    const normalisertFrilansinfo = cleanupFrilansinformasjon(formikProps.values.søker);\r\n\r\n    const visKomponent = {\r\n        oppstartsdato: formikProps.values.søker.harJobbetSomFrilansSiste10Mnd === true,\r\n        jobberFremdelesSomFrilans: !_.isUndefined(normalisertFrilansinfo.oppstart),\r\n        harJobbetForNærVennEllerFamilieSiste10Mnd: !_.isUndefined(normalisertFrilansinfo.jobberFremdelesSomFrilans),\r\n        driverFosterhjem:\r\n            normalisertFrilansinfo.harJobbetForNærVennEllerFamilieSiste10Mnd === false ||\r\n            (normalisertFrilansinfo.oppdragForNæreVennerEllerFamilieSiste10Mnd !== undefined &&\r\n                normalisertFrilansinfo.oppdragForNæreVennerEllerFamilieSiste10Mnd.length > 0),\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Block>\r\n                <JaNeiSpørsmål\r\n                    twoColumns={true}\r\n                    name=\"søker.harJobbetSomFrilansSiste10Mnd\"\r\n                    legend={getMessage(intl, 'arbeidsforhold.frilans.erFrilanser')}\r\n                    infoboksTekst={<FrilansSpørsmålInfoBoksTekst />}\r\n                />\r\n            </Block>\r\n\r\n            {formikProps.values.søker.harJobbetSomFrilansSiste10Mnd && (\r\n                <>\r\n                    <Block header={{ title: 'Frilans' }}>\r\n                        <InfoBlock>\r\n                            <Block\r\n                                visible={visKomponent.oppstartsdato}\r\n                                margin={visKomponent.jobberFremdelesSomFrilans ? undefined : 'xxs'}\r\n                            >\r\n                                <DatoInput\r\n                                    fullskjermKalender={true}\r\n                                    name=\"søker.frilansInformasjon.oppstart\"\r\n                                    label={getMessage(intl, 'arbeidsforhold.frilans.fraOgMed')}\r\n                                />\r\n                            </Block>\r\n\r\n                            <Block visible={visKomponent.jobberFremdelesSomFrilans}>\r\n                                <JaNeiSpørsmål\r\n                                    twoColumns={true}\r\n                                    name={'søker.frilansInformasjon.jobberFremdelesSomFrilans'}\r\n                                    legend={getMessage(intl, 'arbeidsforhold.frilans.erDuFremdelesFrilanser')}\r\n                                />\r\n                            </Block>\r\n\r\n                            <Block visible={visKomponent.harJobbetForNærVennEllerFamilieSiste10Mnd}>\r\n                                <ArbeidSeksjon\r\n                                    name=\"søker.frilansInformasjon.harJobbetForNærVennEllerFamilieSiste10Mnd\"\r\n                                    listName=\"søker.frilansInformasjon.oppdragForNæreVennerEllerFamilieSiste10Mnd\"\r\n                                    legend={getMessage(\r\n                                        intl,\r\n                                        'arbeidsforhold.frilans.oppdragForNæreVennerEllerFamilieSiste10Mnd'\r\n                                    )}\r\n                                    buttonLabel={getMessage(intl, 'leggtil')}\r\n                                    summaryListElementComponent={FrilansListElement}\r\n                                    renderForm={(formProps: any) => <FrilansOppdrag {...formProps} />}\r\n                                    summaryListTitle={{ title: getMessage(intl, 'arbeidsforhold.frilans.listetittel') }}\r\n                                />\r\n                            </Block>\r\n\r\n                            <Block visible={visKomponent.driverFosterhjem} margin=\"s\">\r\n                                <JaNeiSpørsmål\r\n                                    twoColumns={true}\r\n                                    name={'søker.frilansInformasjon.driverFosterhjem'}\r\n                                    legend={getMessage(intl, 'arbeidsforhold.frilans.driverFosterhjem')}\r\n                                />\r\n                            </Block>\r\n                        </InfoBlock>\r\n                    </Block>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FrilansSpørsmål;\r\n","import React from 'react';\r\nconst { VenstreChevron } = require('nav-frontend-chevron');\r\nconst { Knapp } = require('nav-frontend-knapper');\r\n\r\nimport './backButton.less';\r\n\r\ninterface Props {\r\n    text?: string;\r\n    hidden: boolean;\r\n    onClick: () => void;\r\n}\r\n\r\nconst BackButton: React.FunctionComponent<Props> = ({ onClick, hidden, text = 'Tilbake' }) => {\r\n    return hidden ? null : (\r\n        <Knapp className=\"backButton\" onClick={onClick} mini={true} htmlType=\"button\">\r\n            <span className=\"backButton__chevron\">\r\n                <VenstreChevron />\r\n            </span>\r\n            {text}\r\n        </Knapp>\r\n    );\r\n};\r\n\r\nexport default BackButton;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { SummaryError } from '../types/index';\r\n\r\nimport '../styles/validering-styles.less';\r\n\r\ninterface Props {\r\n    title: string;\r\n    show: boolean;\r\n    className?: string;\r\n    errors: SummaryError[];\r\n    onErrorClick?: (error: SummaryError, evt: React.MouseEvent<HTMLAnchorElement>) => void;\r\n}\r\n\r\nconst cls = (show: boolean, className?: string) =>\r\n    classNames('feil-oppsummering-boks', className, {\r\n        'feil-oppsummering-boks--visible': show,\r\n    });\r\n\r\nclass Feiloppsummering extends React.Component<Props, unknown> {\r\n    // @ts-ignore Fiks\r\n    element: HTMLElement | null;\r\n    componentDidMount() {\r\n        if (this.element) {\r\n            this.element.focus();\r\n        }\r\n    }\r\n    render() {\r\n        const { className, show, errors, title, onErrorClick, ...other } = this.props;\r\n\r\n        const listItems = errors.map((error) => {\r\n            const link = '#' + error.name;\r\n            return (\r\n                <li key={error.name}>\r\n                    <a\r\n                        className=\"feil-oppsummering-boks__lenke\"\r\n                        href={link}\r\n                        onClick={onErrorClick ? (evt) => onErrorClick(error, evt) : undefined}\r\n                    >\r\n                        {/* @ts-ignore TS-feil-fiks */}\r\n                        {error.text}\r\n                    </a>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <article\r\n                ref={(node) => {\r\n                    this.element = node;\r\n                }}\r\n                tabIndex={-1}\r\n                className={cls(show, className)}\r\n                {...other}\r\n            >\r\n                <h1 className=\"typo-undertittel\">{title}</h1>\r\n                <ul className=\"feil-oppsummering-boks__liste\">{listItems}</ul>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Feiloppsummering;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { connect } from 'formik';\r\nimport { useIntl } from 'react-intl';\r\nimport { flattenErrors, translateError } from 'app/utils/errorUtils';\r\nimport { FormikProps } from 'app/types/Formik';\r\nimport { UferdigSøknad } from 'app/types/Søknad';\r\nimport BEMHelper from 'common/util/bem';\r\nimport Block from 'common/components/block/Block';\r\nimport Feiloppsummering from 'common/lib/validation/errors/Feiloppsummering';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport './validationErrorSummary.less';\r\n\r\nconst cls = BEMHelper('validationErrorSummary');\r\n\r\ntype Props = FormikProps;\r\n\r\nconst ValidationErrorSummary: FunctionComponent<Props> = ({ formik: { errors, submitCount } }) => {\r\n    const intl = useIntl();\r\n    if (errors) {\r\n        const errorMessages = flattenErrors(errors).map((error) => ({\r\n            ...error,\r\n            text: translateError(intl, error.text),\r\n        }));\r\n\r\n        return (\r\n            <Block visible={errorMessages.length > 0 && submitCount > 0}>\r\n                <Feiloppsummering\r\n                    show={true}\r\n                    className={cls.block}\r\n                    title={getMessage(intl, 'feiloppsummering.tittel')}\r\n                    errors={errorMessages}\r\n                />\r\n            </Block>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport default connect<unknown, UferdigSøknad>(ValidationErrorSummary);\r\n","import React, { ReactElement, FunctionComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\nimport classnames from 'classnames';\r\nimport StegIndikator from 'nav-frontend-stegindikator';\r\n\r\nimport { AppRoute } from 'app/types/Routes';\r\nimport { CustomFormikProps } from 'app/types/Formik';\r\nimport { FetchStatus } from 'app/types/FetchState';\r\nimport {\r\n    parsePathFromLocation,\r\n    getAllSteps,\r\n    getAdjacentSteps,\r\n    getSøknadStepPath,\r\n    finnArbeidsforholdNavn,\r\n} from 'app/utils/stepUtils';\r\nimport { State } from 'app/redux/store';\r\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport BackButton from 'common/components/back-button/BackButton';\r\nimport BEMHelper from 'common/util/bem';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport SøknadStep, { StepID } from 'app/types/SøknadStep';\r\nimport ValidationErrorSummary from '../validation-error-summary/ValidationErrorSummary';\r\nimport './step.less';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst cls = BEMHelper('step');\r\n\r\nexport interface StepProps {\r\n    step: SøknadStep;\r\n    formikProps: CustomFormikProps;\r\n    className?: string;\r\n    showNesteknapp?: boolean;\r\n    children?: ReactElement | ReactElement[];\r\n}\r\n\r\ninterface StateProps {\r\n    arbeidsforhold: Arbeidsforhold[];\r\n}\r\n\r\ntype Props = StepProps & StateProps;\r\n\r\nconst Step: FunctionComponent<Props> = (props) => {\r\n    const intl = useIntl();\r\n    const { step, formikProps, className, showNesteknapp, arbeidsforhold } = props;\r\n\r\n    const allSøknadSteps = getAllSteps(formikProps.values.søknadsgrunnlag);\r\n    const [previousStep, nextStep] = getAdjacentSteps(step, allSøknadSteps);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const config = {\r\n        step,\r\n        renderNesteknapp: showNesteknapp && nextStep.step !== StepID.INGEN,\r\n        renderSendeknapp: nextStep.step === StepID.INGEN,\r\n        renderTilbakeknapp: previousStep.step !== StepID.INGEN,\r\n        onRequestNavigateToPreviousStep: () => {\r\n            const previousPath = getSøknadStepPath(previousStep.step, previousStep.subStep);\r\n            navigate(previousPath);\r\n        },\r\n    };\r\n\r\n    const location = useLocation();\r\n\r\n    const currentStep = parsePathFromLocation(location);\r\n    const stegForStegIndikator = allSøknadSteps.map((otherStep, index) => {\r\n        return {\r\n            index,\r\n            aktiv: otherStep.step === currentStep.step && otherStep.subStep === currentStep.subStep,\r\n            label:\r\n                otherStep.step === StepID.TILRETTELEGGING && otherStep.subStep\r\n                    ? finnArbeidsforholdNavn(otherStep.subStep, arbeidsforhold)\r\n                    : getMessage(intl, `stegtittel.${otherStep.step}`),\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div className={classnames(cls.block, className)}>\r\n            <h1 className={cls.classNames(cls.element('header'), 'blokk-xs')}>\r\n                <FormattedMessage id={`stegtittel.${step.step}`} />\r\n            </h1>\r\n            {currentStep.subStep && (\r\n                <Undertittel className={cls.classNames(cls.element('subHeader'), 'blokk-s')}>\r\n                    {finnArbeidsforholdNavn(currentStep.subStep, arbeidsforhold)}\r\n                </Undertittel>\r\n            )}\r\n            <div className={cls.classNames(cls.element('navigation'), 'blokk-l')}>\r\n                <div>\r\n                    {config.renderTilbakeknapp && (\r\n                        <BackButton\r\n                            text={getMessage(intl, 'steg.tilbake')}\r\n                            hidden={false}\r\n                            onClick={config.onRequestNavigateToPreviousStep}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <StegIndikator kompakt={true} steg={stegForStegIndikator} visLabel={false} />\r\n                <div />\r\n            </div>\r\n\r\n            <ValidationErrorSummary />\r\n            <form onSubmit={formikProps.handleSubmit}>\r\n                <div className={cls.classNames(cls.element('steginnhold'))}>{props.children}</div>\r\n                <div className={cls.classNames(cls.element('stegkontroller'), 'blokk-m')}>\r\n                    {config.renderNesteknapp && (\r\n                        <Hovedknapp htmlType=\"submit\">\r\n                            <FormattedMessage id=\"steg.nesteknapp\" />\r\n                        </Hovedknapp>\r\n                    )}\r\n                    {config.renderSendeknapp && (\r\n                        <Hovedknapp htmlType=\"submit\">\r\n                            <FormattedMessage id=\"oppsummering.sendSøknad\" />\r\n                        </Hovedknapp>\r\n                    )}\r\n                </div>\r\n            </form>\r\n            <hr className=\"blokk-xs\" />\r\n            <div className={cls.element('avbrytSøknadContainer')}>\r\n                <button\r\n                    type=\"button\"\r\n                    className={cls.classNames(cls.element('avbrytSøknad'), 'lenke')}\r\n                    onClick={() => {\r\n                        formikProps.handleReset();\r\n                        navigate(AppRoute.INTRO);\r\n                    }}\r\n                >\r\n                    <FormattedMessage id=\"steg.avbrytSøknad\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    const søkerinfo = state.api.søkerinfo;\r\n    return { arbeidsforhold: søkerinfo.status === FetchStatus.SUCCESS ? søkerinfo.data.arbeidsforhold : undefined };\r\n};\r\n\r\n// @ts-ignore Fiks\r\nexport default connect(mapStateToProps)(Step);\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useFormikSubmit = (isSubmitting: boolean, isValid: boolean, onSubmit: () => void) => {\r\n    const [wasSubmitting, setSubmittingForm] = useState<boolean>(isSubmitting);\r\n\r\n    useEffect(() => {\r\n        if (wasSubmitting === false && isSubmitting === true && isValid === true) {\r\n            onSubmit();\r\n        }\r\n\r\n        setSubmittingForm(isSubmitting);\r\n    }, [isSubmitting, isValid]);\r\n};\r\n\r\nexport default useFormikSubmit;\r\n","import React, { FunctionComponent, ReactElement } from 'react';\r\nimport { CustomFormikProps } from 'app/types/Formik';\r\nimport Step from '../step/Step';\r\n\r\nimport SøknadStep from 'app/types/SøknadStep';\r\nimport useFormikSubmit from 'app/hooks/useFormikSubmit';\r\nimport { useIsValid } from 'app/connectedComponents/formik-wrapper/FormikWrapper';\r\n\r\ninterface Props {\r\n    step: SøknadStep;\r\n    formikProps: CustomFormikProps;\r\n    onValidFormSubmit?: () => void;\r\n    showNesteknapp: boolean;\r\n    className?: string;\r\n    children: ReactElement | ReactElement[];\r\n}\r\n\r\nconst FormikStep: FunctionComponent<Props> = (props) => {\r\n    const { formikProps, onValidFormSubmit } = props;\r\n\r\n    const isValid = useIsValid(formikProps.values);\r\n\r\n    useFormikSubmit(formikProps.isSubmitting, isValid, () => {\r\n        if (onValidFormSubmit) {\r\n            onValidFormSubmit();\r\n        }\r\n    });\r\n\r\n    return <Step {...props} />;\r\n};\r\n\r\nexport default FormikStep;\r\n","import React, { FunctionComponent } from 'react';\r\nimport BEMHelper from 'common/util/bem';\r\nimport './søknadstittel.less';\r\n\r\nconst cls = BEMHelper('søknadstittel');\r\n\r\ninterface Props {\r\n    children: React.ReactChild;\r\n}\r\n\r\nconst Søknadstittel: FunctionComponent<Props> = ({ children }) => {\r\n    return (\r\n        <div role=\"banner\" className={cls.block}>\r\n            <h1 className=\"typo-undertittel\">{children}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Søknadstittel;\r\n","import React from 'react';\r\n\r\nconst UKFlagSVG = () => (\r\n    <svg width={25} height={18}>\r\n        <title>{'flag_united_kingdom'}</title>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path fill=\"#00247D\" d=\"M0 0v18h25V0z\" />\r\n            <path\r\n                d=\"M3.209 0L25 15.69V18h-3.209L0 2.31V0h3.209zM25 2.31L3.209 18H0v-2.31L21.791 0H25v2.31z\"\r\n                fill=\"#FFF\"\r\n                fillRule=\"nonzero\"\r\n            />\r\n            <path\r\n                d=\"M10.36 9L0 1.54V0l12.5 9h-2.14zm4.28 0L25 16.46V18L12.5 9h2.14zm-2.14 1.54L2.14 18H0l12.5-9v1.54zm0-3.08L22.86 0H25L12.5 9V7.46z\"\r\n                fill=\"#CF142B\"\r\n                fillRule=\"nonzero\"\r\n            />\r\n            <path\r\n                fill=\"#FFF\"\r\n                fillRule=\"nonzero\"\r\n                d=\"M15.625 5.875H25v6.25h-9.375V18h-6.25v-5.875H0v-6.25h9.375V0h6.25z\"\r\n            />\r\n            <path\r\n                fill=\"#CF142B\"\r\n                fillRule=\"nonzero\"\r\n                d=\"M14.375 7.125H25v3.75H14.375V18h-3.75v-7.125H0v-3.75h10.625V0h3.75z\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default UKFlagSVG;\r\n","import React from 'react';\r\n\r\nconst NorwayFlagSVG = () => (\r\n    <svg width={25} height={18}>\r\n        <title>{'Flag_of_Norway'}</title>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path fill=\"#EF2B2D\" d=\"M0 0h25v18H0z\" />\r\n            <path fill=\"#FFF\" d=\"M6.875 0h4.688v18H6.875z\" />\r\n            <path fill=\"#FFF\" d=\"M0 6.9h25v4.5H0z\" />\r\n            <path fill=\"#002868\" d=\"M8.125 0h2.188v18H8.125z\" />\r\n            <path fill=\"#002868\" d=\"M0 7.8h25v2.4H0z\" />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default NorwayFlagSVG;\r\n","import * as React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Wrapper, Button, Menu, MenuItem } from 'react-aria-menubutton';\r\nconst { NedChevron } = require('nav-frontend-chevron');\r\nimport 'nav-frontend-lenker-style';\r\n\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport UKFlagSVG from '../flags/UKFlagSVG';\r\nimport NorwayFlagSVG from '../flags/NorwayFlagSVG';\r\nimport './languageToggle.less';\r\n\r\ninterface Props {\r\n    toggleLanguage: (langaugeCode: string) => void;\r\n    language: string;\r\n}\r\n\r\nconst getLanguageCodeFromValue = (value: string) => {\r\n    if (value === 'Bokmål - Norsk') {\r\n        return 'nb';\r\n    } else if (value === 'Nynorsk - Norsk') {\r\n        return 'nn';\r\n    } else {\r\n        return 'en';\r\n    }\r\n};\r\n\r\nconst getLanguageTextFromCode = (intl: any, code: string) => {\r\n    if (code === 'nb') {\r\n        return getMessage(intl, 'languageToggle.bokmål');\r\n    } else if (code === 'nn') {\r\n        return getMessage(intl, 'languageToggle.nynorsk');\r\n    } else {\r\n        return getMessage(intl, 'languageToggle.english');\r\n    }\r\n};\r\n\r\nconst renderMenuItem = (intl: any, languageCode: string) => {\r\n    return (\r\n        <li key={languageCode}>\r\n            <MenuItem className=\"languageToggle__menu__item\">\r\n                <div className=\"languageToggle__button__flag\">\r\n                    {languageCode === 'en' ? <UKFlagSVG /> : <NorwayFlagSVG />}\r\n                </div>\r\n                <div className=\"languageToggle__button__language\">{getLanguageTextFromCode(intl, languageCode)}</div>\r\n            </MenuItem>\r\n        </li>\r\n    );\r\n};\r\n\r\nconst handleSelection = (value: JSX.Element[], _e: any, toggleLanguage: any) => {\r\n    toggleLanguage(getLanguageCodeFromValue(value[1].props.children));\r\n};\r\n\r\nconst LanguageToggle: React.FunctionComponent<Props> = ({ language, toggleLanguage }) => {\r\n    const intl = useIntl();\r\n    const menuLanguages = ['nb', 'nn'].filter((code) => code !== language);\r\n\r\n    return (\r\n        <div className=\"languageToggle\">\r\n            <Wrapper\r\n                className=\"languageToggle__wrapper\"\r\n                onSelection={(value: JSX.Element[], e: any) => handleSelection(value, e, toggleLanguage)}\r\n            >\r\n                <Button className=\"languageToggle__button\">\r\n                    <div className=\"languageToggle__button__flag\">\r\n                        {language === 'en' ? <UKFlagSVG /> : <NorwayFlagSVG />}\r\n                    </div>\r\n                    <div className=\"languageToggle__button__language\">{getLanguageTextFromCode(intl, language)}</div>\r\n                    <div>\r\n                        <NedChevron />\r\n                    </div>\r\n                </Button>\r\n                <Menu className=\"languageToggle__menu\">\r\n                    <ul>{menuLanguages.map((code) => renderMenuItem(intl, code))}</ul>\r\n                </Menu>\r\n            </Wrapper>\r\n        </div>\r\n    );\r\n};\r\nexport default LanguageToggle;\r\n","import React, { FunctionComponent, ReactElement } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DocumentTitle from 'react-document-title';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport { CommonActionTypes } from 'app/redux/types/CommonAction';\r\nimport { Språkkode } from 'common/types';\r\nimport { State } from 'app/redux/store';\r\nimport Action from 'app/redux/types/Action';\r\nimport Søknadstittel from 'app/components/søknadstittel/Søknadstittel';\r\nimport LanguageToggle from 'common/components/language-toggle/LanguageToggle';\r\n\r\ninterface OwnProps {\r\n    visSpråkvelger?: boolean;\r\n    visTittel?: boolean;\r\n    children: ReactElement | ReactElement[];\r\n}\r\n\r\ninterface StateProps {\r\n    språkkode: Språkkode;\r\n}\r\n\r\ninterface DispatchProps {\r\n    setSpråk: (språkkode: Språkkode) => void;\r\n}\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\nconst Applikasjonsside: FunctionComponent<Props> = ({ visSpråkvelger, visTittel, språkkode, setSpråk, children }) => {\r\n    return (\r\n        <>\r\n            <DocumentTitle title=\"Svangerskapspengesøknad\" />\r\n            {visSpråkvelger && (\r\n                <LanguageToggle\r\n                    language={språkkode}\r\n                    // @ts-ignore Fiks\r\n                    toggleLanguage={(languageCode: Språkkode) => setSpråk(languageCode)}\r\n                />\r\n            )}\r\n            {visTittel && (\r\n                <Søknadstittel>\r\n                    <FormattedMessage id=\"app.banner\" />\r\n                </Søknadstittel>\r\n            )}\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State): StateProps => ({\r\n    språkkode: state.common.språkkode,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: (action: Action) => void): DispatchProps => ({\r\n    setSpråk: (språkkode: Språkkode) => dispatch({ type: CommonActionTypes.SET_SPRÅK, payload: { språkkode } }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Applikasjonsside);\r\n","import React from 'react';\r\nimport { ModalSummaryProps } from '../ArbeidSeksjon/ArbeidSeksjon';\r\nimport { Næring } from 'app/types/SelvstendigNæringsdrivende';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { useIntl } from 'react-intl';\r\nimport { prettifyTidsperiode } from 'app/utils/formatDate';\r\nimport InteractiveListElement from 'common/components/interactive-list-element/InteractiveListElement';\r\n\r\nconst SelvstendigListElement: React.FunctionComponent<ModalSummaryProps<Næring>> = ({ element, ...rest }) => {\r\n    const intl = useIntl();\r\n    const title = element.organisasjonsnummer\r\n        ? `${element.organisasjonsnummer} ${element.navnPåNæringen}`\r\n        : element.navnPåNæringen;\r\n\r\n    return (\r\n        <InteractiveListElement\r\n            style=\"gray\"\r\n            title={title}\r\n            text={prettifyTidsperiode(element.tidsperiode)}\r\n            deleteLinkText={getMessage(intl, 'utenlandsopphold.land.slett')}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\nexport default SelvstendigListElement;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { ModalSummaryProps } from '../ArbeidSeksjon/ArbeidSeksjon';\r\nimport { useIntl } from 'react-intl';\r\nimport { AnnenInntekt } from 'app/types/AnnenInntekt';\r\nimport InteractiveListElement from 'common/components/interactive-list-element/InteractiveListElement';\r\nimport { prettifyTidsperiode } from 'app/utils/formatDate';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { getAnnenInntektElementTitle } from '../../../utils/arbeidsforholdUtils';\r\n\r\nconst AnnenInntektListElement: FunctionComponent<ModalSummaryProps<AnnenInntekt>> = ({ element, ...rest }) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <InteractiveListElement\r\n            title={getAnnenInntektElementTitle(element, intl)}\r\n            text={prettifyTidsperiode(element.tidsperiode)}\r\n            deleteLinkText={getMessage(intl, 'utenlandsopphold.land.slett')}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AnnenInntektListElement;\r\n","import Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport { Arbeidsforholdstype } from 'app/types/Tilrettelegging';\r\nimport Søker from 'app/types/Søker';\r\nimport { SøknadsgrunnlagOption } from '../../../formik/wrappers/VelgSøknadsgrunnlag';\r\nimport { useIntl } from 'react-intl';\r\nimport { getAnnenInntektElementTitle, getUnikeArbeidsforhold } from '../../../utils/arbeidsforholdUtils';\r\nimport { AnnenInntektType } from '../../../types/AnnenInntekt';\r\n\r\nexport const mapArbeidsforholdToSøknadsgrunnlagOptions = (\r\n    søker: Partial<Søker>,\r\n    arbeidsforhold: Arbeidsforhold[],\r\n    termindato: string\r\n    //intl: intl\r\n): SøknadsgrunnlagOption[] => {\r\n    const intl = useIntl();\r\n    const { selvstendigNæringsdrivendeInformasjon = [], andreInntekterSiste10Mnd = [], frilansInformasjon } = søker;\r\n    const førstegangstjeneste = andreInntekterSiste10Mnd.find(\r\n        (inntekt) => inntekt.type === AnnenInntektType.MILITÆRTJENESTE\r\n    );\r\n    const unikeArbeidsforhold = getUnikeArbeidsforhold(arbeidsforhold, termindato);\r\n\r\n    return [\r\n        ...unikeArbeidsforhold.map((forhold) => ({\r\n            value: forhold.guid,\r\n            label: forhold.arbeidsgiverNavn || 'privat arbeidsgiver',\r\n            type: forhold.arbeidsgiverIdType === 'orgnr' ? Arbeidsforholdstype.VIRKSOMHET : Arbeidsforholdstype.PRIVAT,\r\n        })),\r\n        ...selvstendigNæringsdrivendeInformasjon.map((næring) => ({\r\n            value: næring.organisasjonsnummer || `${næring.navnPåNæringen}${næring.registrertILand}`,\r\n            label: næring.navnPåNæringen,\r\n            type: Arbeidsforholdstype.SELVSTENDIG,\r\n        })),\r\n        ...(førstegangstjeneste\r\n            ? [\r\n                  {\r\n                      value: førstegangstjeneste.type,\r\n                      label: getAnnenInntektElementTitle(førstegangstjeneste, intl),\r\n                      type: Arbeidsforholdstype.PRIVAT,\r\n                  },\r\n              ]\r\n            : []),\r\n        ...(frilansInformasjon !== undefined\r\n            ? [\r\n                  {\r\n                      value: 'Frilans',\r\n                      label: 'Frilans',\r\n                      type: Arbeidsforholdstype.FRILANSER,\r\n                  },\r\n              ]\r\n            : []),\r\n    ];\r\n};\r\n","import * as React from 'react';\r\nimport NavFrontendChevron from 'nav-frontend-chevron';\r\n\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport './infoToggler.less';\r\n\r\nconst cls = BEMHelper('infoToggler');\r\n\r\ninterface Props {\r\n    children: React.ReactNode;\r\n    onToggle: () => void;\r\n    apen?: boolean;\r\n}\r\n\r\nconst InfoToggler = (props: Props) => {\r\n    const { apen = false, children, onToggle } = props;\r\n    return (\r\n        <button\r\n            className={cls.block}\r\n            onClick={(evt: React.MouseEvent<HTMLButtonElement>) => {\r\n                evt.stopPropagation();\r\n                evt.preventDefault();\r\n                onToggle();\r\n            }}\r\n            aria-expanded={apen}\r\n        >\r\n            <span className={cls.element('content')}>\r\n                <span className={cls.element('label')}>{children}</span>\r\n                <span className={cls.element('chevron')}>\r\n                    <NavFrontendChevron type={apen ? 'opp' : 'ned'} />\r\n                </span>\r\n            </span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default InfoToggler;\r\n","import * as React from 'react';\r\nimport classnames from 'classnames';\r\nimport { Collapse } from 'react-collapse';\r\n\r\nimport './ekspanderbartInnhold.less';\r\n\r\nexport interface Props {\r\n    /** Innholdet som skal vises */\r\n    children: React.ReactNode;\r\n    /** Overstyre state for om den skal vises eller ikke */\r\n    erApen?: boolean;\r\n    /** Default off */\r\n    ariaLive?: 'assertive' | 'polite' | 'off';\r\n    /** Om skjul/vis skal animeres. Default true */\r\n    animert?: boolean;\r\n}\r\n\r\nconst EkspanderbartInnhold = ({\r\n    children,\r\n    animert = true,\r\n    erApen = false,\r\n    ariaLive = 'off',\r\n}: Props) => {\r\n    const content = <div aria-live={ariaLive}>{erApen ? <div>{children}</div> : <div />}</div>;\r\n    if (!animert) {\r\n        return content;\r\n    }\r\n\r\n    return (\r\n        <Collapse\r\n            isOpened={erApen}\r\n            className={classnames('ekspanderbartInnhold', {\r\n                'ekspanderbartInnhold--apen': erApen,\r\n            })}\r\n        >\r\n            {content}\r\n        </Collapse>\r\n    );\r\n};\r\n\r\nexport default EkspanderbartInnhold;\r\n","import React, { useState } from 'react';\r\nimport { guid } from 'nav-frontend-js-utils';\r\nimport InfoToggler from './InfoToggler';\r\nimport './utvidetInformasjon.less';\r\nimport EkspanderbartInnhold from './EkspanderbartInnhold';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport { useIntl } from 'react-intl';\r\nimport getMessage from 'common/util/i18nUtils';\r\n\r\ninterface Props {\r\n    children: React.ReactNode;\r\n    erApen?: boolean;\r\n    apneLabel?: string;\r\n    lukkLabel?: string;\r\n}\r\n\r\nconst UtvidetInformasjon: React.FunctionComponent<Props> = ({ children, apneLabel }) => {\r\n    const intl = useIntl();\r\n    const innholdId = guid();\r\n    const [apen, setApen] = useState<boolean>(false);\r\n\r\n    const lukkLabel = getMessage(intl, 'utvidetInformasjon.lukkTekst');\r\n\r\n    return (\r\n        <div className=\"utvidetInformasjon\">\r\n            <div className=\"utvidetInformasjon__toggler no-print\">\r\n                <InfoToggler onToggle={() => setApen(!apen)} apen={apen}>\r\n                    <Normaltekst tag=\"span\">{apen ? lukkLabel : apneLabel}</Normaltekst>\r\n                </InfoToggler>\r\n            </div>\r\n            <div className=\"utvidetInformasjon__innhold\" id={innholdId}>\r\n                <EkspanderbartInnhold erApen={apen}>{children}</EkspanderbartInnhold>\r\n\r\n                <div className=\"print-only\">{children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default UtvidetInformasjon;\r\n","import React from 'react';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\nimport Block from 'common/components/block/Block';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport UtvidetInformasjon from '../utvidet-informasjon/UtvidetInformasjon';\r\n\r\nconst InfoTilFiskere = () => {\r\n    return (\r\n        <UtvidetInformasjon apneLabel=\"Er du fisker? Les hvordan du skal fylle ut søknaden\">\r\n            <div style={{ backgroundColor: '#e9e7e7', padding: '1.5rem' }}>\r\n                <Block margin=\"xs\">\r\n                    <FormattedMessage id=\"andreInntekter.infoTilFiskere.del1\" />\r\n                </Block>\r\n                <Undertittel>\r\n                    <FormattedMessage id=\"andreInntekter.infoTilFiskere.hyre\" />\r\n                </Undertittel>\r\n                <Block margin=\"xs\">\r\n                    <FormattedMessage id=\"andreInntekter.infoTilFiskere.del2\" />\r\n                </Block>\r\n                <Block margin=\"xs\">\r\n                    <FormattedMessage\r\n                        id=\"andreInntekter.infoTilFiskere.del3\"\r\n                        values={{\r\n                            a: (msg: any) => (\r\n                                <a\r\n                                    className=\"lenke\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                    href=\"https://www.nav.no/no/bedrift/tjenester-og-skjemaer/nav-og-altinn-tjenester/foreldrepenger-og-svangerskapspenger2\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    {msg}\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Block>\r\n                <Undertittel>\r\n                    <FormattedMessage id=\"andreInntekter.infoTilFiskere.lott\" />\r\n                </Undertittel>\r\n                <Block margin=\"xs\">\r\n                    <FormattedMessage id=\"andreInntekter.infoTilFiskere.del4\" />\r\n                </Block>\r\n                <Block margin=\"xs\">\r\n                    <FormattedMessage\r\n                        id=\"andreInntekter.infoTilFiskere.del5\"\r\n                        values={{\r\n                            a: (msg: any) => (\r\n                                <a\r\n                                    className=\"lenke\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                    href=\"https://www.skatteetaten.no/rettskilder/type/handboker/skatte-abc/2019/fiske/F-14.014/F-14.048/\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    {msg}\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Block>\r\n                <Undertittel>\r\n                    <FormattedMessage id=\"andreInntekter.infoTilFiskere.egenBåt\" />\r\n                </Undertittel>\r\n                <Block margin=\"xs\">\r\n                    <FormattedMessage id=\"andreInntekter.infoTilFiskere.del6\" />\r\n                </Block>\r\n                <Undertittel>\r\n                    <FormattedMessage id=\"andreInntekter.infoTilFiskere.lottOgHyre\" />\r\n                </Undertittel>\r\n                <Block margin=\"xs\">\r\n                    <FormattedMessage id=\"andreInntekter.infoTilFiskere.del7\" />\r\n                </Block>\r\n                <Block margin=\"xs\">\r\n                    <FormattedMessage id=\"andreInntekter.infoTilFiskere.del8\" />\r\n                </Block>\r\n                <Block margin=\"xs\">\r\n                    <FormattedMessage id=\"andreInntekter.infoTilFiskere.del9\" />\r\n                </Block>\r\n                <Block margin=\"none\">\r\n                    <FormattedMessage\r\n                        id=\"andreInntekter.infoTilFiskere.del5\"\r\n                        values={{\r\n                            a: (msg: any) => (\r\n                                <a\r\n                                    className=\"lenke\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                    href=\"https://www.skatteetaten.no/rettskilder/type/handboker/skatte-abc/2019/fiske/F-14.014/F-14.048/\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    {msg}\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Block>\r\n            </div>\r\n        </UtvidetInformasjon>\r\n    );\r\n};\r\n\r\nexport default InfoTilFiskere;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport BEMHelper from 'common/util/bem';\r\nimport moment from 'moment';\r\n\r\nimport { FetchStatus } from 'app/types/FetchState';\r\nimport { CustomFormikProps } from 'app/types/Formik';\r\nimport { mergeSøknadsgrunnlagIntoTilrettelegging } from 'app/utils/tilretteleggingUtils';\r\nimport { State } from 'app/redux/store';\r\nimport ArbeidsforholdType from 'app/types/Arbeidsforhold';\r\nimport Block from 'common/components/block/Block';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport InformasjonOmArbeidsforholdWrapper from 'common/components/arbeidsforhold-infobox/InformasjonOmArbeidsforholdWrapper';\r\nimport Veilederinfo from 'common/components/veileder-info/Veilederinfo';\r\nimport VelgSøknadsgrunnlag from 'app/formik/wrappers/VelgSøknadsgrunnlag';\r\nimport Arbeidsforholdseksjon from './ArbeidSeksjon/ArbeidSeksjon';\r\nimport SelvstendigNæringsdrivende from './SelvstendigNæringsdrivende/SelvstendigNæringsdrivende';\r\nimport AndreInntekter from './AndreInntekter/AndreInntekter';\r\nimport FrilansSpørsmål from './Frilans/FrilansSpørsmål';\r\n\r\nimport FormikStep from 'app/components/formik-step/FormikStep';\r\nimport Applikasjonsside from '../applikasjonsside/Applikasjonsside';\r\nimport SøknadStep, { StepID } from 'app/types/SøknadStep';\r\nimport { StepProps } from 'app/components/step/Step';\r\nimport { getSøknadStepPath } from 'app/utils/stepUtils';\r\n\r\nimport SelvstendigListElement from './SelvstendigNæringsdrivende/SelvstendigListElement';\r\nimport AndreInntekterListElement from './AndreInntekter/AnnenInntektListElement';\r\nimport { cleanupSøker } from './utils/cleanup';\r\nimport { mapArbeidsforholdToSøknadsgrunnlagOptions } from './utils/søknadsgrunnlagMapper';\r\nimport Søker from 'app/types/Søker';\r\nimport { Søknadsgrunnlag } from 'app/types/Søknad';\r\nimport { Arbeidsforholdstype, UferdigTilrettelegging } from 'app/types/Tilrettelegging';\r\nimport { AnnenInntektType } from '../../types/AnnenInntekt';\r\n\r\nimport './arbeidsforhold.less';\r\nimport { getAktiveArbeidsforhold } from 'app/utils/arbeidsforholdUtils';\r\nimport InfoTilFiskere from 'app/components/info-til-fiskere/InfoTilFiskere';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport dayjs from 'dayjs';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst cls = BEMHelper('arbeidsforhold');\r\n\r\ninterface OwnProps {\r\n    step: SøknadStep;\r\n    formikProps: CustomFormikProps;\r\n}\r\n\r\ninterface ConnectProps {\r\n    arbeidsforhold: ArbeidsforholdType[];\r\n}\r\n\r\ntype Props = OwnProps & StepProps & ConnectProps;\r\n\r\nconst Arbeidsforhold: FunctionComponent<Props> = (props: Props) => {\r\n    const { step, formikProps, arbeidsforhold } = props;\r\n    const { values, setFieldValue } = formikProps;\r\n    const { søker, søknadsgrunnlag, barn } = values;\r\n    const intl = useIntl();\r\n\r\n    const harValgtMinstEttGrunnlag: boolean = søknadsgrunnlag.length > 0;\r\n\r\n    const {\r\n        harJobbetSomFrilansSiste10Mnd,\r\n        frilansInformasjon,\r\n        harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd,\r\n        selvstendigNæringsdrivendeInformasjon,\r\n        harHattAnnenInntektSiste10Mnd,\r\n        andreInntekterSiste10Mnd = [],\r\n    } = cleanupSøker(søker);\r\n\r\n    const søknadsgrunnlagOptions = mapArbeidsforholdToSøknadsgrunnlagOptions(\r\n        cleanupSøker(values.søker) as Søker,\r\n        arbeidsforhold,\r\n        barn.termindato!\r\n    );\r\n\r\n    const harLagtTilFørstegangstjeneste = søker.andreInntekterSiste10Mnd\r\n        ? søker.andreInntekterSiste10Mnd.some((i) => i.type === AnnenInntektType.MILITÆRTJENESTE)\r\n        : false;\r\n\r\n    const visHarJobbetSomSelvstendigNæringsdrivendeSiste10MndSeksjon =\r\n        harJobbetSomFrilansSiste10Mnd === false ||\r\n        (frilansInformasjon !== undefined &&\r\n            (frilansInformasjon.harJobbetForNærVennEllerFamilieSiste10Mnd === false ||\r\n                (frilansInformasjon.harJobbetForNærVennEllerFamilieSiste10Mnd === true &&\r\n                    frilansInformasjon.oppdragForNæreVennerEllerFamilieSiste10Mnd !== undefined &&\r\n                    frilansInformasjon.oppdragForNæreVennerEllerFamilieSiste10Mnd.length > 0)) &&\r\n            frilansInformasjon.driverFosterhjem !== undefined);\r\n\r\n    const visharHattAnnenInntektSiste10MndSeksjon =\r\n        (visHarJobbetSomSelvstendigNæringsdrivendeSiste10MndSeksjon &&\r\n            ((selvstendigNæringsdrivendeInformasjon && selvstendigNæringsdrivendeInformasjon.length) || 0) > 0) ||\r\n        harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd === false ||\r\n        harHattAnnenInntektSiste10Mnd !== undefined;\r\n\r\n    const visSøknadsgrunnlagValg =\r\n        visharHattAnnenInntektSiste10MndSeksjon &&\r\n        ((harHattAnnenInntektSiste10Mnd === true && andreInntekterSiste10Mnd.length! > 0) ||\r\n            harHattAnnenInntektSiste10Mnd === false) &&\r\n        søknadsgrunnlagOptions.length > 0;\r\n\r\n    const visIngenArbeidsforholdVeileder =\r\n        arbeidsforhold.length === 0 &&\r\n        harJobbetSomFrilansSiste10Mnd === false &&\r\n        harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd === false &&\r\n        harHattAnnenInntektSiste10Mnd === false;\r\n\r\n    const skalViseVeilederinfo = values.søknadsgrunnlag.some(\r\n        (s: Søknadsgrunnlag) => s.type === Arbeidsforholdstype.VIRKSOMHET\r\n    );\r\n\r\n    let tilrettelegging = mergeSøknadsgrunnlagIntoTilrettelegging(values.søknadsgrunnlag, values.tilrettelegging);\r\n    const prepareTilrettelegging = () => {\r\n        if (frilansInformasjon === undefined) {\r\n            tilrettelegging = tilrettelegging.filter(\r\n                // @ts-ignore Fiks\r\n                (til: UferdigTilrettelegging) => til.arbeidsforhold.type !== Arbeidsforholdstype.FRILANSER\r\n            );\r\n        }\r\n\r\n        if (selvstendigNæringsdrivendeInformasjon === undefined) {\r\n            tilrettelegging = tilrettelegging.filter(\r\n                // @ts-ignore Fiks\r\n                (til: UferdigTilrettelegging) => til.arbeidsforhold.type !== Arbeidsforholdstype.SELVSTENDIG\r\n            );\r\n        }\r\n\r\n        setFieldValue('tilrettelegging', tilrettelegging);\r\n    };\r\n\r\n    const cleanupArbeidsforhold = () => {\r\n        setFieldValue('søker', cleanupSøker(søker));\r\n    };\r\n\r\n    const navigateTo = useNavigate();\r\n\r\n    const navigate = () => {\r\n        cleanupArbeidsforhold();\r\n        prepareTilrettelegging();\r\n        const pathToFirstTilrettelegging = getSøknadStepPath(StepID.TILRETTELEGGING, tilrettelegging[0].id);\r\n        navigateTo(pathToFirstTilrettelegging);\r\n    };\r\n\r\n    return (\r\n        <Applikasjonsside visTittel={true}>\r\n            <FormikStep\r\n                step={step}\r\n                className={cls.block}\r\n                formikProps={formikProps}\r\n                showNesteknapp={harValgtMinstEttGrunnlag}\r\n                onValidFormSubmit={navigate}\r\n            >\r\n                <Block\r\n                    header={{\r\n                        title: getMessage(intl, 'arbeidsforhold.utbetalingerFraNAV.label'),\r\n                    }}\r\n                >\r\n                    <Normaltekst>{getMessage(intl, 'arbeidsforhold.utbetalingerFraNAV.text')}</Normaltekst>\r\n                </Block>\r\n\r\n                <Block\r\n                    header={{\r\n                        title: getMessage(intl, 'arbeidsforhold.dineArbeidsforhold.label'),\r\n                        info: getMessage(intl, 'arbeidsforhold.dineArbeidsforhold.infotekst'),\r\n                    }}\r\n                >\r\n                    <InformasjonOmArbeidsforholdWrapper\r\n                        arbeidsforhold={getAktiveArbeidsforhold(\r\n                            arbeidsforhold,\r\n                            dayjs(formikProps.values.barn.termindato).toDate()\r\n                        )}\r\n                    />\r\n                </Block>\r\n\r\n                <Block margin=\"xs\">\r\n                    <InfoTilFiskere />\r\n                </Block>\r\n\r\n                <FrilansSpørsmål formikProps={formikProps} />\r\n\r\n                <Block visible={visHarJobbetSomSelvstendigNæringsdrivendeSiste10MndSeksjon} margin=\"xs\">\r\n                    <Arbeidsforholdseksjon\r\n                        name=\"søker.harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd\"\r\n                        listName=\"søker.selvstendigNæringsdrivendeInformasjon\"\r\n                        legend={getMessage(intl, 'arbeidsforhold.selvstendig.erSelvstendigNæringsdrivende')}\r\n                        buttonLabel={getMessage(intl, 'leggtil')}\r\n                        infoboksTekst={\r\n                            <FormattedMessage\r\n                                id=\"arbeidsforhold.selvstendig.infoboxTekst\"\r\n                                values={{\r\n                                    a: (msg: any) => (\r\n                                        <a\r\n                                            className=\"lenke\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            href=\"https://www.skatteetaten.no/bedrift-og-organisasjon/starte-og-drive/er-jeg-naringsdrivende/\"\r\n                                        >\r\n                                            {msg}\r\n                                        </a>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        }\r\n                        summaryListTitle={{ title: getMessage(intl, 'arbeidsforhold.selvstendig.listetittel') }}\r\n                        summaryListElementComponent={SelvstendigListElement}\r\n                        renderForm={(formProps: any) => <SelvstendigNæringsdrivende {...formProps} />}\r\n                    />\r\n                </Block>\r\n                <Block visible={visHarJobbetSomSelvstendigNæringsdrivendeSiste10MndSeksjon} margin=\"xs\">\r\n                    <Lenke\r\n                        target=\"_blank\"\r\n                        href=\"https://www.nav.no/no/person/innhold-til-person-forside/nyttig-a-vite/er-jeg-selvstendig-naeringsdrivende-frilanser-eller-arbeidstaker\"\r\n                    >\r\n                        <FormattedMessage id=\"arbeidsforhold.erJegNæringsdrivendeFrilansEllerArbeidstaker\" />\r\n                    </Lenke>\r\n                </Block>\r\n\r\n                <Block visible={visharHattAnnenInntektSiste10MndSeksjon}>\r\n                    <Arbeidsforholdseksjon\r\n                        name=\"søker.harHattAnnenInntektSiste10Mnd\"\r\n                        listName=\"søker.andreInntekterSiste10Mnd\"\r\n                        legend={getMessage(intl, 'arbeidsforhold.andreInntekter')}\r\n                        buttonLabel={getMessage(intl, 'leggtil')}\r\n                        infoboksTekst={<AnnenInntektSiste10MndHjelpeTekst />}\r\n                        summaryListTitle={{ title: getMessage(intl, 'arbeidsforhold.andreInntekter.listetittel') }}\r\n                        summaryListElementComponent={AndreInntekterListElement}\r\n                        renderForm={(formProps: any) => (\r\n                            <AndreInntekter {...formProps} skjulFørstegangstjeneste={harLagtTilFørstegangstjeneste} />\r\n                        )}\r\n                    />\r\n                </Block>\r\n\r\n                <Block visible={visSøknadsgrunnlagValg} margin=\"l\">\r\n                    <VelgSøknadsgrunnlag\r\n                        name=\"søknadsgrunnlag\"\r\n                        label={getMessage(intl, 'arbeidsforhold.grunnlag.label')}\r\n                        options={søknadsgrunnlagOptions}\r\n                    />\r\n                </Block>\r\n\r\n                <Block visible={skalViseVeilederinfo} margin=\"s\">\r\n                    <Veilederinfo type=\"info\" stil=\"kompakt\">\r\n                        {getMessage(intl, 'arbeidsforhold.veileder.inntektsmelding', {\r\n                            // TODO: Hva er riktig dato her?\r\n                            datoTidligst: moment().format('DD.MM.YYYY'),\r\n                        })}\r\n                    </Veilederinfo>\r\n                </Block>\r\n\r\n                <Block visible={visIngenArbeidsforholdVeileder}>\r\n                    <Veilederinfo type=\"advarsel\">\r\n                        <FormattedMessage\r\n                            id=\"arbeidsforhold.veileder.ingenArbeidsforhold\"\r\n                            values={{\r\n                                b: (msg: any) => <b>{msg}</b>,\r\n                                a: (msg: any) => (\r\n                                    <a\r\n                                        className=\"lenke\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        href=\"https://familie.nav.no/om-svangerskapspenger\"\r\n                                    >\r\n                                        {msg}\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <FormattedMessage\r\n                            id=\"arbeidsforhold.veileder.ingenArbeidsforhold.forsettelse\"\r\n                            values={{\r\n                                a: (msg: any) => (\r\n                                    <a\r\n                                        className=\"lenke\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        href=\"https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Relatert+informasjon/chat-med-oss-om-foreldrepenger\"\r\n                                    >\r\n                                        {msg}\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Veilederinfo>\r\n                </Block>\r\n            </FormikStep>\r\n        </Applikasjonsside>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    const { søkerinfo } = state.api;\r\n\r\n    return {\r\n        arbeidsforhold: søkerinfo.status === FetchStatus.SUCCESS ? søkerinfo.data.arbeidsforhold : [],\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Arbeidsforhold);\r\n\r\nconst AnnenInntektSiste10MndHjelpeTekst = () => {\r\n    const intl = useIntl();\r\n    return (\r\n        <div>\r\n            <div>{getMessage(intl, 'annenInntekt.infoboksTekst.overskrift')}</div>\r\n            <ul>\r\n                <li>{getMessage(intl, 'annenInntekt.infoboksTekst.punktEn')}</li>\r\n                <li>{getMessage(intl, 'annenInntekt.infoboksTekst.punktTo')}</li>\r\n                <li>{getMessage(intl, 'annenInntekt.infoboksTekst.punktTre')}</li>\r\n                <li>{getMessage(intl, 'annenInntekt.infoboksTekst.punktFire')}</li>\r\n                <li>{getMessage(intl, 'annenInntekt.infoboksTekst.punktFem')}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n","import React, { ReactNode } from 'react';\r\nimport { BekreftCheckboksPanel as BekreftCheckboksPanelNav } from 'nav-frontend-skjema';\r\nimport { Field, FieldProps } from 'formik';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { translateError } from 'app/utils/errorUtils';\r\n\r\ninterface Props {\r\n    label: string;\r\n    name: string;\r\n    children?: ReactNode;\r\n    className?: string;\r\n}\r\n\r\nconst BekreftCheckboksPanel: React.FunctionComponent<Props> = ({ name, label, children, className }) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <Field\r\n            name={name}\r\n            type=\"checkbox\"\r\n            render={({ field, form }: FieldProps) => (\r\n                <BekreftCheckboksPanelNav\r\n                    checked={form.values[name]}\r\n                    label={label}\r\n                    onChange={field.onChange}\r\n                    className={className}\r\n                    inputProps={{\r\n                        name: field.name,\r\n                        onBlur: field.onBlur,\r\n                    }}\r\n                    feil={form.touched[name] && form.errors[name] ? translateError(intl, form.errors[name]) : ''}\r\n                >\r\n                    {children}\r\n                </BekreftCheckboksPanelNav>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BekreftCheckboksPanel;\r\n","import * as React from 'react';\r\nimport Modal from 'nav-frontend-modal';\r\nimport { Ingress, Normaltekst, Systemtittel } from 'nav-frontend-typografi';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport Block from 'common/components/block/Block';\r\nimport BEMHelper from 'common/util/bem';\r\nconst bem = BEMHelper('dinePersonOpplysningerModal');\r\n\r\ninterface DineRettigheterModalProps {\r\n    isOpen: boolean;\r\n    onRequestClose: () => void;\r\n}\r\n\r\nconst Avsnitt: React.FunctionComponent<{ id: string }> = ({ id }) => {\r\n    return (\r\n        <Block margin=\"s\">\r\n            <Ingress tag=\"h2\">\r\n                <FormattedMessage id={`intro.dinePersonopplysninger.avsnitt.${id}.tittel`} />\r\n            </Ingress>\r\n            <Normaltekst className={bem.element('html')}>\r\n                <FormattedMessage id={`intro.dinePersonopplysninger.avsnitt.${id}.html`} />\r\n            </Normaltekst>\r\n            <ul>\r\n                <FormattedMessage tagName=\"li\" id=\"intro.dinePersonopplysninger.avsnitt.html.punkt1\" />\r\n                <FormattedMessage tagName=\"li\" id=\"intro.dinePersonopplysninger.avsnitt.html.punkt2\" />\r\n                <FormattedMessage tagName=\"li\" id=\"intro.dinePersonopplysninger.avsnitt.html.punkt3\" />\r\n            </ul>\r\n        </Block>\r\n    );\r\n};\r\n\r\ntype Props = DineRettigheterModalProps;\r\nconst DinePersonopplysningerModal = (props: Props) => {\r\n    const intl = useIntl();\r\n    //const { intl } = props;\r\n    return (\r\n        <Modal\r\n            isOpen={props.isOpen}\r\n            onRequestClose={() => props.onRequestClose()}\r\n            shouldCloseOnOverlayClick={false}\r\n            closeButton={true}\r\n            contentLabel={getMessage(intl, 'intro.dinePersonopplysninger.sectionheading')}\r\n        >\r\n            <article className=\"velkommenModalContent velkommenModalContent--50\">\r\n                <Block margin=\"s\">\r\n                    <Systemtittel tag=\"h1\" className=\"velkommenModalContent__header\">\r\n                        {getMessage(intl, 'intro.dinePersonopplysninger.sectionheading')}\r\n                    </Systemtittel>\r\n                </Block>\r\n                <Block margin=\"s\">\r\n                    <Normaltekst>\r\n                        <FormattedMessage\r\n                            id=\"intro.dinePersonopplysninger.behandling.html\"\r\n                            values={{\r\n                                p: (msg: any) => <p>{msg}</p>,\r\n                                a: (msg: any) => (\r\n                                    <a\r\n                                        className=\"lenke\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        href=\"https://www.nav.no/foreldrepenger\"\r\n                                    >\r\n                                        {msg}\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Normaltekst>\r\n                </Block>\r\n\r\n                <Avsnitt id=\"innhenting\" />\r\n                <Avsnitt id=\"automatiskBehandling\" />\r\n                <Avsnitt id=\"svarPaSoknaden\" />\r\n                <Avsnitt id=\"personvernerklaringen\" />\r\n            </article>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DinePersonopplysningerModal;\r\n","import * as React from 'react';\r\nimport Modal from 'nav-frontend-modal';\r\nimport { Normaltekst, Systemtittel } from 'nav-frontend-typografi';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport Lenke from 'nav-frontend-lenker';\r\n\r\ninterface DineRettigheterModalProps {\r\n    isOpen: boolean;\r\n    onRequestClose: () => void;\r\n}\r\n\r\ntype Props = DineRettigheterModalProps;\r\nconst DinePlikterModal = (props: Props) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <Modal\r\n            isOpen={props.isOpen}\r\n            onRequestClose={() => props.onRequestClose()}\r\n            closeButton={true}\r\n            shouldCloseOnOverlayClick={false}\r\n            contentLabel={getMessage(intl, 'intro.dinePlikter.sectionheading')}\r\n        >\r\n            <article className=\"velkommenModalContent\">\r\n                <Systemtittel tag=\"h1\" className=\"velkommenModalContent__header\">\r\n                    {getMessage(intl, 'intro.dinePlikter.sectionheading')}\r\n                </Systemtittel>\r\n                <ul>\r\n                    <li>\r\n                        <Normaltekst>{getMessage(intl, 'intro.dinePlikter.listeElement.1')}</Normaltekst>\r\n                    </li>\r\n                    <li>\r\n                        <Normaltekst>\r\n                            <FormattedMessage\r\n                                id=\"intro.dinePlikter.listeElement.2\"\r\n                                values={{\r\n                                    link: (\r\n                                        <Lenke href=\"https://nav.no/rettOgPlikt\" target=\"_blank\">\r\n                                            <FormattedMessage id=\"intro.dinePlikter.listeElement.2.link\" />\r\n                                        </Lenke>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </Normaltekst>\r\n                    </li>\r\n                </ul>\r\n            </article>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DinePlikterModal;\r\n","import React from 'react';\r\n\r\nconst DocumentIkon = (props: any) => (\r\n    <svg width={64} height={64} {...props}>\r\n        <title>{'klart skjema'}</title>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <circle fill=\"#C1B5D0\" cx={32} cy={32} r={32} />\r\n            <path d=\"M23 19.48L29.981 13H50a2 2 0 0 1 2 2v34a2 2 0 0 1-2 2H25a2 2 0 0 1-2-2V19.48z\" fill=\"#FFF\" />\r\n            <path d=\"M29.981 13l.048 4.355c0 1.173-.9 2.124-2.011 2.124h-4.989L29.981 13z\" fill=\"#C9C9C9\" />\r\n            <path\r\n                fill=\"#A59D96\"\r\n                d=\"M33.18 27.18H45.6V26.1H33.18zM33.18 30.96H45.6v-1.08H33.18zM33.18 34.2H45.6v-1.08H33.18zM33.18 37.98H45.6V36.9H33.18zM32.1 25.022h-2.7V27.722h2.7V25.022zm-2.129 2.11h1.558v-1.52H29.97v1.52zM32.1 28.711h-2.7V31.411h2.7V28.711zm-2.129 2.11h1.558v-1.52H29.97v1.52zM32.1 32.4h-2.7V35.1h2.7V32.4zm-2.129 2.11h1.558v-1.52H29.97v1.52zM32.1 36.09h-2.7V38.79h2.7V36.09zm-2.129 2.11h1.558v-1.52H29.97v1.52z\"\r\n            />\r\n            <path\r\n                fill=\"#2F3237\"\r\n                fillRule=\"nonzero\"\r\n                d=\"M30.233 25.976l1.2-2.036.667.68-1.827 3.1-1.413-2.123.635-.73zM31.299 27.18l.801.593-1.811 3.187-1.429-2.226.77-.644.61.95z\"\r\n            />\r\n            <path d=\"M.03 30.595h10.138v11.489H1.621a31.968 31.968 0 0 1-1.59-11.489z\" fill=\"#634689\" />\r\n            <path fill=\"#453B43\" d=\"M7.238 42.084h3.516V30.595H7.238z\" />\r\n            <path\r\n                d=\"M8.825 40.859c.4 0 .724-.318.724-.71a.716.716 0 0 0-.724-.71c-.4 0-.724.318-.724.71 0 .392.324.71.724.71\"\r\n                fill=\"#38363A\"\r\n            />\r\n            <path\r\n                d=\"M10.754 40.314h1.597c.436 0 1.015 1.77 2.506 1.77H23l-.025-10.914H21.89c-.36 0-.226-.533.257-.84.485-.308 2.758-1.23 2.758-1.23s2.684-1.23 2.201-2.367c-.483-1.134-2.249-.614-2.249-.614s-2.784.578-4.112.9c-1.68.404-3.403 1.255-4.645 2.128-1.243.874-2.84 2.597-3.587 2.597h-1.759v8.57z\"\r\n                fill=\"#E9E7E7\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default DocumentIkon;\r\n","import React, { FunctionComponent, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Innholdstittel } from 'nav-frontend-typografi';\r\nimport { CustomFormikProps } from 'app/types/Formik';\r\nimport { getData } from 'app/utils/fromFetchState';\r\nimport { getSøknadStepPath } from 'app/utils/stepUtils';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport { Søkerinfo } from 'app/types/Søkerinfo';\r\nimport { State } from 'app/redux/store';\r\nimport { StepID } from 'app/types/SøknadStep';\r\nimport Applikasjonsside from 'app/connectedComponents/applikasjonsside/Applikasjonsside';\r\nimport BekreftCheckboksPanel from 'app/formik/wrappers/BekreftCheckboksPanel';\r\nimport BEMHelper from 'common/util/bem';\r\nimport DinePersonopplysningerModal from '../../components/dine-personopplysninger-modal/DinePersonopplysningerModal';\r\nimport DinePlikterModal from '../../components/dine-plikter-modal/DinePlikterModal';\r\nimport FetchState from 'app/types/FetchState';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport Normaltekst from 'nav-frontend-typografi/lib/normaltekst';\r\nimport VeilederMedSnakkeboble from 'common/components/veileder-med-snakkeboble/VeilederMedSnakkeboble';\r\nimport './intro.less';\r\nimport Veilederinfo from 'common/components/veileder-info/Veilederinfo';\r\nimport DocumentIkon from 'app/icons/DocumentIkon';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useIsValid } from '../formik-wrapper/FormikWrapper';\r\nimport useFormikSubmit from 'app/hooks/useFormikSubmit';\r\n\r\nconst cls = BEMHelper('intro');\r\n\r\ninterface OwnProps {\r\n    søkerinfo: FetchState<Søkerinfo>;\r\n    formik: CustomFormikProps;\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\nconst Intro: FunctionComponent<Props> = ({ søkerinfo, formik }) => {\r\n    const intl = useIntl();\r\n    const søker = getData(søkerinfo, {}).søker;\r\n    const { isSubmitting } = formik;\r\n\r\n    const navigate = useNavigate();\r\n    const isValid = useIsValid(formik.values);\r\n\r\n    useFormikSubmit(isSubmitting, isValid, () => {\r\n        navigate(getSøknadStepPath(StepID.TERMIN));\r\n    });\r\n\r\n    const [dinePlikterIsOpen, toggleDinePlikter] = useState(false);\r\n    const [dinePersonopplysningerIsOpen, toggleDinePersonopplysninger] = useState(false);\r\n\r\n    return (\r\n        <Applikasjonsside visSpråkvelger={true}>\r\n            <VeilederMedSnakkeboble\r\n                dialog={{\r\n                    title: getMessage(intl, 'intro.bobletittel', {\r\n                        name: søker.fornavn,\r\n                    }),\r\n                    text: getMessage(intl, 'intro.bobletekst'),\r\n                }}\r\n            />\r\n            <form className={cls.block} onSubmit={formik.handleSubmit}>\r\n                <Innholdstittel className=\"blokk-xs\">\r\n                    <FormattedMessage id=\"intro.tittel\" />\r\n                </Innholdstittel>\r\n                <Veilederinfo CustomIcon={DocumentIkon}>\r\n                    <FormattedMessage\r\n                        id=\"intro.ingress\"\r\n                        values={{\r\n                            a: (msg: any) => (\r\n                                <a\r\n                                    className=\"lenke\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                    href=\"https://familie.nav.no/om-svangerskapspenger#slik-soker-du\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    {msg}\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Veilederinfo>\r\n                <BekreftCheckboksPanel\r\n                    className=\"blokk-m\"\r\n                    name=\"harGodkjentVilkår\"\r\n                    label={getMessage(intl, 'intro.godkjennVilkår.bekreft')}\r\n                >\r\n                    <FormattedMessage\r\n                        id=\"intro.godkjennVilkår.label\"\r\n                        values={{\r\n                            link: (\r\n                                <a\r\n                                    className=\"lenke\"\r\n                                    href=\"#\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        toggleDinePlikter(true);\r\n                                    }}\r\n                                >\r\n                                    <FormattedMessage id=\"intro.dinePlikter\" />\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </BekreftCheckboksPanel>\r\n                <Hovedknapp htmlType=\"submit\" className=\"blokk-m\">\r\n                    <FormattedMessage id=\"intro.begynnSøknad.knapp\" />\r\n                </Hovedknapp>\r\n                <Normaltekst className=\"velkommen__personopplysningerLink\">\r\n                    <a\r\n                        className=\"lenke\"\r\n                        href=\"#\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            toggleDinePersonopplysninger(true);\r\n                        }}\r\n                    >\r\n                        <FormattedMessage id=\"intro.lesMerOmPersonopplysninger\" />\r\n                    </a>\r\n                </Normaltekst>\r\n                <DinePlikterModal isOpen={dinePlikterIsOpen} onRequestClose={() => toggleDinePlikter(false)} />\r\n                <DinePersonopplysningerModal\r\n                    isOpen={dinePersonopplysningerIsOpen}\r\n                    onRequestClose={() => toggleDinePersonopplysninger(false)}\r\n                />\r\n            </form>\r\n        </Applikasjonsside>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    søkerinfo: state.api.søkerinfo,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Intro);\r\n","import SøknadDTO, { Søknadstype, UferdigSøknad, Søknadsgrunnlag } from 'app/types/Søknad';\r\nimport { Attachment } from 'common/storage/attachment/types/Attachment';\r\nimport { UferdigTilrettelegging } from '../types/Tilrettelegging';\r\nimport { TilretteleggingDTO } from '../types/TilretteleggingDTO';\r\nimport { Søker, SøkerDTO } from '../types/Søker';\r\nimport { mapTilretteleggingerTilDTO } from './tilretteleggingUtils';\r\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport { Språkkode } from 'common/types';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { Utenlandsopphold, UtenlandsoppholdDTO } from 'app/types/InformasjonOmUtenlandsopphold';\r\n\r\nconst fjernForkastetTilrettelegging = (tilrettelegging: UferdigTilrettelegging[], søknadsgrunnlag: Søknadsgrunnlag[]) =>\r\n    tilrettelegging.filter((t) => søknadsgrunnlag.some((g) => g.id === t.id));\r\n\r\nconst areDefined = (...items: any[]) => items.some((item) => item !== undefined);\r\n\r\nconst korrigerTilretteleggingArbeidsforhold = (\r\n    tilrettelegging: UferdigTilrettelegging,\r\n    arbeidsforhold: Arbeidsforhold[]\r\n): UferdigTilrettelegging => {\r\n    const forhold = tilrettelegging.arbeidsforhold.id\r\n        ? arbeidsforhold.find((a) => a.guid === tilrettelegging.arbeidsforhold.id)\r\n        : undefined;\r\n    if (forhold) {\r\n        return {\r\n            ...tilrettelegging,\r\n            arbeidsforhold: {\r\n                ...tilrettelegging.arbeidsforhold,\r\n                id: forhold.arbeidsgiverId,\r\n            },\r\n        };\r\n    }\r\n    return tilrettelegging;\r\n};\r\n\r\nconst convertSpråkkode = (språkkode: Språkkode) => {\r\n    if (språkkode === 'nn') {\r\n        return 'NN';\r\n    } else {\r\n        return 'NB';\r\n    }\r\n};\r\n\r\nconst konverterStringDatoerIObjektTilDate = <T, U>(input: T): U => {\r\n    const inputJSON = JSON.stringify(input);\r\n\r\n    return JSON.parse(inputJSON, (_key, value) => {\r\n        if (isISODateString(value)) {\r\n            return new Date(value);\r\n        }\r\n\r\n        return value;\r\n    });\r\n};\r\n\r\nexport const processUtfyltSøknad = (\r\n    utfyltSøknad: UferdigSøknad,\r\n    vedlegg: Attachment[],\r\n    arbeidsforhold: Arbeidsforhold[],\r\n    språkkode: Språkkode\r\n): SøknadDTO | undefined => {\r\n    const { informasjonOmUtenlandsopphold: utland } = utfyltSøknad;\r\n    const { fødselsdato: barnetsFødselsdato, ...utfyltBarn } = utfyltSøknad.barn;\r\n    const søkerDto = konverterStringDatoerIObjektTilDate<Partial<Søker>, SøkerDTO>(utfyltSøknad.søker);\r\n\r\n    if (!areDefined(utfyltBarn.erBarnetFødt, utfyltBarn.termindato)) {\r\n        return undefined;\r\n    }\r\n\r\n    if (!utfyltBarn.termindato) {\r\n        return undefined;\r\n    }\r\n\r\n    const tilrettelegging: TilretteleggingDTO[] = mapTilretteleggingerTilDTO(\r\n        fjernForkastetTilrettelegging(utfyltSøknad.tilrettelegging, utfyltSøknad.søknadsgrunnlag).map((t) => {\r\n            return korrigerTilretteleggingArbeidsforhold(t, arbeidsforhold);\r\n        })\r\n    );\r\n\r\n    return {\r\n        type: Søknadstype.SVANGERSKAPSPENGER,\r\n        erEndringssøknad: false,\r\n        informasjonOmUtenlandsopphold: {\r\n            iNorgePåHendelsestidspunktet: !!utland.iNorgePåHendelsestidspunktet,\r\n            iNorgeSiste12Mnd: !!utland.iNorgeSiste12Mnd,\r\n            iNorgeNeste12Mnd: !!utland.iNorgeNeste12Mnd,\r\n            jobbetINorgeSiste12Mnd: !!utland.jobbetINorgeSiste12Mnd,\r\n            tidligereOpphold: konverterStringDatoerIObjektTilDate<Utenlandsopphold[], UtenlandsoppholdDTO[]>(\r\n                utland.tidligereOpphold\r\n            ),\r\n            senereOpphold: konverterStringDatoerIObjektTilDate<Utenlandsopphold[], UtenlandsoppholdDTO[]>(\r\n                utland.senereOpphold\r\n            ),\r\n        },\r\n        barn: {\r\n            ...utfyltBarn,\r\n            erBarnetFødt: utfyltBarn.erBarnetFødt === undefined ? false : utfyltBarn.erBarnetFødt,\r\n            termindato: new Date(utfyltBarn.termindato),\r\n            fødselsdatoer: barnetsFødselsdato ? [new Date(barnetsFødselsdato)] : undefined,\r\n        },\r\n        vedlegg,\r\n        søker: {\r\n            ...søkerDto,\r\n            språkkode: convertSpråkkode(språkkode),\r\n        },\r\n        tilrettelegging: tilrettelegging.map((t) => ({\r\n            ...t,\r\n            vedlegg: t.vedlegg.filter((vedleggId) => vedlegg.find((v) => v.id === vedleggId)),\r\n        })),\r\n    };\r\n};\r\n","import React from 'react';\r\n\r\nconst MorGravidIkon = (props: any) => (\r\n    <svg width={34} height={48} viewBox=\"0 0 68 96\" {...props}>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                fill=\"#3E3832\"\r\n                d=\"M10.438 32.032C10.438 17.655 21.008 6 34.052 6 47.092 6 57.72 17.623 57.72 32v.316s.027 27.71-23.675 27.71c-23.7 0-23.608 9.536-23.608 9.536v-37.53z\"\r\n            />\r\n            <path\r\n                fill=\"#E7E5E2\"\r\n                d=\"M21.688 56.318c.957 1.531 3.646 28.432 11.718 28.432 8.074 0 11.719-27.4 11.719-28.827-12.361-7.081-23.438.395-23.438.395z\"\r\n            />\r\n            <path\r\n                fill=\"#0C5472\"\r\n                d=\"M44.825 55.856c5.621 2.764 14.362 10.253 14.362 17.197V96H8.563V73.053c0-6.7 7.998-13.907 13.554-16.888-.281.172-.43.275-.43.275.958 1.586 3.531 8.623 11.603 8.623 8.074 0 11.835-7.555 11.835-9.032-.1-.06-.2-.118-.3-.175z\"\r\n            />\r\n            <path\r\n                fill=\"#F5A096\"\r\n                d=\"M48.719 58.2c1.358.96 2.73 2.066 4.03 3.3l-4.622 13.949a8.204 8.204 0 0 1-.654 3.054c3.446 1.878 6.213 4.571 7.965 8.065V96H9.5c0-7.668 3.367-13.243 8.657-16.667 3.789-2.357 8.569-3.539 14.35-3.539 3.882 0 7.253.677 10.15 1.953a.524.524 0 0 0 .69-.264.517.517 0 0 0-.266-.684c-3.034-1.336-6.55-2.04-10.574-2.04-5.194 0-9.633.93-13.313 2.8l-1.205-4.783-3.569-10.793a35.803 35.803 0 0 1 3.988-3.439l3.537 9.983.344.079a8.357 8.357 0 0 1 4.96-1.62 8.36 8.36 0 0 1 6.264 2.807 8.36 8.36 0 0 1 6.264-2.806c1.83 0 3.522.584 4.898 1.574.134-.032.269-.065.403-.099l3.64-10.262z\"\r\n            />\r\n            <path\r\n                fill=\"#A13A28\"\r\n                d=\"M29.628 88.83c-1.567-1.788-2.09-5.364 0-6.555 1.26-.718 2.519-.243 3.778.985 1.26-1.228 2.519-1.703 3.778-.985 2.09 1.191 1.568 4.767 0 6.554-.879 1.002-3.646 3.484-3.778 3.42-.132.064-2.899-2.418-3.778-3.42z\"\r\n            />\r\n            <path\r\n                fill=\"#E6E5E2\"\r\n                fillRule=\"nonzero\"\r\n                d=\"M55.438 85.43V96H40.816c-.56 0-1.013-.455-1.013-1.016 0-.56.453-1.015 1.013-1.015h5.572v-.508h-8.131c-.546 0-.987-.455-.987-1.015 0-.561.441-1.016.987-1.016h8.131v-.508h-9.65c-.545 0-.988-.455-.988-1.016 0-.56.443-1.015.988-1.015h9.65v-.508h-6.962c-.63 0-1.143-.455-1.143-1.016 0-.56.512-1.015 1.143-1.015h9.051l1.093-.508h-4.702a1.016 1.016 0 1 1 0-2.032h7.4c.396 0 .73.241 1.212.508.213.118.865.488 1.957 1.11z\"\r\n            />\r\n            <path\r\n                fill=\"#E7E5E2\"\r\n                d=\"M14.693 31.8s-.098.559-.225.467a1.522 1.522 0 0 0-.568-.116c-.87 0-1.577.73-1.579 1.631l-.008 6.24c-.002.903.701 1.635 1.572 1.636.349 0 .668-.12.93-.319 2.105 10.049 9.61 17.146 18.557 17.161 8.949.015 16.477-7.058 18.611-17.1.26.2.58.321.93.322.87 0 1.576-.73 1.577-1.63l.01-6.241c0-.902-.703-1.634-1.573-1.636-.2 0-.392.043-.568.114C32.178 34.72 25.139 21 24.544 21c0 0-8.44 7.9-9.85 10.8z\"\r\n            />\r\n            <path\r\n                d=\"M26.68 37.671c-1.356.102-1.736-1.897-1.327-3.203.077-.248.526-1.375 1.32-1.375.795 0 1.145.616 1.194.722.584 1.273.297 3.744-1.187 3.856m15.14 0c1.357.102 1.737-1.897 1.328-3.203-.077-.248-.526-1.375-1.321-1.375-.794 0-1.145.616-1.193.722-.585 1.273-.298 3.744 1.186 3.856\"\r\n                fill=\"#635E59\"\r\n            />\r\n            <path\r\n                fill=\"#D1BFA3\"\r\n                fillRule=\"nonzero\"\r\n                d=\"M34.68 39.97c.798-.123 1.343-.046 1.538.194.737.905.501 1.863-.762 2.649-.665.413-1.58.559-2.063.344a.469.469 0 0 0-.38.858c.8.354 2.031.158 2.938-.406 1.717-1.068 2.11-2.666.994-4.037-.472-.58-1.308-.698-2.407-.528a.469.469 0 1 0 .143.926z\"\r\n            />\r\n            <path\r\n                fill=\"#D19E9C\"\r\n                fillRule=\"nonzero\"\r\n                d=\"M40.024 46.805a4.27 4.27 0 0 1-.295.527 6.648 6.648 0 0 1-.998 1.214c-1.198 1.152-2.759 1.818-4.745 1.757-1.937-.06-3.49-.715-4.708-1.772a6.988 6.988 0 0 1-1.111-1.219 4.265 4.265 0 0 1-.33-.526.469.469 0 1 0-.842.414c.069.14.203.368.408.656a7.92 7.92 0 0 0 1.26 1.382c1.375 1.194 3.132 1.936 5.294 2.002 2.252.07 4.051-.699 5.424-2.018a7.58 7.58 0 0 0 1.138-1.386c.184-.288.303-.516.364-.656a.469.469 0 1 0-.86-.375z\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default MorGravidIkon;\r\n","import React from 'react';\r\n\r\nconst FlaskeIkon = (props: any) => (\r\n    <svg width={36} height={36} viewBox=\"0 0 48 48\" {...props}>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                fill=\"#D8D8D8\"\r\n                d=\"M15.227 43.168L4.832 32.773a3.14 3.14 0 0 1-.014-4.44l12.815-12.815c1.66-1.57 2.946-1.462 4.326-1.77 3.515-.785 5.8-1.942 6.857-3.473l8.91 8.91c-1.532 1.055-2.69 3.34-3.474 6.856-.308 1.38-.2 2.666-1.77 4.326L19.668 43.182a3.14 3.14 0 0 1-4.441-.014z\"\r\n            />\r\n            <path\r\n                fill=\"#634689\"\r\n                d=\"M32.5 8.057l7.443 7.443a2.087 2.087 0 0 1 0 2.951l-1.475 1.476L28.073 9.532l1.476-1.475a2.087 2.087 0 0 1 2.951 0z\"\r\n            />\r\n            <path\r\n                fill=\"#F5E3E0\"\r\n                d=\"M39.138 14.694l-5.832-5.832c.737-1.26 3.003-2.14 5.694-1.667-.09-1.01.37-2.21 1.123-2.962 1.118-1.118 2.84-1.209 3.846-.202 1.007 1.006.916 2.728-.202 3.846-.753.754-1.952 1.212-2.962 1.123.472 2.69-.407 4.957-1.667 5.694z\"\r\n            />\r\n            <path\r\n                fill=\"#979797\"\r\n                d=\"M18.481 19.124l3.713 3.713-.738.737-3.713-3.712.738-.738zm-2.951 2.952l3.712 3.712-.738.738-3.712-3.712.738-.738zm-2.952 2.951l3.713 3.712-.738.738-3.712-3.712.737-.738zM9.627 27.98l3.712 3.712-.738.738-3.712-3.713.738-.737z\"\r\n            />\r\n            <path fill=\"#FFF\" d=\"M28.862 25.078l1.485 1.485-14.02 14.02-1.484-1.486z\" />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default FlaskeIkon;\r\n","import React from 'react';\r\n\r\nconst KoffertIkon = (props: any) => (\r\n    <svg width={36} height={36} viewBox=\"0 0 48 48\" {...props}>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                fill=\"#593A32\"\r\n                d=\"M45.646 42H2.354a.811.811 0 0 1-.806-.816V22.468c0-.45.361-.816.806-.816h43.292c.445 0 .806.366.806.816v18.716c0 .45-.361.816-.806.816\"\r\n            />\r\n            <path\r\n                fill=\"#333\"\r\n                d=\"M1.548 27.913h44.904V24H1.548zm28.646-18H28.65V8.786c0-.624-.47-1.13-1.052-1.13h-7.197c-.582 0-1.054.506-1.054 1.13v1.127h-1.542V8.626C17.805 7.176 18.9 6 20.251 6h7.496c1.351 0 2.446 1.176 2.446 2.626v1.287z\"\r\n            />\r\n            <path\r\n                fill=\"#723B30\"\r\n                d=\"M47.206 27.02a.79.79 0 0 0 .794-.783V10.696a.789.789 0 0 0-.794-.783H.794a.789.789 0 0 0-.794.783v15.54c0 .433.356.783.794.783h46.412z\"\r\n            />\r\n            <path\r\n                fill=\"#333\"\r\n                d=\"M21.61 30.26c-1.243 0-2.255-.945-2.255-2.108V26.89c0-1.162 1.012-2.107 2.255-2.107h4.78c1.244 0 2.255.945 2.255 2.107v1.262c0 1.163-1.011 2.109-2.255 2.109h-4.78z\"\r\n            />\r\n            <path\r\n                fill=\"#F79221\"\r\n                d=\"M26.432 25.565h-4.864c-.794 0-1.439.594-1.439 1.325v1.264c0 .732.645 1.324 1.44 1.324h4.863c.794 0 1.439-.592 1.439-1.324V26.89c0-.731-.645-1.325-1.44-1.325\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default KoffertIkon;\r\n","import React from 'react';\r\n\r\nconst KalenderIkon = (props: any) => (\r\n    <svg width={34} height={31} {...props}>\r\n        <title>{'Group'}</title>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                d=\"M25.185 4.428c0-.698.564-1.265 1.26-1.265.694 0 1.259.567 1.259 1.265 0 .7-.565 1.266-1.26 1.266-.695 0-1.259-.567-1.259-1.266zm-18.889 0c0-.698.564-1.265 1.26-1.265.695 0 1.259.567 1.259 1.265 0 .7-.564 1.266-1.26 1.266a1.262 1.262 0 0 1-1.259-1.266zM31.79 0H2.21A2.2 2.2 0 0 0 0 2.191v6.033h34V2.191c0-.907-.557-1.686-1.35-2.02A2.224 2.224 0 0 0 31.79 0z\"\r\n                fill=\"#C42229\"\r\n            />\r\n            <path d=\"M0 8.224v20.522C0 29.99.99 31 2.21 31h29.58c1.22 0 2.21-1.01 2.21-2.254V8.224H0z\" fill=\"#E3E3DA\" />\r\n            <g fillRule=\"nonzero\">\r\n                <path\r\n                    d=\"M6.93 13.918a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93zM6.93 18.347a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93z\"\r\n                    fill=\"#78706A\"\r\n                />\r\n                <path\r\n                    d=\"M21.407 20.878a3.156 3.156 0 0 1-3.148-3.164 3.156 3.156 0 0 1 3.148-3.163 3.156 3.156 0 0 1 3.149 3.163 3.156 3.156 0 0 1-3.149 3.164zm0-1.266c1.044 0 1.89-.85 1.89-1.898a1.893 1.893 0 0 0-1.89-1.898c-1.043 0-1.888.85-1.888 1.898s.845 1.898 1.888 1.898z\"\r\n                    fill=\"#06893A\"\r\n                />\r\n                <path\r\n                    d=\"M6.93 22.776a.633.633 0 1 1 0-1.266h20.14a.633.633 0 1 1 0 1.266H6.93zM6.93 27.204a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93z\"\r\n                    fill=\"#78706A\"\r\n                />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default KalenderIkon;\r\n","import React from 'react';\r\n\r\nconst PassIkon = (props: any) => (\r\n    <svg width={30} height={38} viewBox=\"0 0 27 34\" {...props}>\r\n        <title>{'Verden'}</title>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                d=\"M27 1.754C27 .785 26.202 0 25.217 0H0v34h25.216c.986 0 1.784-.785 1.784-1.755V1.755z\"\r\n                fill=\"#A33C28\"\r\n            />\r\n            <path\r\n                d=\"M7.364 25.44v-3.523h1.384c.243 0 .43.011.558.034.18.029.331.084.453.164.122.081.22.195.294.34.074.146.112.306.112.481 0 .3-.1.553-.298.76-.199.208-.558.312-1.077.312h-.94v1.432h-.486zm.485-1.848h.949c.314 0 .536-.056.668-.168.132-.112.198-.27.198-.474a.619.619 0 0 0-.116-.378.544.544 0 0 0-.307-.208 2.16 2.16 0 0 0-.453-.031h-.939v1.26zm2.404 1.848l1.409-3.523h.523l1.502 3.523h-.553l-.428-1.067H11.17l-.403 1.067h-.515zm1.058-1.447h1.244l-.383-.975a9.379 9.379 0 0 1-.26-.73c-.047.225-.113.45-.198.672l-.403 1.033zm2.599.315l.458-.038c.021.176.072.32.151.433.08.113.202.205.37.274.166.07.354.105.563.105a1.4 1.4 0 0 0 .49-.08.68.68 0 0 0 .317-.217.491.491 0 0 0 .104-.301.447.447 0 0 0-.1-.29.744.744 0 0 0-.33-.208 6.67 6.67 0 0 0-.654-.172c-.337-.077-.573-.15-.709-.22a.982.982 0 0 1-.391-.328.78.78 0 0 1-.13-.438.87.87 0 0 1 .158-.499.97.97 0 0 1 .461-.352c.202-.08.426-.12.673-.12.272 0 .512.042.72.126.208.084.368.208.48.372.111.163.171.348.18.555l-.466.033c-.025-.222-.11-.39-.254-.504-.144-.114-.358-.171-.64-.171-.293 0-.507.052-.642.155a.46.46 0 0 0-.201.374c0 .126.047.23.143.312.093.082.337.165.732.251.394.086.665.16.812.225.214.094.371.214.473.36a.85.85 0 0 1 .153.5.931.931 0 0 1-.168.53 1.094 1.094 0 0 1-.482.387c-.21.092-.445.138-.707.138-.332 0-.61-.046-.835-.14a1.16 1.16 0 0 1-.528-.419 1.155 1.155 0 0 1-.201-.633zm3.419 0l.458-.038c.022.176.072.32.151.433.08.113.203.205.37.274.166.07.354.105.563.105a1.4 1.4 0 0 0 .49-.08.68.68 0 0 0 .317-.217.491.491 0 0 0 .104-.301.447.447 0 0 0-.1-.29.744.744 0 0 0-.33-.208 6.67 6.67 0 0 0-.654-.172c-.337-.077-.573-.15-.708-.22a.982.982 0 0 1-.392-.328.78.78 0 0 1-.129-.438.87.87 0 0 1 .158-.499.97.97 0 0 1 .46-.352c.202-.08.427-.12.674-.12.272 0 .512.042.72.126.207.084.367.208.479.372.111.163.172.348.18.555l-.466.033c-.025-.222-.11-.39-.254-.504-.144-.114-.357-.171-.64-.171-.293 0-.507.052-.641.155a.46.46 0 0 0-.202.374c0 .126.048.23.143.312.093.082.337.165.732.251.395.086.665.16.812.225.214.094.372.214.473.36a.85.85 0 0 1 .153.5.931.931 0 0 1-.168.53 1.094 1.094 0 0 1-.482.387c-.209.092-.445.138-.707.138-.332 0-.61-.046-.834-.14a1.16 1.16 0 0 1-.529-.419 1.155 1.155 0 0 1-.201-.633z\"\r\n                fill=\"#EEC55B\"\r\n            />\r\n            <g fill=\"#EEC55B\">\r\n                <path d=\"M14.167 15.153c.15-.494.238-1.296.264-1.793h-2.29c.026.497.114 1.299.264 1.793h1.762zM14.246 11.567h-1.92a5.63 5.63 0 0 0-.194 1.494h2.308a5.641 5.641 0 0 0-.194-1.494M12.503 15.452c.19.53.45.884.783 1.373.333-.489.594-.843.782-1.373h-1.565zM14.155 11.268c-.192-.57-.482-.966-.869-1.431-.387.465-.677.862-.87 1.431h1.74zM16.194 11.268c-.56-.889-1.495-1.371-2.57-1.478.373.485.652.896.836 1.478h1.734zM12.026 11.567h-1.85a3.611 3.611 0 0 0-.355 1.494h2.022c-.001-.51.06-1.013.183-1.494M12.95 9.788c-1.122.105-2.063.583-2.612 1.48h1.774c.184-.582.464-.994.838-1.48M14.47 15.153h1.898c.225-.451.36-1.257.382-1.793h-2.03c-.025.497-.108 1.298-.25 1.793M14.729 13.061h2.02a3.639 3.639 0 0 0-.386-1.494h-1.817c.123.481.184.984.183 1.494M11.852 13.36H9.825c.029.537.168 1.342.394 1.793h1.883c-.142-.495-.225-1.296-.25-1.793M10.385 15.452c.572.92 1.525 1.39 2.62 1.48-.348-.523-.617-.913-.809-1.48h-1.81zM13.568 16.93c1.104-.095 2.063-.563 2.633-1.478h-1.826c-.191.566-.46.956-.807 1.479\" />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default PassIkon;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { OppsummeringIkonType } from 'app/types/OppsummeringIkonType';\r\nimport MorGravidIkon from 'app/icons/MorGravidIkon';\r\nimport FlaskeIkon from 'app/icons/FlaskeIkon';\r\nimport KoffertIkon from 'app/icons/KoffertIkon';\r\nimport KalenderIkon from 'app/icons/KalenderIkon';\r\nimport PassIkon from 'app/icons/PassIkon';\r\n\r\ninterface Props {\r\n    type: OppsummeringIkonType;\r\n    className?: string;\r\n}\r\n\r\nconst OppsummeringIkon: FunctionComponent<Props> = ({ type, className }) => {\r\n    switch (type) {\r\n        case 'termin':\r\n            return <MorGravidIkon className={className} />;\r\n        case 'barn':\r\n            return <FlaskeIkon className={className} />;\r\n        case 'arbeidsforhold':\r\n            return <KoffertIkon className={className} />;\r\n        case 'tilrettelegging':\r\n            return <KalenderIkon className={className} />;\r\n        case 'medlemskap':\r\n            return <PassIkon className={className} />;\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nexport default OppsummeringIkon;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\n\r\nimport BEMHelper from 'common/util/bem';\r\nimport Block from 'common/components/block/Block';\r\nimport OppsummeringIkon from './OppsummeringIkon';\r\nimport { OppsummeringIkonType } from 'app/types/OppsummeringIkonType';\r\n\r\nconst cls = BEMHelper('oppsummering');\r\n\r\ninterface Props {\r\n    title: string;\r\n    type: OppsummeringIkonType;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst Oppsummeringspunkt: FunctionComponent<Props> = ({ title, type, children }) => (\r\n    <section>\r\n        <Block>\r\n            <div className={cls.element('punkt')}>\r\n                <div className={cls.element('ikon')}>\r\n                    <OppsummeringIkon type={type} />\r\n                </div>\r\n                <Undertittel className={cls.element('tittel')} tag=\"h2\">\r\n                    {title}\r\n                </Undertittel>\r\n            </div>\r\n            {children}\r\n        </Block>\r\n    </section>\r\n);\r\n\r\nexport default Oppsummeringspunkt;\r\n","import React, { FunctionComponent } from 'react';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport './oppsummeringBeskrivelse.less';\r\n\r\ninterface Props {\r\n    label: string;\r\n    innhold: string;\r\n}\r\n\r\nconst cls = BEMHelper('oppsummeringBeskrivelse');\r\n\r\nconst OppsummeringBeskrivelse: FunctionComponent<Props> = ({ label, innhold }) => {\r\n    return (\r\n        <div className={cls.block}>\r\n            {label}\r\n            <div className={cls.element('beskrivelseAvEndring')}>\r\n                <em>{innhold}</em>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OppsummeringBeskrivelse;\r\n","import React, { FunctionComponent } from 'react';\r\nimport moment from 'moment';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport { UferdigTilrettelegging, Tilretteleggingstype, Arbeidsforholdstype } from 'app/types/Tilrettelegging';\r\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport { getArbeidsforholdNavnFromId } from 'app/utils/arbeidsforholdUtils';\r\nimport { guid } from 'nav-frontend-js-utils';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport OppsummeringBeskrivelse from '../OppsummeringBeskrivelse';\r\nimport Block from 'common/components/block/Block';\r\n\r\nimport './tilretteleggingOppsummering.less';\r\n\r\nconst cls = BEMHelper('tilretteleggingOppsummering');\r\n\r\ninterface Props {\r\n    tilrettelegging: UferdigTilrettelegging[];\r\n    arbeidsforhold: Arbeidsforhold[];\r\n}\r\n\r\nconst TilretteleggingOppsummering: FunctionComponent<Props> = ({ tilrettelegging, arbeidsforhold }) => {\r\n    return (\r\n        <>\r\n            {tilrettelegging.map((tilrett: UferdigTilrettelegging) => (\r\n                <div key={guid()} className={cls.element('container')}>\r\n                    <Normaltekst>\r\n                        {getArbeidsforholdNavnFromId(tilrett.arbeidsforhold.id, arbeidsforhold) || tilrett.id}\r\n                    </Normaltekst>\r\n                    <Block visible={tilrett.type.includes(Tilretteleggingstype.HEL)} margin=\"xxs\">\r\n                        {tilrett.helTilrettelegging &&\r\n                            tilrett.helTilrettelegging.map((helTil) => (\r\n                                <Block key={guid()} margin=\"xxs\">\r\n                                    <FormattedMessage\r\n                                        id=\"oppsummering.tilrettelegging.info.jobbeFullt\"\r\n                                        values={{\r\n                                            startDato: moment(helTil.tilrettelagtArbeidFom).format('Do MMMM YYYY'),\r\n                                            strong: (msg: any) => <strong>{msg}</strong>,\r\n                                        }}\r\n                                    />\r\n                                </Block>\r\n                            ))}\r\n                    </Block>\r\n                    <Block visible={tilrett.type.includes(Tilretteleggingstype.DELVIS)} margin=\"xxs\">\r\n                        {tilrett.delvisTilrettelegging &&\r\n                            tilrett.delvisTilrettelegging.map((delTil) => (\r\n                                <Block key={guid()} margin=\"xxs\">\r\n                                    <FormattedMessage\r\n                                        id=\"oppsummering.tilrettelegging.info.jobbeDelvis\"\r\n                                        values={{\r\n                                            startDato: moment(delTil.tilrettelagtArbeidFom).format('Do MMMM YYYY'),\r\n                                            prosent: delTil.stillingsprosent,\r\n                                            strong: (msg: any) => <strong>{msg}</strong>,\r\n                                        }}\r\n                                    />\r\n                                </Block>\r\n                            ))}\r\n                    </Block>\r\n                    <Block visible={tilrett.type.includes(Tilretteleggingstype.INGEN)} margin=\"xxs\">\r\n                        {tilrett.ingenTilrettelegging &&\r\n                            tilrett.ingenTilrettelegging.map((ingenTil) => (\r\n                                <Block key={guid()} margin=\"xxs\">\r\n                                    <FormattedMessage\r\n                                        id=\"oppsummering.tilrettelegging.info.ikkeJobbe\"\r\n                                        values={{\r\n                                            startDato: moment(ingenTil.slutteArbeidFom).format('Do MMMM YYYY'),\r\n                                            strong: (msg: any) => <strong>{msg}</strong>,\r\n                                        }}\r\n                                    />\r\n                                </Block>\r\n                            ))}\r\n                    </Block>\r\n                    {(tilrett.arbeidsforhold.type === Arbeidsforholdstype.FRILANSER ||\r\n                        tilrett.arbeidsforhold.type === Arbeidsforholdstype.SELVSTENDIG) && (\r\n                        <>\r\n                            <Block margin=\"xs\">\r\n                                <OppsummeringBeskrivelse\r\n                                    label=\"Farer for å skade det ufødte barnet:\"\r\n                                    innhold={tilrett.risikoFaktorer || ''}\r\n                                />\r\n                            </Block>\r\n                            <Block margin=\"xs\">\r\n                                <OppsummeringBeskrivelse\r\n                                    label=\"Hvordan du kan jobbe annerledes:\"\r\n                                    innhold={tilrett.tilretteleggingstiltak || ''}\r\n                                />\r\n                            </Block>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TilretteleggingOppsummering;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport './duHarSvartNeiListe.less';\r\n\r\nconst cls = BEMHelper('duHarSvartNeiListe');\r\n\r\ninterface Props {\r\n    harJobbetSomSelvstendigNæringsdrivende?: boolean;\r\n    harJobbetFrilans?: boolean;\r\n    harHattAndreInntektskilder?: boolean;\r\n    hattInntektSomFosterforelder?: boolean;\r\n    nyoppstartetFrilanser?: boolean;\r\n    hattOppdragForNærVennEllerFamilie?: boolean;\r\n    arbeidsforholdOppsummering?: boolean;\r\n    frilansOppsummering?: boolean;\r\n    selvstendigOppsummering?: boolean;\r\n    endringAvNæringsinntekt?: boolean;\r\n    harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene?: boolean;\r\n    harRegnskapsfører?: boolean;\r\n    harRevisor?: boolean;\r\n    kanInnhenteOpplsyningerFraRevisor?: boolean;\r\n}\r\n\r\nconst DuHarSvartNeiListe: FunctionComponent<Props> = ({\r\n    harJobbetSomSelvstendigNæringsdrivende,\r\n    harJobbetFrilans,\r\n    harHattAndreInntektskilder,\r\n    hattInntektSomFosterforelder,\r\n    nyoppstartetFrilanser,\r\n    hattOppdragForNærVennEllerFamilie,\r\n    arbeidsforholdOppsummering,\r\n    frilansOppsummering,\r\n    selvstendigOppsummering,\r\n    endringAvNæringsinntekt,\r\n    harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene,\r\n    harRegnskapsfører,\r\n    harRevisor,\r\n    kanInnhenteOpplsyningerFraRevisor,\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div className={cls.element('overskrift')}>\r\n                <FormattedMessage\r\n                    id=\"oppsummering.arbeidsforhold.svar\"\r\n                    values={{\r\n                        strong: (msg: any) => <strong>{msg}</strong>,\r\n                    }}\r\n                />\r\n            </div>\r\n            <ul className={cls.element('liste')}>\r\n                {arbeidsforholdOppsummering && harJobbetSomSelvstendigNæringsdrivende === false && (\r\n                    <li>\r\n                        <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig\" />\r\n                    </li>\r\n                )}\r\n                {arbeidsforholdOppsummering && harJobbetFrilans === false && (\r\n                    <li>\r\n                        <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.frilans\" />\r\n                    </li>\r\n                )}\r\n                {arbeidsforholdOppsummering && harHattAndreInntektskilder === false && (\r\n                    <li>\r\n                        <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.andreInntekter\" />\r\n                    </li>\r\n                )}\r\n                {frilansOppsummering && hattInntektSomFosterforelder === false && (\r\n                    <li>\r\n                        <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.frilans.fosterforelder\" />\r\n                    </li>\r\n                )}\r\n                {frilansOppsummering && nyoppstartetFrilanser === false && (\r\n                    <li>\r\n                        <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.frilans.nyoppstartet\" />\r\n                    </li>\r\n                )}\r\n                {frilansOppsummering && hattOppdragForNærVennEllerFamilie === false && (\r\n                    <li>\r\n                        <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.frilans.oppdragNærVennFamilie\" />\r\n                    </li>\r\n                )}\r\n                {selvstendigOppsummering && endringAvNæringsinntekt === false && (\r\n                    <li>\r\n                        <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.endringAvNæringsinntekt\" />\r\n                    </li>\r\n                )}\r\n                {selvstendigOppsummering && harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene === false && (\r\n                    <li>\r\n                        <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene\" />\r\n                    </li>\r\n                )}\r\n                {selvstendigOppsummering && harRegnskapsfører === false && (\r\n                    <li>\r\n                        <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.harRegnskapsfører\" />\r\n                    </li>\r\n                )}\r\n                {selvstendigOppsummering && harRevisor === false && (\r\n                    <li>\r\n                        <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.harRevisor\" />\r\n                    </li>\r\n                )}\r\n                {selvstendigOppsummering && kanInnhenteOpplsyningerFraRevisor === false && (\r\n                    <li>\r\n                        <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.kanInnhenteOpplsyningerFraRevisor\" />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DuHarSvartNeiListe;\r\n","import React, { FunctionComponent } from 'react';\r\nimport moment from 'moment';\r\nimport Block from 'common/components/block/Block';\r\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\r\nimport { FrilansInformasjon } from 'app/types/FrilansInformasjon';\r\nimport DuHarSvartNeiListe from '../DuHarSvartNeiListe';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\ninterface Props {\r\n    frilansInformasjon: Partial<FrilansInformasjon>;\r\n}\r\n\r\nconst InformasjonOmFrilans: FunctionComponent<Props> = ({ frilansInformasjon }) => {\r\n    return (\r\n        <Block margin=\"xxs\">\r\n            <div className=\"grayInfoBox\">\r\n                <Element>\r\n                    <FormattedMessage id=\"oppsummering.arbeidsforhold.frilans\" />\r\n                </Element>\r\n                <Normaltekst>{moment(frilansInformasjon.oppstart).format('DD.MM.YYYY')}</Normaltekst>\r\n                <DuHarSvartNeiListe\r\n                    frilansOppsummering={true}\r\n                    hattInntektSomFosterforelder={frilansInformasjon.driverFosterhjem}\r\n                    nyoppstartetFrilanser={frilansInformasjon.jobberFremdelesSomFrilans}\r\n                    hattOppdragForNærVennEllerFamilie={frilansInformasjon.harJobbetForNærVennEllerFamilieSiste10Mnd}\r\n                />\r\n            </div>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default InformasjonOmFrilans;\r\n","import React, { FunctionComponent } from 'react';\r\nimport moment from 'moment';\r\nimport { EndringAvNæringsinntektInformasjon } from 'app/types/SelvstendigNæringsdrivende';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport BEMHelper from 'common/util/bem';\r\nimport './endringSelvstendig.less';\r\nimport OppsummeringBeskrivelse from '../../../OppsummeringBeskrivelse';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport Block from 'common/components/block/Block';\r\nimport getMessage from 'common/util/i18nUtils';\r\n\r\ninterface Props {\r\n    endringAvNæringsinntektInformasjon: EndringAvNæringsinntektInformasjon;\r\n}\r\n\r\nconst cls = BEMHelper('endringSelvstendig');\r\n\r\nconst EndringSelvstendig: FunctionComponent<Props> = ({ endringAvNæringsinntektInformasjon }) => {\r\n    const intl = useIntl();\r\n    return (\r\n        <div className={cls.block}>\r\n            <div>\r\n                <Element>\r\n                    <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.endring\" />\r\n                </Element>\r\n            </div>\r\n            <Block margin=\"xxs\">{moment(endringAvNæringsinntektInformasjon.dato).format('DD.MM.YYYY')}</Block>\r\n            <Block margin=\"xxs\">\r\n                <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.etterEndring\" />{' '}\r\n                {endringAvNæringsinntektInformasjon.næringsinntektEtterEndring}\r\n            </Block>\r\n            <Block margin=\"xxs\">\r\n                <OppsummeringBeskrivelse\r\n                    label={getMessage(intl, 'oppsummering.arbeidsforhold.svar.selvstendig.beskrivelseAvEndring')}\r\n                    innhold={endringAvNæringsinntektInformasjon.forklaring}\r\n                />\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndringSelvstendig;\r\n","import React, { FunctionComponent } from 'react';\r\nimport BEMHelper from 'common/util/bem';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport { Næringsrelasjon } from 'app/types/SelvstendigNæringsdrivende';\r\n\r\nimport './revisorSelvstendig.less';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Block from 'common/components/block/Block';\r\n\r\nconst cls = BEMHelper('revisorSelvstendig');\r\n\r\ninterface Props {\r\n    revisor: Næringsrelasjon;\r\n}\r\n\r\nconst RevisorSelvstendig: FunctionComponent<Props> = ({ revisor }) => {\r\n    return (\r\n        <div className={cls.block}>\r\n            <div>\r\n                <Element>\r\n                    <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.revisor\" />\r\n                </Element>\r\n            </div>\r\n            <Block margin=\"xxs\">\r\n                <FormattedMessage\r\n                    id=\"oppsummering.arbeidsforhold.svar.selvstendig.revisor.navn\"\r\n                    values={{ navn: revisor.navn }}\r\n                />\r\n            </Block>\r\n            <Block margin=\"xxs\">\r\n                <FormattedMessage\r\n                    id=\"oppsummering.arbeidsforhold.svar.selvstendig.revisor.tlf\"\r\n                    values={{ telefon: revisor.telefonnummer }}\r\n                />\r\n            </Block>\r\n            <Block margin=\"xxs\">\r\n                {revisor.erNærVennEllerFamilie ? (\r\n                    <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.revisor.vennEllerFamilie\" />\r\n                ) : (\r\n                    <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.revisor.ikkeVennEllerFamilie\" />\r\n                )}\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RevisorSelvstendig;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Næringsrelasjon } from 'app/types/SelvstendigNæringsdrivende';\r\nimport { Element } from 'nav-frontend-typografi';\r\n\r\nimport './regnskapsførerSelvstendig.less';\r\nimport BEMHelper from 'common/util/bem';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Block from 'common/components/block/Block';\r\n\r\nconst cls = BEMHelper('regnskapsførerSelvstendig.less');\r\n\r\ninterface Props {\r\n    regnskapsfører: Næringsrelasjon;\r\n}\r\n\r\nconst RegnskapsførerSelvstendig: FunctionComponent<Props> = ({ regnskapsfører }) => {\r\n    return (\r\n        <div className={cls.block}>\r\n            <div>\r\n                <Element>\r\n                    <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.regnskapsfører\" />\r\n                </Element>\r\n            </div>\r\n            <Block margin=\"xxs\">\r\n                <FormattedMessage\r\n                    id=\"oppsummering.arbeidsforhold.svar.selvstendig.regnskapsfører.navn\"\r\n                    values={{ navn: regnskapsfører.navn }}\r\n                />\r\n            </Block>\r\n            <Block margin=\"xxs\">\r\n                <FormattedMessage\r\n                    id=\"oppsummering.arbeidsforhold.svar.selvstendig.regnskapsfører.tlf\"\r\n                    values={{ navn: regnskapsfører.telefonnummer }}\r\n                />\r\n            </Block>\r\n            <Block margin=\"xxs\">\r\n                <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.regnskapsfører.vennEllerFamilie\" />\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegnskapsførerSelvstendig;\r\n","import React, { FunctionComponent } from 'react';\r\nimport moment from 'moment';\r\nimport { Normaltekst, Element } from 'nav-frontend-typografi';\r\nimport BEMHelper from 'common/util/bem';\r\n\r\nimport { TidsperiodeMedValgfriSluttdato } from 'common/types';\r\nimport { Næringstype } from 'app/types/SelvstendigNæringsdrivende';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport Block from 'common/components/block/Block';\r\n\r\nimport './detaljerSelvstendig.less';\r\n\r\ninterface Props {\r\n    orgnr: string;\r\n    navnPåNæringen: string;\r\n    oppstartsdato: string;\r\n    pågående: boolean;\r\n    tidsperiode: Partial<TidsperiodeMedValgfriSluttdato>;\r\n    typer: Næringstype[];\r\n}\r\n\r\nconst cls = BEMHelper('detaljerSelvstendig');\r\n\r\nconst DetaljerSelvstendig: FunctionComponent<Props> = ({\r\n    orgnr,\r\n    navnPåNæringen,\r\n    oppstartsdato,\r\n    pågående,\r\n    tidsperiode,\r\n    typer,\r\n}) => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <div className={cls.block}>\r\n            <Normaltekst>\r\n                <FormattedMessage id=\"oppsummering.arbeidsforhold.svar.selvstendig.orgnr\" /> {orgnr}\r\n            </Normaltekst>\r\n            <Element>{navnPåNæringen.toUpperCase()}</Element>\r\n            <Block margin=\"xxs\">\r\n                <em>{typer.map((type) => getMessage(intl, `næringstype.${type.toLocaleLowerCase()}`))}</em>\r\n            </Block>\r\n            <Block margin=\"xxs\">\r\n                {moment(oppstartsdato).format('DD.MM.YYYY')} -{' '}\r\n                {pågående ? <FormattedMessage id=\"pågående\" /> : moment(tidsperiode.tom).format('DD.MM.YYYY')}\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetaljerSelvstendig;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Block from 'common/components/block/Block';\r\nimport { Næring } from 'app/types/SelvstendigNæringsdrivende';\r\nimport EndringSelvstendig from './selvstendig/EndringSelvstendig';\r\nimport RevisorSelvstendig from './selvstendig/RevisorSelvstendig';\r\nimport RegnskapsførerSelvstendig from './selvstendig/RegnskapsførerSelvstendig';\r\nimport DetaljerSelvstendig from './selvstendig/DetaljerSelvstendig';\r\nimport DuHarSvartNeiListe from '../DuHarSvartNeiListe';\r\n\r\ninterface Props {\r\n    selvstendigInformasjon: Næring;\r\n}\r\n\r\nconst InformasjonOmSelvstendig: FunctionComponent<Props> = ({ selvstendigInformasjon }) => {\r\n    return (\r\n        <Block margin=\"xxs\">\r\n            <div className=\"grayInfoBox\">\r\n                <DetaljerSelvstendig\r\n                    navnPåNæringen={selvstendigInformasjon.navnPåNæringen}\r\n                    orgnr={selvstendigInformasjon.organisasjonsnummer}\r\n                    oppstartsdato={selvstendigInformasjon.oppstartsdato!}\r\n                    pågående={selvstendigInformasjon.pågående}\r\n                    tidsperiode={selvstendigInformasjon.tidsperiode}\r\n                    typer={selvstendigInformasjon.næringstyper}\r\n                />\r\n\r\n                {selvstendigInformasjon.endringAvNæringsinntektInformasjon && (\r\n                    <EndringSelvstendig\r\n                        endringAvNæringsinntektInformasjon={selvstendigInformasjon.endringAvNæringsinntektInformasjon}\r\n                    />\r\n                )}\r\n\r\n                {selvstendigInformasjon.harRevisor && <RevisorSelvstendig revisor={selvstendigInformasjon.revisor!} />}\r\n\r\n                {selvstendigInformasjon.harRegnskapsfører && (\r\n                    <RegnskapsførerSelvstendig regnskapsfører={selvstendigInformasjon.regnskapsfører!} />\r\n                )}\r\n\r\n                <DuHarSvartNeiListe\r\n                    selvstendigOppsummering={true}\r\n                    endringAvNæringsinntekt={selvstendigInformasjon.hattVarigEndringAvNæringsinntektSiste4Kalenderår}\r\n                    harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene={\r\n                        selvstendigInformasjon.harBlittYrkesaktivILøpetAvDeTreSisteFerdigliknedeÅrene\r\n                    }\r\n                    harRegnskapsfører={selvstendigInformasjon.harRegnskapsfører}\r\n                    harRevisor={selvstendigInformasjon.harRevisor}\r\n                    kanInnhenteOpplsyningerFraRevisor={selvstendigInformasjon.kanInnhenteOpplsyningerFraRevisor}\r\n                />\r\n            </div>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default InformasjonOmSelvstendig;\r\n","import React, { FunctionComponent } from 'react';\r\nimport moment from 'moment';\r\nimport Block from 'common/components/block/Block';\r\nimport { AnnenInntekt } from 'app/types/AnnenInntekt';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\ninterface Props {\r\n    annenInntekt: AnnenInntekt;\r\n}\r\n\r\nconst InformasjonOmAndreInntekter: FunctionComponent<Props> = ({ annenInntekt }) => {\r\n    return (\r\n        <Block margin=\"xxs\">\r\n            <div className=\"grayInfoBox\">\r\n                <Block margin=\"xxs\">\r\n                    <Element>{annenInntekt.type}</Element>\r\n                </Block>\r\n                <div>\r\n                    {moment(annenInntekt.tidsperiode.fom).format('DD.MM.YYYY')} -{' '}\r\n                    {annenInntekt.pågående ? (\r\n                        <FormattedMessage id=\"pågående\" />\r\n                    ) : (\r\n                        moment(annenInntekt.tidsperiode.tom).format('DD.MM.YYYY')\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default InformasjonOmAndreInntekter;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport { Søknadsgrunnlag } from 'app/types/Søknad';\r\nimport InformasjonOmArbeidsforholdWrapper from 'common/components/arbeidsforhold-infobox/InformasjonOmArbeidsforholdWrapper';\r\nimport InformasjonOmFrilans from './components/InformasjonOmFrilans';\r\nimport { FrilansInformasjon } from 'app/types/FrilansInformasjon';\r\nimport { Næring } from 'app/types/SelvstendigNæringsdrivende';\r\nimport InformasjonOmSelvstendig from './components/InformasjonOmSelvstendig';\r\nimport InformasjonOmAndreInntekter from './components/InformasjonOmAndreInntekter';\r\nimport DuHarSvartNeiListe from './DuHarSvartNeiListe';\r\nimport { AnnenInntekt } from 'app/types/AnnenInntekt';\r\nimport { guid } from 'nav-frontend-js-utils';\r\n\r\ninterface Props {\r\n    arbeidsforhold: Arbeidsforhold[];\r\n    søknadsgrunnlag: Søknadsgrunnlag[];\r\n    harJobbetSomSelvstendigNæringsdrivende: boolean;\r\n    harJobbetFrilans: boolean;\r\n    harHattAndreInntektskilder: boolean;\r\n    frilansInformasjon: Partial<FrilansInformasjon> | undefined;\r\n    selvstendigInformasjon: Næring[] | undefined;\r\n    andreInntekter?: AnnenInntekt[];\r\n}\r\n\r\nconst ArbeidsforholdOppsummering: FunctionComponent<Props> = ({\r\n    arbeidsforhold,\r\n    harJobbetSomSelvstendigNæringsdrivende,\r\n    harJobbetFrilans,\r\n    harHattAndreInntektskilder,\r\n    frilansInformasjon,\r\n    selvstendigInformasjon,\r\n    andreInntekter,\r\n}) => {\r\n    return (\r\n        <>\r\n            <InformasjonOmArbeidsforholdWrapper arbeidsforhold={arbeidsforhold} />\r\n\r\n            {harJobbetFrilans && <InformasjonOmFrilans frilansInformasjon={frilansInformasjon!} />}\r\n\r\n            {harJobbetSomSelvstendigNæringsdrivende &&\r\n                selvstendigInformasjon!.map((info) => (\r\n                    <InformasjonOmSelvstendig\r\n                        key={`${info.navnPåNæringen}${info.organisasjonsnummer}`}\r\n                        selvstendigInformasjon={info}\r\n                    />\r\n                ))}\r\n\r\n            {harHattAndreInntektskilder &&\r\n                andreInntekter !== undefined &&\r\n                andreInntekter.length > 0 &&\r\n                andreInntekter.map((annenInn) => <InformasjonOmAndreInntekter key={guid()} annenInntekt={annenInn} />)}\r\n\r\n            {(!harJobbetSomSelvstendigNæringsdrivende || !harJobbetFrilans || !harHattAndreInntektskilder) && (\r\n                <DuHarSvartNeiListe\r\n                    arbeidsforholdOppsummering={true}\r\n                    harHattAndreInntektskilder={harHattAndreInntektskilder}\r\n                    harJobbetFrilans={harJobbetFrilans}\r\n                    harJobbetSomSelvstendigNæringsdrivende={harJobbetSomSelvstendigNæringsdrivende}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ArbeidsforholdOppsummering;\r\n","import React, { FunctionComponent, useMemo } from 'react';\r\nimport moment from 'moment';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport Block from 'common/components/block/Block';\r\nimport { Utenlandsopphold } from 'app/types/InformasjonOmUtenlandsopphold';\r\nimport { guid } from 'nav-frontend-js-utils';\r\nimport getCountries, { Countries, getContryName } from 'app/utils/getCountries';\r\n\r\ninterface Props {\r\n    iNorgeNeste12Mnd: boolean;\r\n    iNorgeSiste12Mnd: boolean;\r\n    tidligereOpphold: Utenlandsopphold[];\r\n    senereOpphold: Utenlandsopphold[];\r\n}\r\n\r\nconst getTidligereOppholdText = (tidligereOpphold: Utenlandsopphold[], countries: Countries) => {\r\n    return tidligereOpphold.map((tidlOpphold: Utenlandsopphold) => {\r\n        return (\r\n            <div key={guid()}>\r\n                <FormattedMessage\r\n                    id=\"oppsummering.medlemskap.iNorgeSiste12Måneder.nei\"\r\n                    values={{\r\n                        land: getContryName(countries, tidlOpphold.land),\r\n                        startDato: moment(tidlOpphold.tidsperiode.fom).format('dddd Do MMMM YYYY'),\r\n                        sluttDato: moment(tidlOpphold.tidsperiode.tom).format('dddd Do MMMM YYYY'),\r\n                        b: (msg: any) => <b>{msg}</b>,\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    });\r\n};\r\n\r\nconst getSenereOppholdText = (senereOpphold: Utenlandsopphold[], countries: Countries) => {\r\n    return senereOpphold.map((senOpphold: Utenlandsopphold) => {\r\n        return (\r\n            <div key={guid()}>\r\n                <FormattedMessage\r\n                    id=\"oppsummering.medlemskap.iNorgeNeste12Måneder.nei\"\r\n                    values={{\r\n                        land: getContryName(countries, senOpphold.land),\r\n                        startDato: moment(senOpphold.tidsperiode.fom).format('dddd Do MMMM YYYY'),\r\n                        sluttDato: moment(senOpphold.tidsperiode.tom).format('dddd Do MMMM YYYY'),\r\n                        b: (msg: any) => <b>{msg}</b>,\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    });\r\n};\r\n\r\nconst MedlemskapOppsummering: FunctionComponent<Props> = ({\r\n    iNorgeNeste12Mnd,\r\n    iNorgeSiste12Mnd,\r\n    tidligereOpphold,\r\n    senereOpphold,\r\n}) => {\r\n    const intl = useIntl();\r\n    const countries = useMemo(() => getCountries(true, false, intl.locale), []);\r\n\r\n    return (\r\n        <>\r\n            <Block margin=\"xxs\">\r\n                {iNorgeSiste12Mnd ? (\r\n                    <FormattedMessage id={'oppsummering.medlemskap.iNorgeSiste12Måneder.ja'} />\r\n                ) : (\r\n                    getTidligereOppholdText(tidligereOpphold, countries)\r\n                )}\r\n            </Block>\r\n            <Block margin=\"xxs\">\r\n                {iNorgeNeste12Mnd ? (\r\n                    <FormattedMessage id={'oppsummering.medlemskap.iNorgeNeste12Måneder.ja'} />\r\n                ) : (\r\n                    getSenereOppholdText(senereOpphold, countries)\r\n                )}\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MedlemskapOppsummering;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Block from 'common/components/block/Block';\r\n\r\ninterface Props {\r\n    etternavn: string;\r\n    fornavn: string;\r\n    fnr: string;\r\n}\r\n\r\nconst TerminOppsummering: FunctionComponent<Props> = ({ fornavn, etternavn, fnr }) => {\r\n    return (\r\n        <>\r\n            <Block margin=\"xxs\">\r\n                <FormattedMessage\r\n                    id=\"oppsummering.termin.personalia.navn\"\r\n                    values={{\r\n                        navn: `${fornavn} ${etternavn}`,\r\n                    }}\r\n                />\r\n            </Block>\r\n            <Block margin=\"xxs\">\r\n                <FormattedMessage\r\n                    id=\"oppsummering.termin.personalia.fnr\"\r\n                    values={{\r\n                        fnr,\r\n                    }}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TerminOppsummering;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { ApiActionTypes } from 'app/redux/types/ApiAction';\r\nimport { Attachment } from 'common/storage/attachment/types/Attachment';\r\nimport { CustomFormikProps } from 'app/types/Formik';\r\nimport { FetchStatus } from 'app/types/FetchState';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { processUtfyltSøknad } from 'app/utils/søknadUtils';\r\nimport { Søkerinfo } from 'app/types/Søkerinfo';\r\nimport { State } from 'app/redux/store';\r\nimport Action from 'app/redux/types/Action';\r\nimport Applikasjonsside from '../applikasjonsside/Applikasjonsside';\r\nimport BekreftCheckboksPanel from 'app/formik/wrappers/BekreftCheckboksPanel';\r\nimport Block from 'common/components/block/Block';\r\nimport FormikStep from 'app/components/formik-step/FormikStep';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport Oppsummeringspunkt from './components/Oppsummeringspunkt';\r\nimport SøknadStep from 'app/types/SøknadStep';\r\nimport Veilederinfo from 'common/components/veileder-info/Veilederinfo';\r\nimport Tilrettelegging from 'app/types/Tilrettelegging';\r\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport TilretteleggingOppsummering from './components/tilrettelegging/TilretteleggingOppsummering';\r\nimport ArbeidsforholdOppsummering from './components/arbeidsforhold/ArbeidsforholdOppsummering';\r\nimport MedlemskapOppsummering from './components/medlemskap/MedlemskapOppsummering';\r\nimport TerminOppsummering from './components/termin/TerminOppsummering';\r\nimport SøknadDTO from '../../types/S\\u00F8knad';\r\nimport { isAttachmentWithError } from 'common/storage/attachment/components/util';\r\nimport { getAktiveArbeidsforhold } from 'app/utils/arbeidsforholdUtils';\r\nimport { Språkkode } from 'common/types';\r\nimport dayjs from 'dayjs';\r\n\r\nimport './oppsummering.less';\r\n\r\ninterface OwnProps {\r\n    step: SøknadStep;\r\n    formikProps: CustomFormikProps;\r\n    språkkode: Språkkode;\r\n}\r\n\r\ninterface StateProps {\r\n    vedlegg: Attachment[];\r\n    søkerinfo: Søkerinfo | undefined;\r\n    arbeidsforhold: Arbeidsforhold[];\r\n    requestSendSøknad: (søknad: SøknadDTO) => void;\r\n}\r\n\r\ntype Props = OwnProps & StateProps;\r\n\r\nconst Oppsummering: FunctionComponent<Props> = (props) => {\r\n    const intl = useIntl();\r\n    const { step, vedlegg, søkerinfo, arbeidsforhold, requestSendSøknad, formikProps, språkkode } = props;\r\n    const { values } = formikProps;\r\n\r\n    const visAdvarselOmManglendeDokumentasjon = values.tilrettelegging.some(\r\n        (t: Tilrettelegging) => t.vedlegg.length === 0\r\n    );\r\n\r\n    const sendSøknad = () => {\r\n        const ferdigSøknad = processUtfyltSøknad(values, vedlegg, arbeidsforhold, språkkode);\r\n        if (ferdigSøknad) {\r\n            requestSendSøknad(ferdigSøknad);\r\n        }\r\n    };\r\n\r\n    if (søkerinfo === undefined) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Applikasjonsside visTittel={true}>\r\n            <FormikStep\r\n                step={step}\r\n                formikProps={formikProps}\r\n                showNesteknapp={true}\r\n                onValidFormSubmit={sendSøknad}\r\n            >\r\n                <Block>\r\n                    <Veilederinfo visVeileder={true} stil=\"kompakt\" type=\"info\">\r\n                        <FormattedMessage id=\"oppsummering.veileder\" />\r\n                    </Veilederinfo>\r\n                </Block>\r\n                <Oppsummeringspunkt\r\n                    type=\"termin\"\r\n                    title={getMessage(intl, 'oppsummering.termin.tittel.barnetErIkkeFødt')}\r\n                >\r\n                    <TerminOppsummering\r\n                        fornavn={søkerinfo.søker.fornavn}\r\n                        etternavn={søkerinfo.søker.etternavn}\r\n                        fnr={søkerinfo.søker.fnr}\r\n                    />\r\n                </Oppsummeringspunkt>\r\n                <Oppsummeringspunkt type=\"barn\" title={getMessage(intl, 'oppsummering.barn.tittel')}>\r\n                    <Block margin=\"xxs\">\r\n                        <FormattedMessage\r\n                            id=\"oppsummering.barn.termindato\"\r\n                            values={{\r\n                                dato: moment(values.barn.termindato).format('dddd Do MMMM YYYY'),\r\n                            }}\r\n                        />\r\n                    </Block>\r\n                    <div>\r\n                        {values.barn.fødselsdato !== undefined && (\r\n                            <FormattedMessage\r\n                                id=\"oppsummering.barn.fødselsdato\"\r\n                                values={{ dato: moment(values.barn.fødselsdato).format('dddd Do MMMM YYYY') }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Oppsummeringspunkt>\r\n                <Oppsummeringspunkt\r\n                    type=\"arbeidsforhold\"\r\n                    title={getMessage(intl, 'oppsummering.arbeidsforhold.tittel')}\r\n                >\r\n                    <ArbeidsforholdOppsummering\r\n                        arbeidsforhold={getAktiveArbeidsforhold(\r\n                            arbeidsforhold,\r\n                            dayjs(formikProps.values.barn.termindato).toDate()\r\n                        )}\r\n                        frilansInformasjon={values.søker.frilansInformasjon}\r\n                        selvstendigInformasjon={values.søker.selvstendigNæringsdrivendeInformasjon}\r\n                        søknadsgrunnlag={values.søknadsgrunnlag}\r\n                        andreInntekter={values.søker.andreInntekterSiste10Mnd}\r\n                        harHattAndreInntektskilder={values.søker.harHattAnnenInntektSiste10Mnd!}\r\n                        harJobbetFrilans={values.søker.harJobbetSomFrilansSiste10Mnd!}\r\n                        harJobbetSomSelvstendigNæringsdrivende={\r\n                            values.søker.harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd!\r\n                        }\r\n                    />\r\n                </Oppsummeringspunkt>\r\n                <Oppsummeringspunkt\r\n                    type=\"tilrettelegging\"\r\n                    title={getMessage(intl, 'oppsummering.tilrettelegging.tittel')}\r\n                >\r\n                    <TilretteleggingOppsummering\r\n                        tilrettelegging={values.tilrettelegging}\r\n                        arbeidsforhold={getAktiveArbeidsforhold(\r\n                            arbeidsforhold,\r\n                            dayjs(formikProps.values.barn.termindato).toDate()\r\n                        )}\r\n                    />\r\n                </Oppsummeringspunkt>\r\n                <Oppsummeringspunkt type=\"medlemskap\" title={getMessage(intl, 'oppsummering.medlemskap.tittel')}>\r\n                    <MedlemskapOppsummering\r\n                        iNorgeNeste12Mnd={values.informasjonOmUtenlandsopphold.iNorgeNeste12Mnd!}\r\n                        iNorgeSiste12Mnd={values.informasjonOmUtenlandsopphold.iNorgeSiste12Mnd!}\r\n                        senereOpphold={values.informasjonOmUtenlandsopphold.senereOpphold}\r\n                        tidligereOpphold={values.informasjonOmUtenlandsopphold.tidligereOpphold}\r\n                    />\r\n                </Oppsummeringspunkt>\r\n                <Block visible={visAdvarselOmManglendeDokumentasjon}>\r\n                    <Veilederinfo stil=\"kompakt\" type=\"advarsel\">\r\n                        <FormattedMessage id=\"oppsummering.veileder.dokumentasjon\" />\r\n                    </Veilederinfo>\r\n                </Block>\r\n                <Block>\r\n                    <BekreftCheckboksPanel\r\n                        name=\"harGodkjentOppsummering\"\r\n                        label={getMessage(intl, 'oppsummering.harGodkjentVilkår')}\r\n                    />\r\n                </Block>\r\n            </FormikStep>\r\n        </Applikasjonsside>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    søkerinfo: state.api.søkerinfo.status === FetchStatus.SUCCESS ? state.api.søkerinfo.data : undefined,\r\n    arbeidsforhold: state.api.søkerinfo.status === FetchStatus.SUCCESS ? state.api.søkerinfo.data.arbeidsforhold : [],\r\n    vedlegg: state.attachment.vedlegg.filter((a) => !isAttachmentWithError(a)),\r\n    språkkode: state.common.språkkode,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: (action: Action) => void) => ({\r\n    requestSendSøknad: (søknad: SøknadDTO) => {\r\n        dispatch({ type: ApiActionTypes.SEND_SØKNAD_REQUEST, payload: { søknad } });\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Oppsummering);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport './statusBoks.less';\r\nimport BEMHelper from 'common/util/bem';\r\nimport Lenkepanelbase from 'nav-frontend-lenkepanel';\r\nimport { Undertittel, Normaltekst, Ingress, Systemtittel } from 'nav-frontend-typografi';\r\nimport EtikettBase from 'nav-frontend-etiketter';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Block from 'common/components/block/Block';\r\n\r\nconst cls = BEMHelper('statusBoks');\r\n\r\ninterface Props {\r\n    saksNr: string;\r\n}\r\n\r\nconst StatusBoks: FunctionComponent<Props> = ({ saksNr }) => {\r\n    return (\r\n        <Block>\r\n            <Block margin=\"xs\">\r\n                <Systemtittel>\r\n                    <FormattedMessage id=\"søknadSendt.status.tittel\" />\r\n                </Systemtittel>\r\n            </Block>\r\n            <Lenkepanelbase\r\n                href=\"https://foreldrepenger.nav.no\"\r\n                border={true}\r\n                className=\"statusBoks__lenkepanel\"\r\n                tittelProps=\"ingress\"\r\n            >\r\n                <div className={cls.block}>\r\n                    <div className={cls.element('left')}>\r\n                        <Block margin=\"xs\">\r\n                            <Undertittel>\r\n                                <FormattedMessage id=\"søknadSendt.status.undertittel\" />\r\n                            </Undertittel>\r\n                        </Block>\r\n                        <EtikettBase type=\"fokus\">\r\n                            <FormattedMessage id=\"søknadSendt.status.status\" />\r\n                        </EtikettBase>\r\n                    </div>\r\n                    <div className={cls.element('right')}>\r\n                        <Normaltekst>\r\n                            <FormattedMessage id=\"søknadSendt.status.saksnummer\" />\r\n                        </Normaltekst>\r\n                        <Ingress>{saksNr}</Ingress>\r\n                    </div>\r\n                </div>\r\n            </Lenkepanelbase>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default StatusBoks;\r\n","import * as React from 'react';\r\n\r\nconst SpotlightLetter = (props: any) => (\r\n    <svg width={120} height={120} viewBox=\"0 0 120 120\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n        <title>Søknad sendt illustrasjon</title>\r\n        <defs>\r\n            <circle id=\"path-1\" cx=\"60\" cy=\"60\" r=\"60\" />\r\n            <circle id=\"path-3\" cx=\"8\" cy=\"8\" r=\"8\" />\r\n        </defs>\r\n        <g id=\"Spotlight/letter\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n            <use id=\"Background\" fill=\"#9BD0B0\" xlinkHref=\"#path-1\" />\r\n            <g id=\"Letter\" transform=\"translate(32.000000, 30.000000)\">\r\n                <path\r\n                    d=\"M4.385,30.26975 C3.693,29.57675 0.418,27.19775 1.111,26.50475 L0,22.99075 L26.227,0.51975 C26.92,-0.17325 28.042,-0.17325 28.736,0.51975 L54.961,22.99075 L49.021,35.84775 C49.712,36.53975 27.301,48.01175 26.609,48.70575 L4.385,30.26975 Z\"\r\n                    id=\"Back\"\r\n                    fill=\"#0C576F\"\r\n                />\r\n                <g transform=\"translate(4.000000, 16.000000)\">\r\n                    <path\r\n                        d=\"M45.7388018,30.9845992 L1.50880182,30.9845992 C1.20380182,30.9845992 0.957801819,30.7355992 0.957801819,30.4345992 L0.957801819,0.606599213 C0.957801819,0.302599213 1.20380182,0.0555992126 1.50880182,0.0555992126 L45.7388018,0.0555992126 C46.0418018,0.0555992126 46.2878018,0.302599213 46.2878018,0.606599213 L46.2878018,30.4345992 C46.2878018,30.7355992 46.0418018,30.9845992 45.7388018,30.9845992\"\r\n                        id=\"Paper\"\r\n                        fill=\"#DCDCD2\"\r\n                    />\r\n                    <g id=\"Checkmark\" transform=\"translate(16.000000, 5.000000)\">\r\n                        <use id=\"Circle\" fill=\"#0C5EA8\" xlinkHref=\"#path-3\" />\r\n                        <path\r\n                            d=\"M6.56203584,9.48462091 L11.2605404,4.94732782 C11.6578208,4.5636786 12.2908893,4.57472885 12.6745385,4.97200925 C13.0581878,5.36928965 13.0471375,6.0023582 12.6498571,6.38600742 L7.19332991,11.6553145 C6.79622485,12.0387944 6.16353973,12.0279231 5.77983986,11.6311589 C5.72674155,11.5893288 5.6771113,11.5414566 5.63194475,11.4876292 L3.56731217,9.02709588 C3.21231038,8.60402121 3.26749434,7.97326562 3.69056901,7.61826382 C4.11364367,7.26326203 4.74439926,7.31844599 5.09940106,7.74152066 L6.56203584,9.48462091 Z\"\r\n                            id=\"Mark\"\r\n                            fill=\"#FFFFFF\"\r\n                        />\r\n                    </g>\r\n                </g>\r\n                <path\r\n                    d=\"M2.21639938,59.6589001 L46.9593994,59.6589001 C48.1063994,59.6589001 0.141399384,23.0289001 0.141399384,23.0289001 L0.141399384,57.5839001 C0.141399384,58.7289001 1.07039938,59.6589001 2.21639938,59.6589001\"\r\n                    id=\"Front-left\"\r\n                    fill=\"#4C92D9\"\r\n                />\r\n                <path\r\n                    d=\"M53.0298,59.6589001 L8.28679997,59.6589001 C7.14079997,59.6589001 55.1048,23.0289001 55.1048,23.0289001 L55.1048,57.5839001 C55.1048,58.7289001 54.1758,59.6589001 53.0298,59.6589001\"\r\n                    id=\"Front-right\"\r\n                    fill=\"#2C79C5\"\r\n                />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default SpotlightLetter;\r\n","const base64ToArrayBuffer = (base64: string) => {\r\n    const binaryString = window.atob(base64);\r\n    const bytes = new Uint8Array(binaryString.length);\r\n    for (let i = 0; i < binaryString.length; i++) {\r\n        bytes[i] = binaryString.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n};\r\n\r\nexport const openPdfPreview = (base64: string) => {\r\n    window.open(\r\n        URL.createObjectURL(\r\n            new Blob([base64ToArrayBuffer(base64)], {\r\n                type: 'application/pdf',\r\n            })\r\n        )\r\n    );\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Person } from 'app/types/Søkerinfo';\r\nimport BEMHelper from 'common/util/bem';\r\nimport Block from 'common/components/block/Block';\r\nimport SpotlightLetter from 'common/components/ikoner/SpotlightLetter';\r\nimport { Sidetittel, Normaltekst } from 'nav-frontend-typografi';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport moment from 'moment';\r\nimport { dateToHours } from 'app/utils/formatDate';\r\n\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { openPdfPreview } from '../util/pdfUtils';\r\n\r\nimport './kvitteringHeader.less';\r\n\r\ninterface Props {\r\n    søker: Person;\r\n    mottattDato: string;\r\n    pdf: string;\r\n}\r\n\r\nconst cls = BEMHelper('kvitteringHeader');\r\n\r\nconst KvitteringHeader: FunctionComponent<Props> = ({ søker, pdf }) => {\r\n    return (\r\n        <div className={cls.block}>\r\n            <Block margin=\"m\">\r\n                <SpotlightLetter className={cls.element('spotlightLetter')} />\r\n            </Block>\r\n\r\n            <Block margin=\"s\">\r\n                <Sidetittel tag=\"h4\">\r\n                    <FormattedMessage\r\n                        id=\"søknadSendt.tittel\"\r\n                        values={{\r\n                            name: `${søker.fornavn} ${søker.etternavn}`,\r\n                        }}\r\n                    />\r\n                </Sidetittel>\r\n            </Block>\r\n\r\n            <Block visible={pdf !== undefined}>\r\n                <Lenke\r\n                    href={'#'}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        openPdfPreview(pdf);\r\n                    }}\r\n                >\r\n                    <FormattedMessage id={'søknadSendt.pdf'} />\r\n                </Lenke>\r\n            </Block>\r\n\r\n            <Block>\r\n                <div className={cls.element('sendtInnTid')}>\r\n                    <Normaltekst>\r\n                        <FormattedMessage id=\"søknadSendt.sendtInn\" />\r\n                    </Normaltekst>\r\n                    <span style={{ width: '0.25rem' }} />\r\n                    {moment().format('Do MMMM YYYY')}, kl. {dateToHours(moment().toDate())}\r\n                </div>\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KvitteringHeader;\r\n","import React from 'react';\r\n\r\nconst CheckmarkIkon = (props: any) => (\r\n    <svg width={24} height={24} {...props}>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                fill=\"#1C6937\"\r\n                d=\"M12 .5C18.34.5 23.5 5.66 23.5 12S18.34 23.5 12 23.5C5.659 23.5.5 18.341.5 12S5.659.5 12 .5z\"\r\n            />\r\n            <path\r\n                fill=\"#FFF\"\r\n                d=\"M16.329 7.76a1 1 0 1 1 1.363 1.464l-7.52 7.007a1 1 0 0 1-1.388-.024L6.28 13.709a1 1 0 0 1 1.413-1.416l1.82 1.817 6.816-6.35z\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default CheckmarkIkon;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport BEMHelper from 'common/util/bem';\r\nimport CheckmarkIkon from 'app/icons/CheckmarkIkon';\r\n\r\nimport './kvitteringSuksess.less';\r\nimport Block from 'common/components/block/Block';\r\n\r\nconst cls = BEMHelper('kvittering');\r\n\r\nconst KvitteringSuksess: FunctionComponent = () => {\r\n    return (\r\n        <div className={cls.block}>\r\n            <div className={cls.element('suksess')}>\r\n                <div className={cls.element('ikon')}>\r\n                    <CheckmarkIkon />\r\n                </div>\r\n                <div className={cls.element('tekst')}>\r\n                    <Block margin=\"xxs\">\r\n                        <Undertittel>\r\n                            <FormattedMessage id=\"søknadSendt.info.tittel\" />\r\n                        </Undertittel>\r\n                    </Block>\r\n                    <div>\r\n                        <FormattedMessage id=\"søknadSendt.info.innhold\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KvitteringSuksess;\r\n","import React from 'react';\r\n\r\nconst HvorLengeIkon = (props: any) => (\r\n    <svg width={180} height={115} {...props}>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                fill=\"#FFF\"\r\n                d=\"M134.561 82.768c0 6.183-5.012 11.195-11.195 11.195h-67.17C50.011 93.963 45 88.951 45 82.768v-54.11h89.561v54.11z\"\r\n            />\r\n            <path\r\n                fill=\"#BA3A26\"\r\n                d=\"M56.195 15.598h67.17c6.184 0 11.196 5.012 11.196 11.195v7.463H45v-7.463c0-6.183 5.012-11.195 11.195-11.195zm55.043 13.06a2.799 2.799 0 100-5.597 2.799 2.799 0 000 5.598zm-42.915 0a2.799 2.799 0 100-5.597 2.799 2.799 0 000 5.598z\"\r\n            />\r\n            <g transform=\"translate(58.061 45.451)\">\r\n                <rect width={63.439} height={3.732} fill=\"#C6C2BF\" rx={1.866} />\r\n                <rect width={13.994} height={3.732} x={49.445} y={11.195} fill=\"#C6C2BF\" rx={1.866} />\r\n                <rect width={30.787} height={3.732} y={11.195} fill=\"#C6C2BF\" rx={1.866} />\r\n                <rect width={63.439} height={3.732} y={22.39} fill=\"#C6C2BF\" rx={1.866} />\r\n                <rect width={63.439} height={3.732} y={33.585} fill=\"#C6C2BF\" rx={1.866} />\r\n                <circle cx={40.116} cy={13.061} r={5.598} fill=\"#FFA733\" />\r\n            </g>\r\n            <path\r\n                fill=\"#FFF\"\r\n                d=\"M106.544 22.875h17.485a17.069 17.069 0 015.252 4.844c5.464 7.716 3.629 18.394-4.102 23.849-7.731 5.454-18.428 3.62-23.893-4.095-5.466-7.717-3.628-18.395 4.102-23.85a17.38 17.38 0 011.156-.748z\"\r\n            />\r\n            <path\r\n                fill=\"#BA3A26\"\r\n                d=\"M130.738 30.188h-30.91a17.041 17.041 0 015.56-6.564 17.101 17.101 0 0111.751-3.038 3.657 3.657 0 005.558 1.579 17.056 17.056 0 016.584 5.554 17.22 17.22 0 011.457 2.468z\"\r\n            />\r\n            <path\r\n                fill=\"#C6C2BF\"\r\n                d=\"M130.83 44.813a16.993 16.993 0 01-3.414 4.874h-24.265a17.23 17.23 0 01-3.414-4.874h31.093z\"\r\n            />\r\n            <path\r\n                fill=\"#B6EDFE\"\r\n                d=\"M129.28 27.719c5.465 7.716 3.63 18.394-4.1 23.849-7.732 5.454-18.43 3.62-23.894-4.095-5.466-7.717-3.628-18.395 4.102-23.85 7.731-5.454 18.428-3.62 23.893 4.096z\"\r\n                opacity={0.612}\r\n            />\r\n            <path\r\n                fill=\"#FFF\"\r\n                d=\"M126.9 46.089a14.519 14.519 0 01-12.678 5.564c-7.993-.663-13.935-7.669-13.271-15.649.662-7.98 7.68-13.913 15.673-13.25a14.47 14.47 0 018.538 3.693 13.396 13.396 0 00-7.111-2.756c-7.401-.613-13.9 4.88-14.513 12.27-.614 7.388 4.888 13.875 12.289 14.489a13.434 13.434 0 0011.073-4.361z\"\r\n                opacity={0.999}\r\n            />\r\n            <path\r\n                fill=\"#C52C35\"\r\n                d=\"M145.635 79.19a3.865 3.865 0 01-5.38-.922l-13.153-18.572a3.848 3.848 0 01.924-5.37 3.864 3.864 0 015.379.922l13.154 18.573a3.849 3.849 0 01-.924 5.37\"\r\n            />\r\n            <path\r\n                fill=\"#2F3238\"\r\n                d=\"M106.628 24.115c-7.149 5.044-8.853 14.955-3.8 22.09s14.982 8.836 22.131 3.792c7.15-5.044 8.854-14.955 3.8-22.09-5.052-7.135-14.981-8.837-22.13-3.792m19.815 27.98c-8.307 5.86-19.844 3.885-25.718-4.408-5.872-8.292-3.89-19.807 4.418-25.67 8.307-5.861 19.844-3.885 25.718 4.407 5.872 8.293 3.89 19.808-4.418 25.67\"\r\n            />\r\n            <path\r\n                fill=\"#2F3238\"\r\n                d=\"M130.284 57.515c-1.16.819-2.413 1.042-3.235-.117l-2.742-3.873a2.565 2.565 0 01.616-3.58 2.576 2.576 0 013.586.615l2.743 3.873c.82 1.159.192 2.264-.968 3.082\"\r\n            />\r\n            <path\r\n                fill=\"#D94C56\"\r\n                d=\"M128.639 60.23l12.414 17.527a1.286 1.286 0 002.1-1.482l-11.88-16.774c-.985.668-1.913.846-2.634.728\"\r\n            />\r\n            <path\r\n                fill=\"#E7E6E2\"\r\n                d=\"M156.682 66.828c1.32 0 2.389.93 2.389 2.079v22.108c0 1.148-1.068 2.079-2.389 2.079-1.318 0-2.386-.93-2.386-2.079V68.907c0-1.148 1.068-2.079 2.386-2.079m-5.242-3.583a2.384 2.384 0 012.388 2.383v28.666a2.384 2.384 0 01-2.387 2.383 2.385 2.385 0 01-2.389-2.383V65.628a2.384 2.384 0 012.389-2.383m-5.245-4.045a2.388 2.388 0 012.39 2.383v34.358a2.385 2.385 0 01-2.39 2.382 2.384 2.384 0 01-2.387-2.382V61.583a2.387 2.387 0 012.387-2.384m-5.244-3.559a2.387 2.387 0 012.389 2.384v22.924a2.386 2.386 0 01-2.389 2.384 2.386 2.386 0 01-2.388-2.384V58.024a2.387 2.387 0 012.388-2.384\"\r\n            />\r\n            <path\r\n                fill=\"#E7E6E2\"\r\n                d=\"M156.367 97.271v-2.96c0-.81 1.414-1.486 1.414-1.486l-2.942-23.78h-13.886l-2.39 7.809s-.584.179-1.169-.718c-.584-.9-2.338-5.117-2.338-5.117s-2.337-4.979-4.497-4.082c-2.156.896-1.168 4.172-1.168 4.172s1.1 5.165 1.71 7.628c.769 3.115 2.562 6.283 4.046 8.62 1.482 2.33 4.315 5.737 5.305 5.737l.226 4.177h15.689z\"\r\n            />\r\n            <path fill=\"#561D5B\" d=\"M137.96 114.586h21.248V97.27h-21.247z\" />\r\n            <path fill=\"#7C7086\" d=\"M137.96 103.676h21.248V97.27h-21.247z\" />\r\n            <path fill=\"#2F3237\" d=\"M156.993 100.52a1.349 1.349 0 00-2.697 0 1.35 1.35 0 002.697 0\" />\r\n            <g>\r\n                <path\r\n                    fill=\"#E7E6E2\"\r\n                    d=\"M23.631 51.521a2.474 2.474 0 00-2.476 2.472v35.645a2.475 2.475 0 104.95 0V53.993a2.474 2.474 0 00-2.474-2.472m5.432-3.068a2.473 2.473 0 00-2.475 2.471v35.641a2.474 2.474 0 002.475 2.473 2.474 2.474 0 002.476-2.473v-35.64a2.473 2.473 0 00-2.476-2.472m5.436-2.235a2.477 2.477 0 00-2.477 2.474v35.643a2.474 2.474 0 002.477 2.472 2.473 2.473 0 002.475-2.472V48.692a2.476 2.476 0 00-2.475-2.474m5.434 2.92a2.476 2.476 0 00-2.475 2.474v25.75a2.474 2.474 0 002.475 2.473 2.474 2.474 0 002.476-2.473v-25.75a2.476 2.476 0 00-2.476-2.474\"\r\n                />\r\n                <path\r\n                    fill=\"#E7E6E2\"\r\n                    d=\"M23.957 96.444v-3.072c0-.84-1.464-1.54-1.464-1.54L25.54 67.16h14.393l2.475 8.1s.606.186 1.213-.743c.605-.933 2.424-5.31 2.424-5.31s2.42-5.165 4.66-4.235c2.233.93 1.209 4.328 1.209 4.328s-1.14 5.36-1.772 7.914c-.796 3.232-2.655 6.52-4.192 8.943-1.537 2.419-4.473 5.952-5.498 5.952l-.235 4.334h-16.26z\"\r\n                />\r\n                <path fill=\"#561D5B\" d=\"M21.013 114.406h22.021V96.444H21.013z\" />\r\n                <path fill=\"#7C7086\" d=\"M21.013 103.087h22.021v-6.643H21.013z\" />\r\n                <path fill=\"#38363A\" d=\"M23.309 99.815a1.399 1.399 0 112.797.002 1.399 1.399 0 01-2.797-.002\" />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default HvorLengeIkon;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getData } from 'app/utils/fromFetchState';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\nimport { Søkerinfo } from 'app/types/Søkerinfo';\r\nimport { State } from 'app/redux/store';\r\nimport Applikasjonsside from '../applikasjonsside/Applikasjonsside';\r\nimport Block from 'common/components/block/Block';\r\nimport FetchState from 'app/types/FetchState';\r\nimport Kvittering from 'app/types/Kvittering';\r\nimport Panel from 'nav-frontend-paneler';\r\nimport './søknadSendt.less';\r\nimport StatusBoks from './components/StatusBoks';\r\nimport KvitteringHeader from './components/KvitteringHeader';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport KvitteringSuksess from './components/KvitteringSuksess';\r\nimport BEMHelper from 'common/util/bem';\r\nimport HvorLengeIkon from 'app/icons/HvorLenge';\r\n\r\nconst cls = BEMHelper('søknadSendt');\r\n\r\ninterface Props {\r\n    kvittering: FetchState<Kvittering>;\r\n    søkerinfo: FetchState<Søkerinfo>;\r\n}\r\n\r\nconst SøknadSendt: FunctionComponent<Props> = ({ kvittering, søkerinfo }) => {\r\n    const { mottattDato, pdf, saksNr } = getData(kvittering, {});\r\n    const { søker } = getData(søkerinfo, {});\r\n\r\n    return (\r\n        <Applikasjonsside visTittel={true}>\r\n            <div className={cls.block}>\r\n                <KvitteringHeader søker={søker} mottattDato={mottattDato} pdf={pdf} />\r\n\r\n                <KvitteringSuksess />\r\n\r\n                <StatusBoks saksNr={saksNr} />\r\n\r\n                <Block>\r\n                    <Undertittel className={cls.element('tittel')}>\r\n                        <FormattedMessage id=\"søknadSendt.foreldrepenger\" />\r\n                    </Undertittel>\r\n                </Block>\r\n\r\n                <Block>\r\n                    <Panel className={cls.element('foreldrepengerPanel')}>\r\n                        <div>\r\n                            <Block margin=\"xxs\">\r\n                                <Undertittel>\r\n                                    <FormattedMessage id=\"søknadSendt.foreldrepenger.boks.tittel\" />\r\n                                </Undertittel>\r\n                            </Block>\r\n                            <Block margin=\"xs\">\r\n                                <FormattedMessage id=\"søknadSendt.foreldrepenger.boks.innhold\" />\r\n                            </Block>\r\n                        </div>\r\n                        <div className={cls.element('ikon')}>\r\n                            <HvorLengeIkon />\r\n                        </div>\r\n                    </Panel>\r\n                </Block>\r\n            </div>\r\n        </Applikasjonsside>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    søkerinfo: state.api.søkerinfo,\r\n    kvittering: state.api.kvittering,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SøknadSendt);\r\n","import React, { FunctionComponent } from 'react';\r\nimport { CustomFormikProps } from 'app/types/Formik';\r\nimport { getSøknadStepPath } from 'app/utils/stepUtils';\r\nimport { useIntl } from 'react-intl';\r\nimport Applikasjonsside from '../applikasjonsside/Applikasjonsside';\r\nimport Block from 'common/components/block/Block';\r\nimport DatoInput from 'app/formik/wrappers/DatoInput';\r\nimport FormikStep from 'app/components/formik-step/FormikStep';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport JaNeiSpørsmål from 'app/formik/wrappers/JaNeiSpørsmål';\r\nimport SøknadStep, { StepID } from 'app/types/SøknadStep';\r\nimport {\r\n    dateToISOFormattedDateString,\r\n    etÅrSiden,\r\n    niMånederFremITid,\r\n    tiMånederSiden,\r\n} from '../../../common/util/datoUtils';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface OwnProps {\r\n    step: SøknadStep;\r\n    formikProps: CustomFormikProps;\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\nconst Termin: FunctionComponent<Props> = (props) => {\r\n    const { step, formikProps } = props;\r\n    const { values } = formikProps;\r\n\r\n    const intl = useIntl();\r\n\r\n    const navigateTo = useNavigate();\r\n\r\n    const navigate = () => {\r\n        navigateTo(getSøknadStepPath(StepID.ARBEIDSFORHOLD));\r\n    };\r\n\r\n    const showNesteknapp = values.barn.erBarnetFødt === false || values.barn.fødselsdato !== undefined;\r\n\r\n    return (\r\n        <Applikasjonsside visTittel={true} visSpråkvelger={true}>\r\n            <FormikStep\r\n                step={step}\r\n                showNesteknapp={showNesteknapp}\r\n                formikProps={formikProps}\r\n                onValidFormSubmit={navigate}\r\n            >\r\n                <Block>\r\n                    <DatoInput\r\n                        name=\"barn.termindato\"\r\n                        label={getMessage(intl, 'termin.termindato')}\r\n                        datoAvgrensinger={{\r\n                            minDato: etÅrSiden(new Date()),\r\n                            maksDato: niMånederFremITid(new Date()),\r\n                        }}\r\n                    />\r\n                </Block>\r\n                <Block visible={values.barn.termindato !== undefined}>\r\n                    <JaNeiSpørsmål name=\"barn.erBarnetFødt\" legend={getMessage(intl, 'termin.erBarnetFødt')} />\r\n                </Block>\r\n                <Block visible={values.barn.erBarnetFødt === true}>\r\n                    <DatoInput\r\n                        name=\"barn.fødselsdato\"\r\n                        label={getMessage(intl, 'termin.fødselsdato')}\r\n                        datoAvgrensinger={{\r\n                            minDato: tiMånederSiden(values.barn.termindato!),\r\n                            maksDato: dateToISOFormattedDateString(new Date()),\r\n                        }}\r\n                    />\r\n                </Block>\r\n            </FormikStep>\r\n        </Applikasjonsside>\r\n    );\r\n};\r\n\r\nexport default Termin;\r\n","import React from 'react';\r\nimport Block from 'common/components/block/Block';\r\nimport InputField from 'app/formik/wrappers/InputField';\r\nimport DatoInput from 'app/formik/wrappers/DatoInput';\r\nimport { Avgrensninger } from 'common/types';\r\nimport BEMHelper from 'common/util/bem';\r\nimport SlettKnapp from 'common/components/slett-knapp/SlettKnapp';\r\nimport './addTilrettelegging.less';\r\nimport { useIntl } from 'react-intl';\r\nimport getMessage from 'common/util/i18nUtils';\r\n\r\ninterface Props {\r\n    showDeleteButton: boolean;\r\n    datoInputName: string;\r\n    datoLabel: string;\r\n    prosentInputName?: string;\r\n    prosentLabel?: string;\r\n    datoAvgrensninger: Avgrensninger;\r\n    delvisTilrettelegging: boolean;\r\n    onDelete: () => void;\r\n}\r\n\r\nconst AddTilrettelegging: React.FunctionComponent<Props> = ({\r\n    onDelete,\r\n    showDeleteButton,\r\n    datoAvgrensninger,\r\n    datoInputName,\r\n    datoLabel,\r\n    prosentInputName,\r\n    prosentLabel,\r\n    delvisTilrettelegging,\r\n}) => {\r\n    const intl = useIntl();\r\n    const cls = BEMHelper('addTilrettelegging');\r\n\r\n    return (\r\n        <Block margin=\"xs\">\r\n            <div className={cls.block}>\r\n                <div className={cls.element('datoWrapper')}>\r\n                    <DatoInput name={datoInputName} label={datoLabel} datoAvgrensinger={datoAvgrensninger} />\r\n                </div>\r\n                {delvisTilrettelegging && (\r\n                    <div className={cls.element('prosentWrapper')}>\r\n                        <InputField\r\n                            type=\"number\"\r\n                            bredde=\"XS\"\r\n                            max={100}\r\n                            min={0}\r\n                            step={0.01}\r\n                            placeholder=\"0\"\r\n                            name={prosentInputName!}\r\n                            label={prosentLabel!}\r\n                        />\r\n                    </div>\r\n                )}\r\n                <div className={cls.element('deleteWrapper')}>\r\n                    {showDeleteButton && (\r\n                        <SlettKnapp onClick={onDelete} ariaLabel={getMessage(intl, 'tilrettelegging.fjernPeriode')} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default AddTilrettelegging;\r\n","import React from 'react';\r\n\r\nexport type StatusIkonStatusKey = 'suksess' | 'advarsel' | 'feil';\r\n\r\nexport interface Props {\r\n    status: StatusIkonStatusKey;\r\n    title?: string;\r\n    size?: number;\r\n}\r\n\r\nconst FeilSirkelFyll: React.FunctionComponent<Props> = (props) => {\r\n    return (\r\n        <svg role=\"presentation\" focusable=\"false\" viewBox=\"0 0 24 24\" width={props.size} height={props.size}>\r\n            <g fill=\"none\" fillRule=\"evenodd\">\r\n                <path\r\n                    d=\"M11.999 0C5.395 0 .013 5.372 0 11.976a11.923 11.923 0 0 0 3.498 8.493A11.925 11.925 0 0 0 11.977 24H12c6.603 0 11.986-5.373 12-11.978C24.013 5.406 18.64.012 11.999 0z\"\r\n                    fillRule=\"nonzero\"\r\n                    fill=\"#A13A28\"\r\n                />\r\n                <path\r\n                    d=\"M12 10.651l3.372-3.372a.954.954 0 1 1 1.349 1.35L13.349 12l3.372 3.372a.954.954 0 1 1-1.35 1.349L12 13.349 8.628 16.72a.954.954 0 1 1-1.349-1.35L10.651 12 7.28 8.628A.954.954 0 1 1 8.63 7.28L12 10.651z\"\r\n                    fill=\"#FFF\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nconst InfoSirkelFyll: React.FunctionComponent<Props> = (props) => {\r\n    return (\r\n        <svg role=\"presentation\" focusable=\"false\" viewBox=\"0 0 24 24\" width={props.size} height={props.size}>\r\n            {props.title && <title>{props.title}</title>}\r\n            <g fill=\"none\" fillRule=\"evenodd\">\r\n                <path\r\n                    d=\"M12.205-.004l-.214.002a12.225 12.225 0 0 0-8.517 3.659C1.179 5.977-.053 9.013.002 12.208c.115 6.613 5.296 11.793 11.795 11.793l.212-.002c6.726-.116 12.105-5.595 11.99-12.21C23.883 5.178 18.702-.003 12.204-.003z\"\r\n                    fill=\"#FFA733\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n                <path d=\"M12.027 19H12A1.499 1.499 0 0 1 11.973 16L12 16a1.501 1.501 0 0 1 .027 3z\" fill=\"#3E3832\" />\r\n                <path d=\"M12 5a1 1 0 0 1 1 1v7a1 1 0 0 1-2 0V6a1 1 0 0 1 1-1z\" fill=\"#3E3832\" fillRule=\"nonzero\" />\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nconst OkSirkelFyll: React.FunctionComponent<Props> = (props) => {\r\n    return (\r\n        <svg role=\"presentation\" focusable=\"false\" viewBox=\"0 0 24 24\" width={props.size} height={props.size}>\r\n            <g fillRule=\"nonzero\" fill=\"none\">\r\n                <path\r\n                    d=\"M12 0C5.383 0 0 5.384 0 12s5.383 12 12 12c6.616 0 12-5.384 12-12S18.616 0 12 0z\"\r\n                    fill=\"#1C6937\"\r\n                />\r\n                <path\r\n                    d=\"M9.64 14.441l6.46-5.839a.997.997 0 0 1 1.376.044.923.923 0 0 1-.046 1.334l-7.15 6.464a.993.993 0 0 1-.662.252.992.992 0 0 1-.69-.276l-2.382-2.308a.923.923 0 0 1 0-1.334.997.997 0 0 1 1.377 0l1.717 1.663z\"\r\n                    fill=\"#FFF\"\r\n                />\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nconst StatusIkon = (props: Props) => {\r\n    const { size = 24 } = props;\r\n    switch (props.status) {\r\n        case 'suksess':\r\n            return <OkSirkelFyll {...props} size={size} />;\r\n        case 'feil':\r\n            return <FeilSirkelFyll {...props} size={size} />;\r\n        case 'advarsel':\r\n            return <InfoSirkelFyll {...props} size={size} />;\r\n    }\r\n};\r\n\r\nexport default StatusIkon;\r\n","import React from 'react';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport BEMHelper from 'common/util/bem';\r\nimport StatusIkon, { StatusIkonStatusKey } from 'app/icons/StatusIkon';\r\n\r\ninterface Props {\r\n    image: React.ReactNode;\r\n    status: StatusIkonStatusKey;\r\n    statusText: string;\r\n    description: string;\r\n}\r\n\r\nconst bem = BEMHelper('pictureScanningGuide').child('example');\r\n\r\nconst PictureScanningExample: React.FunctionComponent<Props> = ({ image, status, statusText, description }) => (\r\n    <div className={bem.block}>\r\n        <div className={bem.element('image')}>{image}</div>\r\n        <Element tag=\"div\" className={bem.element('title')}>\r\n            <span className={bem.element('statusIcon')} role=\"presentation\">\r\n                <StatusIkon status={status} />\r\n            </span>\r\n            {statusText}\r\n        </Element>\r\n        <div className={bem.element('description')}>{description}</div>\r\n    </div>\r\n);\r\n\r\nexport default PictureScanningExample;\r\n","import React from 'react';\r\n\r\ninterface ScanProps {\r\n    title?: string;\r\n    height?: number;\r\n}\r\n\r\ntype ScanIconStatusKey = 'good' | 'keystone' | 'horizontal' | 'shadow';\r\n\r\nexport interface Props extends ScanProps {\r\n    status: ScanIconStatusKey;\r\n}\r\n\r\nconst GoodScanning: React.FunctionComponent<ScanProps> = ({ title, height }) => {\r\n    return (\r\n        <svg role=\"presentation\" focusable=\"false\" viewBox=\"0 0 83 121\" height={height}>\r\n            {title && <title>{title}</title>}\r\n            <defs>\r\n                <filter\r\n                    x=\"-10.6%\"\r\n                    y=\"-5.4%\"\r\n                    width=\"121.2%\"\r\n                    height=\"115.1%\"\r\n                    filterUnits=\"objectBoundingBox\"\r\n                    id=\"good_1__a\"\r\n                >\r\n                    <feOffset dy={2} in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\r\n                    <feGaussianBlur stdDeviation={2} in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\r\n                    <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\" in=\"shadowBlurOuter1\" />\r\n                </filter>\r\n                <path id=\"good_1__b\" d=\"M8 11h66v93H8z\" />\r\n            </defs>\r\n            <g fill=\"none\" fillRule=\"evenodd\">\r\n                <path d=\"M1 1h81v119H1z\" fill=\"#BABABA\" stroke=\"#000\" strokeOpacity={0.85} strokeWidth={2} />\r\n                <use fill=\"#000\" filter=\"url(#good_1__a)\" xlinkHref=\"#good_1__b\" />\r\n                <use fill=\"#FFF\" xlinkHref=\"#good_1__b\" />\r\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\r\n                    <path d=\"M15.5 30.5h53M15.5 44.5h50M15.5 23.5h45M15.5 37.5h43\" />\r\n                </g>\r\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\r\n                    <path d=\"M15.5 77.5h41M15.5 63.5h50M15.5 84.5h45M15.5 70.5h43\" />\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\nconst KeystoneScanning: React.FunctionComponent<ScanProps> = ({ title, height }) => {\r\n    return (\r\n        <svg role=\"presentation\" focusable=\"false\" viewBox=\"0 0 83 121\" height={height}>\r\n            {title && <title>{title}</title>}\r\n            <desc>Bildet er ikke tatt ovenfra</desc>\r\n            <defs>\r\n                <filter\r\n                    x=\"-9.7%\"\r\n                    y=\"-7.2%\"\r\n                    width=\"119.4%\"\r\n                    height=\"120.3%\"\r\n                    filterUnits=\"objectBoundingBox\"\r\n                    id=\"keystone_2__a\"\r\n                >\r\n                    <feOffset dy={2} in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\r\n                    <feGaussianBlur stdDeviation={2} in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\r\n                    <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\" in=\"shadowBlurOuter1\" />\r\n                </filter>\r\n                <path id=\"keystone_2__b\" d=\"M16.528 20h49.06L78 89H6z\" />\r\n            </defs>\r\n            <g fill=\"none\" fillRule=\"evenodd\">\r\n                <path d=\"M1 1h81v119H1z\" fill=\"#BABABA\" stroke=\"#000\" strokeOpacity={0.85} strokeWidth={2} />\r\n                <use fill=\"#000\" filter=\"url(#keystone_2__a)\" xlinkHref=\"#keystone_2__b\" />\r\n                <use fill=\"#FFF\" xlinkHref=\"#keystone_2__b\" />\r\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\r\n                    <path d=\"M20 41.5h37M21 35.5h39M22 29.5h36M19 47.5h43\" />\r\n                </g>\r\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\r\n                    <path d=\"M15 70.5h48M16 64.5h45M17 58.5h38M14 76.5h45\" />\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\nconst HorizontalScanning: React.FunctionComponent<ScanProps> = ({ title, height }) => {\r\n    return (\r\n        <svg role=\"presentation\" focusable=\"false\" viewBox=\"0 0 83 121\" height={height}>\r\n            {title && <title>{title}</title>}\r\n            <desc>Bildet har ikke riktig retning</desc>\r\n            <defs>\r\n                <filter\r\n                    x=\"-10.6%\"\r\n                    y=\"-11.1%\"\r\n                    width=\"121.2%\"\r\n                    height=\"131.1%\"\r\n                    filterUnits=\"objectBoundingBox\"\r\n                    id=\"horizontal_3__a\"\r\n                >\r\n                    <feOffset dy={2} in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\r\n                    <feGaussianBlur stdDeviation={2} in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\r\n                    <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\" in=\"shadowBlurOuter1\" />\r\n                </filter>\r\n                <path id=\"horizontal_3__b\" d=\"M8 36h66v45H8z\" />\r\n            </defs>\r\n            <g fill=\"none\" fillRule=\"evenodd\">\r\n                <path d=\"M1 1h81v119H1z\" fill=\"#BABABA\" stroke=\"#000\" strokeOpacity={0.85} strokeWidth={2} />\r\n                <use fill=\"#000\" filter=\"url(#horizontal_3__a)\" xlinkHref=\"#horizontal_3__b\" />\r\n                <use fill=\"#FFF\" xlinkHref=\"#horizontal_3__b\" />\r\n                <path\r\n                    stroke=\"#B7B4B4\"\r\n                    strokeWidth={2}\r\n                    strokeLinecap=\"square\"\r\n                    d=\"M35 44v28M30 44v22M25 44v19M20 44v24M52 44v24M57 44v30M47 44v27M62 44v26\"\r\n                />\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\nconst ShadowScanning: React.FunctionComponent<ScanProps> = ({ title, height }) => {\r\n    return (\r\n        <svg role=\"presentation\" focusable=\"false\" viewBox=\"0 0 83 121\" height={height}>\r\n            {title && <title>{title}</title>}\r\n            <desc>Bildet har har skygge oppå legeerklæring</desc>\r\n            <defs>\r\n                <filter\r\n                    x=\"-10%\"\r\n                    y=\"-5.2%\"\r\n                    width=\"120%\"\r\n                    height=\"114.6%\"\r\n                    filterUnits=\"objectBoundingBox\"\r\n                    id=\"shadow_4__a\"\r\n                >\r\n                    <feOffset dy={2} in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\r\n                    <feGaussianBlur stdDeviation={2} in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\r\n                    <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\" in=\"shadowBlurOuter1\" />\r\n                </filter>\r\n                <path id=\"shadow_4__b\" d=\"M6 12h70v96H6z\" />\r\n            </defs>\r\n            <g fill=\"none\" fillRule=\"evenodd\">\r\n                <path strokeOpacity={0.85} stroke=\"#000\" strokeWidth={2} fill=\"#BABABA\" d=\"M1 1h81v119H1z\" />\r\n                <g transform=\"translate(1 1)\">\r\n                    <use fill=\"#000\" filter=\"url(#shadow_4__a)\" xlinkHref=\"#shadow_4__b\" />\r\n                    <use fill=\"#FFF\" xlinkHref=\"#shadow_4__b\" />\r\n                </g>\r\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\r\n                    <path d=\"M15.5 30.5h53M15.5 44.5h50M15.5 23.5h45M15.5 37.5h43\" />\r\n                </g>\r\n                <g stroke=\"#B7B4B4\" strokeLinecap=\"square\" strokeWidth={2}>\r\n                    <path d=\"M15.5 77.5h41M15.5 63.5h50M15.5 84.5h45M15.5 70.5h43\" />\r\n                </g>\r\n                <path\r\n                    d=\"M53.57 120C65.186 86.185 63.996 65.163 50 56.935 29.004 44.593 1 69.565 1 90v30h52.57z\"\r\n                    fillOpacity={0.3}\r\n                    fill=\"#7C7C7C\"\r\n                />\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\nconst ScanningIkon = (props: Props) => {\r\n    const { height = 100, title } = props;\r\n    switch (props.status) {\r\n        case 'good':\r\n            return <GoodScanning title={title} height={height} />;\r\n        case 'keystone':\r\n            return <KeystoneScanning title={title} height={height} />;\r\n        case 'horizontal':\r\n            return <HorizontalScanning title={title} height={height} />;\r\n        case 'shadow':\r\n            return <ShadowScanning title={title} height={height} />;\r\n        default:\r\n            return <GoodScanning title={title} height={height} />;\r\n    }\r\n};\r\n\r\nexport default ScanningIkon;\r\n","import * as React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { Systemtittel, Undertittel } from 'nav-frontend-typografi';\r\nimport BEMHelper from 'common/util/bem';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport PictureScanningExample from './PictureScanningExample';\r\nimport './pictureScanningGuide.less';\r\nimport ScanningIkon from 'app/icons/ScanningIkon';\r\nconst bem = BEMHelper('pictureScanningGuide');\r\nconst PictureScanningGuide = () => {\r\n    const svgIconHeight = 100;\r\n    const intl = useIntl();\r\n    return (\r\n        <div className={bem.block}>\r\n            <Systemtittel className={bem.element('title')}>\r\n                <FormattedMessage id=\"psg.innholdstittel\" />\r\n            </Systemtittel>\r\n            <Undertittel className={bem.element('title')}>\r\n                <FormattedMessage id=\"psg.section1.tittel\" />\r\n            </Undertittel>\r\n            <ul>\r\n                <FormattedMessage tagName=\"li\" id=\"psg.section1.liste.punkt1\" />\r\n                <FormattedMessage\r\n                    tagName=\"li\"\r\n                    id=\"psg.section1.liste.punkt2\"\r\n                    values={{ i: (msg: any) => <i>{msg}</i> }}\r\n                />\r\n                <FormattedMessage tagName=\"li\" id=\"psg.section1.liste.punkt3\" />\r\n            </ul>\r\n            <Undertittel className={bem.element('title')}>\r\n                <FormattedMessage id=\"psg.section2.tittel\" />\r\n            </Undertittel>\r\n            <ul>\r\n                <FormattedMessage tagName=\"li\" id=\"psg.section2.liste.punkt1\" />\r\n                <FormattedMessage tagName=\"li\" id=\"psg.section2.liste.punkt2\" />\r\n                <FormattedMessage tagName=\"li\" id=\"psg.section2.liste.punkt3\" />\r\n            </ul>\r\n            <div className={bem.element('examples')}>\r\n                <Undertittel tag=\"h3\" className={bem.element('title')}>\r\n                    <FormattedMessage id=\"psg.icon.heading\" />\r\n                </Undertittel>\r\n                <div className={bem.element('body')}>\r\n                    <div className={bem.element('cell')}>\r\n                        <PictureScanningExample\r\n                            image={<ScanningIkon status=\"good\" height={svgIconHeight} />}\r\n                            status=\"suksess\"\r\n                            statusText={getMessage(intl, 'psg.good')}\r\n                            description={getMessage(intl, 'psg.icon.label.good')}\r\n                        />\r\n                    </div>\r\n                    <div className={bem.element('cell')}>\r\n                        <PictureScanningExample\r\n                            image={<ScanningIkon status=\"keystone\" height={svgIconHeight} />}\r\n                            status=\"feil\"\r\n                            statusText={getMessage(intl, 'psg.bad')}\r\n                            description={getMessage(intl, 'psg.icon.label.keystone')}\r\n                        />\r\n                    </div>\r\n                    <div className={bem.element('cell')}>\r\n                        <PictureScanningExample\r\n                            image={<ScanningIkon status=\"horizontal\" height={svgIconHeight} />}\r\n                            status=\"feil\"\r\n                            statusText={getMessage(intl, 'psg.bad')}\r\n                            description={getMessage(intl, 'psg.icon.label.horizontal')}\r\n                        />\r\n                    </div>\r\n                    <div className={bem.element('cell')}>\r\n                        <PictureScanningExample\r\n                            image={<ScanningIkon status=\"shadow\" height={svgIconHeight} />}\r\n                            status=\"feil\"\r\n                            statusText={getMessage(intl, 'psg.bad')}\r\n                            description={getMessage(intl, 'psg.icon.label.shadow')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Lenke target=\"_blank\" href={getMessage(intl, 'psg.lenkepanel.url')}>\r\n                    <FormattedMessage id=\"psg.lenkepanel.text\" />\r\n                </Lenke>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default PictureScanningGuide;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { get } from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { FieldArray, FieldArrayRenderProps } from 'formik';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Attachment } from 'common/storage/attachment/types/Attachment';\r\nimport { AttachmentActionTypes } from 'app/redux/types/AttachmentAction';\r\nimport { AttachmentType } from 'common/storage/attachment/types/AttachmentType';\r\nimport { CustomFormikProps } from 'app/types/Formik';\r\nimport { FetchStatus } from 'app/types/FetchState';\r\nimport { finnArbeidsforholdNavn, getSøknadStepPath, getAllSteps, getAdjacentSteps } from 'app/utils/stepUtils';\r\nimport { Skjemanummer } from 'app/types/Skjemanummer';\r\nimport { State } from 'app/redux/store';\r\nimport { StepProps } from 'app/components/step/Step';\r\nimport { Arbeidsforholdstype, Tilretteleggingstype, UferdigTilrettelegging } from 'app/types/Tilrettelegging';\r\nimport Action from 'app/redux/types/Action';\r\nimport Applikasjonsside from '../applikasjonsside/Applikasjonsside';\r\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\r\nimport AttachmentOverview from 'common/storage/attachment/components/AttachmentOverview';\r\nimport Block from 'common/components/block/Block';\r\nimport DatoInput from 'app/formik/wrappers/DatoInput';\r\nimport FormikStep from 'app/components/formik-step/FormikStep';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport SøknadStep from 'app/types/SøknadStep';\r\nimport Veilederinfo from 'common/components/veileder-info/Veilederinfo';\r\nimport CheckboksPanelGruppe from '../../formik/wrappers/CheckboksPanelGruppe';\r\nimport InfoBlock from 'common/components/info-block/InfoBlock';\r\nimport Textarea from '../../formik/wrappers/Textarea';\r\nimport LabelMedInfobox from 'common/components/label-med-infobox/LabelMedInfobox';\r\nimport { isAttachmentWithError } from 'common/storage/attachment/components/util';\r\nimport { Knapp } from 'nav-frontend-knapper';\r\nimport AddTilrettelegging from './components/AddTilrettelegging';\r\nimport PictureScanningGuide from 'app/components/picture-scanning-guide/PictureScanningGuide';\r\nimport UtvidetInformasjon from 'app/components/utvidet-informasjon/UtvidetInformasjon';\r\nimport { tiMånederSiden, treUkerSiden, dagenFør } from '../../../common/util/datoUtils';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface OwnProps {\r\n    id: string;\r\n    step: SøknadStep;\r\n    formikProps: CustomFormikProps;\r\n}\r\n\r\ninterface StateProps {\r\n    arbeidsforhold: Arbeidsforhold[];\r\n    vedlegg: Attachment[];\r\n    uploadAttachment: (attachment: Attachment, id: string) => void;\r\n    deleteAttachment: (attachment: Attachment, id: string) => void;\r\n}\r\n\r\ntype Props = OwnProps & StateProps & StepProps;\r\n\r\nconst initialValuesForTilrettelegginger = (tilrettelegging: UferdigTilrettelegging): UferdigTilrettelegging => {\r\n    if (tilrettelegging.ingenTilrettelegging === undefined) {\r\n        tilrettelegging.ingenTilrettelegging = [\r\n            {\r\n                slutteArbeidFom: undefined as any,\r\n            },\r\n        ];\r\n    }\r\n    if (tilrettelegging.delvisTilrettelegging === undefined) {\r\n        tilrettelegging.delvisTilrettelegging = [\r\n            {\r\n                stillingsprosent: undefined as any,\r\n                tilrettelagtArbeidFom: undefined as any,\r\n            },\r\n        ];\r\n    }\r\n    if (tilrettelegging.helTilrettelegging === undefined) {\r\n        tilrettelegging.helTilrettelegging = [\r\n            {\r\n                tilrettelagtArbeidFom: undefined as any,\r\n            },\r\n        ];\r\n    }\r\n    return tilrettelegging;\r\n};\r\n\r\nconst Tilrettelegging: FunctionComponent<Props> = (props) => {\r\n    const intl = useIntl();\r\n    const { id, step, formikProps, arbeidsforhold, vedlegg, uploadAttachment, deleteAttachment } = props;\r\n\r\n    const { values, setFieldValue } = formikProps;\r\n\r\n    const index = values.tilrettelegging.findIndex((t: any) => t.id === id);\r\n    const tilrettelegging = values.tilrettelegging[index];\r\n    const arbeidsgiversNavn = finnArbeidsforholdNavn(id, arbeidsforhold);\r\n    const attachments = vedlegg.filter((v: Attachment) => tilrettelegging.vedlegg.includes(v.id));\r\n\r\n    const erFrilans = tilrettelegging.arbeidsforhold.type === Arbeidsforholdstype.FRILANSER;\r\n    const erSelvstendig = tilrettelegging.arbeidsforhold.type === Arbeidsforholdstype.SELVSTENDIG;\r\n    const erFrilansEllerSelvstendig = erFrilans || erSelvstendig;\r\n\r\n    const getInputName = (name: string) => `tilrettelegging.${index}.${name}`;\r\n    const tilretteleggingstypeName = getInputName('type');\r\n    const valgteTilretteleggingstyper = get(values, tilretteleggingstypeName) || [];\r\n    const { ingenTilrettelegging, delvisTilrettelegging, helTilrettelegging } = initialValuesForTilrettelegginger(\r\n        values.tilrettelegging[index]\r\n    );\r\n\r\n    const frilansRisikoErOk = erFrilansEllerSelvstendig\r\n        ? tilrettelegging.risikoFaktorer !== undefined && tilrettelegging.risikoFaktorer.length > 3\r\n        : true;\r\n    const visFrilansEllerSelvstendig = erFrilansEllerSelvstendig;\r\n    const visVedlegg = visFrilansEllerSelvstendig ? frilansRisikoErOk : true;\r\n    const visDel1 = frilansRisikoErOk && attachments.length > 0;\r\n    const visDel2 = visDel1 === true && !!tilrettelegging.behovForTilretteleggingFom;\r\n    const visIngenTilrettelegging = visDel2 && valgteTilretteleggingstyper.includes(Tilretteleggingstype.INGEN);\r\n    const visDelvisTilrettelegging = visDel2 && valgteTilretteleggingstyper.includes(Tilretteleggingstype.DELVIS);\r\n    const visHelTilrettelegging = visDel2 && valgteTilretteleggingstyper.includes(Tilretteleggingstype.HEL);\r\n    const del1OgDel2ErOk =\r\n        visDel2 &&\r\n        valgteTilretteleggingstyper.length > 0 &&\r\n        (visIngenTilrettelegging\r\n            ? ingenTilrettelegging !== undefined && ingenTilrettelegging[0].slutteArbeidFom !== undefined\r\n            : true) &&\r\n        (visDelvisTilrettelegging\r\n            ? delvisTilrettelegging !== undefined &&\r\n              !isNaN(delvisTilrettelegging[0].stillingsprosent) &&\r\n              delvisTilrettelegging[0].tilrettelagtArbeidFom !== undefined\r\n            : true) &&\r\n        (visHelTilrettelegging\r\n            ? helTilrettelegging !== undefined && helTilrettelegging[0].tilrettelagtArbeidFom !== undefined\r\n            : true);\r\n    const visTiltakForTilrettelegging = del1OgDel2ErOk && visFrilansEllerSelvstendig;\r\n    const tilretteleggingstiltakErOk = erFrilansEllerSelvstendig\r\n        ? tilrettelegging.tilretteleggingstiltak !== undefined && tilrettelegging.tilretteleggingstiltak.length > 3\r\n        : true;\r\n\r\n    const visNesteKnapp = del1OgDel2ErOk && tilretteleggingstiltakErOk;\r\n\r\n    const cleanupTilrettelegging = () => {\r\n        if (visIngenTilrettelegging === false) {\r\n            setFieldValue(getInputName('ingenTilrettelegging'), undefined);\r\n        }\r\n        if (visDelvisTilrettelegging === false) {\r\n            setFieldValue(getInputName('delvisTilrettelegging'), undefined);\r\n        }\r\n        if (visHelTilrettelegging === false) {\r\n            setFieldValue(getInputName('helTilrettelegging'), undefined);\r\n        }\r\n    };\r\n\r\n    const navigateTo = useNavigate();\r\n\r\n    const navigate = () => {\r\n        cleanupTilrettelegging();\r\n        const allSteps = getAllSteps(values.søknadsgrunnlag);\r\n        const nextStep = getAdjacentSteps(step, allSteps)[1];\r\n        const nextStepPath = getSøknadStepPath(nextStep.step, nextStep.subStep);\r\n        navigateTo(nextStepPath, history);\r\n    };\r\n\r\n    return (\r\n        <Applikasjonsside visTittel={true}>\r\n            <FormikStep\r\n                step={step}\r\n                formikProps={formikProps}\r\n                showNesteknapp={visNesteKnapp && vedlegg.filter((a) => !isAttachmentWithError(a)).length > 0}\r\n                onValidFormSubmit={navigate}\r\n            >\r\n                <Block visible={visFrilansEllerSelvstendig}>\r\n                    <Block margin=\"xs\">\r\n                        <Veilederinfo stil=\"kompakt\" type=\"info\">\r\n                            <FormattedMessage\r\n                                id=\"tilrettelegging.veileder.frilans.html\"\r\n                                values={{\r\n                                    strong: (msg: any) => <strong>{msg}</strong>,\r\n                                }}\r\n                            />\r\n                        </Veilederinfo>\r\n                    </Block>\r\n                    <Textarea\r\n                        name={getInputName('risikoFaktorer')}\r\n                        label={\r\n                            visFrilansEllerSelvstendig\r\n                                ? getMessage(intl, 'tilrettelegging.frilans.risikoFaktorer.frilansSN')\r\n                                : getMessage(intl, 'tilrettelegging.frilans.risikoFaktorer')\r\n                        }\r\n                    />\r\n                </Block>\r\n                <Block visible={visVedlegg}>\r\n                    <Block>\r\n                        <Veilederinfo stil=\"kompakt\" type=\"info\">\r\n                            <FormattedMessage\r\n                                id={\r\n                                    visFrilansEllerSelvstendig\r\n                                        ? 'tilrettelegging.veileder.vedlegg.frilansSN'\r\n                                        : 'tilrettelegging.veileder.vedlegg'\r\n                                }\r\n                            />\r\n                        </Veilederinfo>\r\n                    </Block>\r\n                    <Block\r\n                        header={{\r\n                            title: visFrilansEllerSelvstendig\r\n                                ? getMessage(intl, 'tilrettelegging.vedlegg.label.frilansSN')\r\n                                : getMessage(intl, 'tilrettelegging.vedlegg.label'),\r\n                        }}\r\n                    >\r\n                        <FieldArray\r\n                            name={getInputName('vedlegg')}\r\n                            render={({ push, remove }: FieldArrayRenderProps) => (\r\n                                <AttachmentOverview\r\n                                    attachmentType={AttachmentType.TILRETTELEGGING}\r\n                                    skjemanummer={\r\n                                        erFrilansEllerSelvstendig\r\n                                            ? Skjemanummer.TILRETTELEGGING_FOR_FRILANS_ELLER_SELVSTENDIG\r\n                                            : Skjemanummer.SKJEMA_FOR_TILRETTELEGGING_OG_OMPLASSERING\r\n                                    }\r\n                                    attachments={attachments}\r\n                                    onFilesSelect={(files: Attachment[]) => {\r\n                                        files.forEach((file) => {\r\n                                            push(file.id);\r\n                                            uploadAttachment(file, id);\r\n                                        });\r\n                                    }}\r\n                                    onFileDelete={(files: Attachment[]) => {\r\n                                        files.forEach((file) => {\r\n                                            remove(tilrettelegging.vedlegg.indexOf(file.id));\r\n                                            deleteAttachment(file, id);\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <UtvidetInformasjon apneLabel=\"Les om hvordan ta et bra bilde\">\r\n                            <PictureScanningGuide />\r\n                        </UtvidetInformasjon>\r\n                    </Block>\r\n                </Block>\r\n                <Block visible={visDel1} margin=\"none\">\r\n                    <Block visible={tilrettelegging.arbeidsforhold.type === Arbeidsforholdstype.VIRKSOMHET}>\r\n                        <Veilederinfo stil=\"kompakt\" type=\"info\">\r\n                            <FormattedMessage\r\n                                id=\"tilrettelegging.veileder.intro\"\r\n                                values={{\r\n                                    arbeidsgiversNavn,\r\n                                }}\r\n                            />\r\n                        </Veilederinfo>\r\n                    </Block>\r\n                    <Block header={{ title: getMessage(intl, 'tilrettelegging.del1'), stil: 'seksjon' }}>\r\n                        <Block margin=\"xs\">\r\n                            <DatoInput\r\n                                name={getInputName('behovForTilretteleggingFom')}\r\n                                label={\r\n                                    visFrilansEllerSelvstendig ? (\r\n                                        <LabelMedInfobox\r\n                                            title={getMessage(\r\n                                                intl,\r\n                                                'tilrettelegging.behovForTilretteleggingFom.label.frilansSN'\r\n                                            )}\r\n                                            info={getMessage(\r\n                                                intl,\r\n                                                'tilrettelegging.behovForTilretteleggingFom.infoBox.frilansSN'\r\n                                            )}\r\n                                        />\r\n                                    ) : (\r\n                                        <LabelMedInfobox\r\n                                            title={getMessage(intl, 'tilrettelegging.behovForTilretteleggingFom.label')}\r\n                                            info={getMessage(\r\n                                                intl,\r\n                                                'tilrettelegging.behovForTilretteleggingFom.infoBox'\r\n                                            )}\r\n                                        />\r\n                                    )\r\n                                }\r\n                                datoAvgrensinger={{\r\n                                    minDato: tiMånederSiden(values.barn.termindato!),\r\n                                    maksDato: dagenFør(values.barn.termindato!),\r\n                                }}\r\n                            />\r\n                        </Block>\r\n                    </Block>\r\n                </Block>\r\n                <Block header={{ title: getMessage(intl, 'tilrettelegging.del2'), stil: 'seksjon' }} visible={visDel2}>\r\n                    <CheckboksPanelGruppe\r\n                        label={\r\n                            visFrilansEllerSelvstendig ? (\r\n                                <LabelMedInfobox\r\n                                    title={getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.frilansSN')}\r\n                                    info={getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.frilansSN.infoBox')}\r\n                                />\r\n                            ) : (\r\n                                <LabelMedInfobox\r\n                                    title={getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe')}\r\n                                    info={getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.infoBox')}\r\n                                />\r\n                            )\r\n                        }\r\n                        name={tilretteleggingstypeName}\r\n                        columns={1}\r\n                        options={[\r\n                            {\r\n                                label: getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.fullt'),\r\n                                value: Tilretteleggingstype.HEL,\r\n                            },\r\n                            {\r\n                                label: getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.delvis'),\r\n                                value: Tilretteleggingstype.DELVIS,\r\n                            },\r\n                            {\r\n                                label: getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.ingenting'),\r\n                                value: Tilretteleggingstype.INGEN,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Block>\r\n                <Block\r\n                    visible={visHelTilrettelegging}\r\n                    header={{\r\n                        title: getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.fullt'),\r\n                        info: getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.fullt.infoBox'),\r\n                    }}\r\n                >\r\n                    <InfoBlock>\r\n                        <FieldArray\r\n                            name={getInputName('helTilrettelegging')}\r\n                            render={(arrayHelpers: FieldArrayRenderProps) =>\r\n                                tilrettelegging.helTilrettelegging !== undefined &&\r\n                                tilrettelegging.helTilrettelegging.map((_helTil: any, ind: any, arr: any) => (\r\n                                    <>\r\n                                        <Block margin=\"xs\">\r\n                                            <AddTilrettelegging\r\n                                                datoAvgrensninger={{\r\n                                                    minDato: tilrettelegging.behovForTilretteleggingFom,\r\n                                                    maksDato: treUkerSiden(values.barn.termindato!),\r\n                                                }}\r\n                                                datoInputName={`${getInputName(\r\n                                                    'helTilrettelegging'\r\n                                                )}.${ind}.tilrettelagtArbeidFom`}\r\n                                                datoLabel={getMessage(\r\n                                                    intl,\r\n                                                    'tilrettelegging.hvordanKanDuJobbe.fullt.spørsmål'\r\n                                                )}\r\n                                                showDeleteButton={ind !== 0}\r\n                                                delvisTilrettelegging={false}\r\n                                                onDelete={() => arrayHelpers.remove(ind)}\r\n                                            />\r\n                                        </Block>\r\n                                        <Block margin=\"xs\" visible={arr.length - 1 === ind}>\r\n                                            <Knapp\r\n                                                onClick={() => arrayHelpers.push({ tilrettelagtArbeidFom: undefined })}\r\n                                                htmlType=\"button\"\r\n                                                mini={true}\r\n                                            >\r\n                                                {getMessage(intl, 'tilrettelegging.leggTilPeriode')}\r\n                                            </Knapp>\r\n                                        </Block>\r\n                                    </>\r\n                                ))\r\n                            }\r\n                        />\r\n                    </InfoBlock>\r\n                </Block>\r\n                <Block\r\n                    visible={visDelvisTilrettelegging}\r\n                    header={{\r\n                        title: getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.delvis'),\r\n                        info: getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.delvis.infoBox'),\r\n                    }}\r\n                >\r\n                    <InfoBlock>\r\n                        <FieldArray\r\n                            name={getInputName('delvisTilrettelegging')}\r\n                            render={(arrayHelpers: FieldArrayRenderProps) =>\r\n                                tilrettelegging.delvisTilrettelegging !== undefined &&\r\n                                tilrettelegging.delvisTilrettelegging.map((_delTil: any, ind: any, arr: any) => (\r\n                                    <>\r\n                                        <Block margin=\"xs\">\r\n                                            <AddTilrettelegging\r\n                                                datoAvgrensninger={{\r\n                                                    minDato: tilrettelegging.behovForTilretteleggingFom,\r\n                                                    maksDato: treUkerSiden(values.barn.termindato!),\r\n                                                }}\r\n                                                datoInputName={`${getInputName(\r\n                                                    'delvisTilrettelegging'\r\n                                                )}.${ind}.tilrettelagtArbeidFom`}\r\n                                                datoLabel={getMessage(\r\n                                                    intl,\r\n                                                    'tilrettelegging.hvordanKanDuJobbe.delvis.spørsmål'\r\n                                                )}\r\n                                                prosentInputName={`${getInputName(\r\n                                                    'delvisTilrettelegging'\r\n                                                )}.${ind}.stillingsprosent`}\r\n                                                prosentLabel={getMessage(\r\n                                                    intl,\r\n                                                    'tilrettelegging.stillingsprosent.label'\r\n                                                )}\r\n                                                showDeleteButton={ind !== 0}\r\n                                                delvisTilrettelegging={true}\r\n                                                onDelete={() => arrayHelpers.remove(ind)}\r\n                                            />\r\n                                        </Block>\r\n                                        <Block margin=\"xs\" visible={arr.length - 1 === ind}>\r\n                                            <Knapp\r\n                                                onClick={() =>\r\n                                                    arrayHelpers.push({\r\n                                                        stillingsprosent: undefined,\r\n                                                        tilrettelagtArbeidFom: undefined,\r\n                                                    })\r\n                                                }\r\n                                                htmlType=\"button\"\r\n                                                mini={true}\r\n                                            >\r\n                                                {getMessage(intl, 'tilrettelegging.leggTilPeriode')}\r\n                                            </Knapp>\r\n                                        </Block>\r\n                                    </>\r\n                                ))\r\n                            }\r\n                        />\r\n                    </InfoBlock>\r\n                </Block>\r\n                <Block\r\n                    visible={visIngenTilrettelegging}\r\n                    header={{\r\n                        title: getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.ingenting'),\r\n                        info: getMessage(intl, 'tilrettelegging.hvordanKanDuJobbe.ingenting.infoBox'),\r\n                    }}\r\n                >\r\n                    <InfoBlock>\r\n                        <FieldArray\r\n                            name={getInputName('ingenTilrettelegging')}\r\n                            render={(arrayHelpers: any) =>\r\n                                tilrettelegging.ingenTilrettelegging !== undefined &&\r\n                                tilrettelegging.ingenTilrettelegging.map((_ingenTil: any, ind: any, arr: any) => (\r\n                                    <>\r\n                                        <Block margin=\"xs\">\r\n                                            <AddTilrettelegging\r\n                                                datoAvgrensninger={{\r\n                                                    minDato: tilrettelegging.behovForTilretteleggingFom,\r\n                                                    maksDato: treUkerSiden(values.barn.termindato!),\r\n                                                }}\r\n                                                datoInputName={`${getInputName(\r\n                                                    'ingenTilrettelegging'\r\n                                                )}.${ind}.slutteArbeidFom`}\r\n                                                datoLabel={getMessage(\r\n                                                    intl,\r\n                                                    'tilrettelegging.hvordanKanDuJobbe.ingenting.spørsmål'\r\n                                                )}\r\n                                                showDeleteButton={ind !== 0}\r\n                                                delvisTilrettelegging={false}\r\n                                                onDelete={() => arrayHelpers.remove(ind)}\r\n                                            />\r\n                                        </Block>\r\n                                        <Block margin=\"xs\" visible={arr.length - 1 === ind}>\r\n                                            <Knapp\r\n                                                onClick={() => arrayHelpers.push({ slutteArbeidFom: undefined })}\r\n                                                htmlType=\"button\"\r\n                                                mini={true}\r\n                                            >\r\n                                                {getMessage(intl, 'tilrettelegging.leggTilPeriode')}\r\n                                            </Knapp>\r\n                                        </Block>\r\n                                    </>\r\n                                ))\r\n                            }\r\n                        />\r\n                    </InfoBlock>\r\n                </Block>\r\n                <Block visible={visTiltakForTilrettelegging}>\r\n                    <Textarea\r\n                        name={getInputName('tilretteleggingstiltak')}\r\n                        label={getMessage(intl, 'tilrettelegging.tiltak')}\r\n                    />\r\n                </Block>\r\n            </FormikStep>\r\n        </Applikasjonsside>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    const søkerinfo = state.api.søkerinfo;\r\n    return {\r\n        vedlegg: state.attachment.vedlegg.filter((v) => v.type === AttachmentType.TILRETTELEGGING),\r\n        arbeidsforhold: søkerinfo.status === FetchStatus.SUCCESS ? søkerinfo.data.arbeidsforhold : undefined,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: (action: Action) => void) => {\r\n    return {\r\n        uploadAttachment: (attachment: Attachment) =>\r\n            dispatch({ type: AttachmentActionTypes.UPLOAD_ATTACHMENT_REQUEST, payload: { attachment } }),\r\n        deleteAttachment: (attachment: Attachment) =>\r\n            dispatch({ type: AttachmentActionTypes.DELETE_ATTACHMENT_REQUEST, payload: { attachment } }),\r\n    };\r\n};\r\n\r\n// @ts-ignore Fiks\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tilrettelegging);\r\n","import { TidsperiodeDTO } from 'common/types';\r\nimport { Tidsperiode } from './Tidsperiode';\r\n\r\nexport interface Utenlandsopphold {\r\n    land: string;\r\n    tidsperiode: Tidsperiode;\r\n}\r\n\r\nexport enum Oppholdstype {\r\n    'TIDLIGERE_OPPHOLD' = 'tidligereOpphold',\r\n    'SENERE_OPPHOLD' = 'senereOpphold',\r\n}\r\n\r\ninterface InformasjonOmUtenlandsopphold {\r\n    iNorgePåHendelsestidspunktet: boolean;\r\n    iNorgeSiste12Mnd: boolean;\r\n    iNorgeNeste12Mnd: boolean;\r\n    jobbetINorgeSiste12Mnd: boolean;\r\n\r\n    tidligereOpphold: Utenlandsopphold[];\r\n    senereOpphold: Utenlandsopphold[];\r\n}\r\n\r\nexport interface UtenlandsoppholdDTO {\r\n    land: string;\r\n    tidsperiode: TidsperiodeDTO;\r\n}\r\n\r\nexport interface InformasjonOmUtenlandsoppholdDTO {\r\n    iNorgePåHendelsestidspunktet: boolean;\r\n    iNorgeSiste12Mnd: boolean;\r\n    iNorgeNeste12Mnd: boolean;\r\n    jobbetINorgeSiste12Mnd: boolean;\r\n\r\n    tidligereOpphold: UtenlandsoppholdDTO[];\r\n    senereOpphold: UtenlandsoppholdDTO[];\r\n}\r\n\r\nexport interface InformasjonOmUtenlandsoppholdPartial {\r\n    iNorgePåHendelsestidspunktet?: boolean;\r\n    iNorgeSiste12Mnd?: boolean;\r\n    iNorgeNeste12Mnd?: boolean;\r\n    jobbetINorgeSiste12Mnd?: boolean;\r\n\r\n    tidligereOpphold: Utenlandsopphold[];\r\n    senereOpphold: Utenlandsopphold[];\r\n}\r\n\r\nexport default InformasjonOmUtenlandsopphold;\r\n","import React from 'react';\r\nimport countries from 'i18n-iso-countries';\r\nimport { useIntl } from 'react-intl';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport InteractiveListElement, {\r\n    InteractiveListElementProps,\r\n} from 'common/components/interactive-list-element/InteractiveListElement';\r\nimport { Utenlandsopphold } from 'app/types/InformasjonOmUtenlandsopphold';\r\nimport { prettifyTidsperiode } from 'app/utils/formatDate';\r\n\r\ninterface OppholdListeElementProps extends InteractiveListElementProps {\r\n    opphold: Utenlandsopphold;\r\n}\r\n\r\ntype Props = OppholdListeElementProps;\r\n\r\nconst OppholdListElement: React.FunctionComponent<Props> = ({ opphold, ...rest }) => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <InteractiveListElement\r\n            title={countries.getName(opphold.land, intl.locale)}\r\n            text={prettifyTidsperiode(opphold.tidsperiode)}\r\n            deleteLinkText={getMessage(intl, 'utenlandsopphold.land.slett')}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nexport default OppholdListElement;\r\n","import moment from 'moment';\r\nimport { FormikErrors } from 'formik';\r\nimport { Tidsperiode } from 'app/types/Tidsperiode';\r\nimport { Utenlandsopphold, Oppholdstype } from 'app/types/InformasjonOmUtenlandsopphold';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { isISODateString } from 'nav-datovelger';\r\nimport { dateToISOFormattedDateString } from 'common/util/datoUtils';\r\n\r\ntype Oppholdsfeil = FormikErrors<Utenlandsopphold>;\r\n\r\nexport const getDatoAvgrensninger = (type: Oppholdstype, fom: string, tom: string) => {\r\n    const today = dateToISOFormattedDateString(new Date());\r\n\r\n    return type === Oppholdstype.TIDLIGERE_OPPHOLD\r\n        ? {\r\n              fom: {\r\n                  maksDato: dateToISOFormattedDateString(moment.min([moment(today), moment(tom)]).toDate()),\r\n              },\r\n              tom: {\r\n                  minDato: fom,\r\n                  maksDato: today,\r\n              },\r\n          }\r\n        : {\r\n              fom: {\r\n                  minDato: today,\r\n                  maksDato: tom,\r\n              },\r\n              tom: {\r\n                  minDato: dateToISOFormattedDateString(moment.max([moment(today), moment(fom)]).toDate()),\r\n              },\r\n          };\r\n};\r\n\r\nconst validatePeriode = ({ fom, tom }: Tidsperiode, type: Oppholdstype): Oppholdsfeil => {\r\n    const errors: FormikErrors<Tidsperiode> = {};\r\n    const today = moment().startOf('day');\r\n\r\n    if (!fom) {\r\n        errors.fom = 'valideringsfeil.utenlandsopphold.fom.påkrevd';\r\n    } else {\r\n        if (!isISODateString(fom)) {\r\n            errors.fom = 'valideringsfeil.utenlandsopphold.fom.ugyldigDato';\r\n        } else {\r\n            if (type === Oppholdstype.TIDLIGERE_OPPHOLD && moment(fom).isAfter(today)) {\r\n                errors.fom = 'valideringsfeil.tidligereOppholdMåVæreTilbakeITid';\r\n            } else if (type === Oppholdstype.SENERE_OPPHOLD && moment(fom).isBefore(today)) {\r\n                errors.fom = 'valideringsfeil.tidligereOppholdMåVæreFremoverITid';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!tom) {\r\n        errors.tom = 'valideringsfeil.utenlandsopphold.tom.påkrevd';\r\n    } else {\r\n        if (!isISODateString(tom)) {\r\n            errors.tom = 'valideringsfeil.utenlandsopphold.tom.ugyldigDato';\r\n        } else {\r\n            if (moment(tom).isBefore(fom)) {\r\n                errors.tom = 'valideringsfeil.tidsreiserIkkeTillatt';\r\n            }\r\n        }\r\n    }\r\n\r\n    return !isEmpty(errors) ? { tidsperiode: errors } : {};\r\n};\r\n\r\nconst validateOpphold =\r\n    (type: Oppholdstype) =>\r\n    (opphold: Utenlandsopphold): Oppholdsfeil => {\r\n        const errors: Oppholdsfeil = {\r\n            ...validatePeriode(opphold.tidsperiode, type),\r\n        };\r\n\r\n        if (opphold.land === '') {\r\n            errors.land = 'valideringsfeil.utenlandsopphold.land.påkrevd';\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\nexport default validateOpphold;\r\n","import React, { FunctionComponent, useMemo } from 'react';\r\nimport { Formik, FormikProps } from 'formik';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Knapp, Hovedknapp } from 'nav-frontend-knapper';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\n\r\nimport { Utenlandsopphold, Oppholdstype } from 'app/types/InformasjonOmUtenlandsopphold';\r\nimport BEMHelper from 'common/util/bem';\r\nimport Block from 'common/components/block/Block';\r\nimport DatoInput from 'app/formik/wrappers/DatoInput';\r\nimport getCountries from 'app/utils/getCountries';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport Select from 'app/formik/wrappers/Select';\r\nimport validateOpphold, { getDatoAvgrensninger } from 'app/utils/validation/validateOpphold';\r\nimport './oppholdsvalg.less';\r\nimport Knapperad from 'common/components/knapperad/Knapperad';\r\nimport DatoerInputLayout from 'common/components/layout/datoerInputLayout/DatoerInputLayout';\r\n\r\nconst cls = BEMHelper('oppholdsvalg');\r\n\r\ninterface Props {\r\n    endre: boolean;\r\n    opphold?: Utenlandsopphold;\r\n    type: Oppholdstype;\r\n    onAdd: (opphold: Utenlandsopphold) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nconst initialOpphold = {\r\n    land: '',\r\n    tidsperiode: {},\r\n};\r\n\r\nconst Oppholdvalg: FunctionComponent<Props> = (props) => {\r\n    const intl = useIntl();\r\n    const { endre, opphold = initialOpphold, onAdd, onCancel, type } = props;\r\n\r\n    const countries = useMemo(() => getCountries(true, false, intl.locale), []);\r\n\r\n    return (\r\n        <Formik\r\n            // @ts-ignore Fiks\r\n            initialValues={opphold}\r\n            validate={validateOpphold(type)}\r\n            onSubmit={onAdd}\r\n            render={({ values, handleSubmit }: FormikProps<Utenlandsopphold>) => {\r\n                const datoAvgrensinger = getDatoAvgrensninger(type, values.tidsperiode.fom, values.tidsperiode.tom);\r\n\r\n                const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    handleSubmit();\r\n                };\r\n\r\n                return (\r\n                    <form onSubmit={onFormSubmit} className={cls.block}>\r\n                        <Block>\r\n                            <Undertittel>\r\n                                {getMessage(intl, `utenlandsopphold.modal.tittel${endre ? '.endre' : ''}`)}\r\n                            </Undertittel>\r\n                        </Block>\r\n                        <Block>\r\n                            <Select name=\"land\" label={getMessage(intl, `utenlandsopphold.${type}.land.label`)}>\r\n                                <option value=\"\" />\r\n                                {countries.map((countryOption: string[]) => {\r\n                                    const [countryCode, countryName] = countryOption;\r\n                                    return (\r\n                                        <option key={countryCode} value={countryCode}>\r\n                                            {countryName}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </Select>\r\n                        </Block>\r\n                        <Block>\r\n                            <DatoerInputLayout\r\n                                fra={\r\n                                    <DatoInput\r\n                                        fullskjermKalender={true}\r\n                                        name=\"tidsperiode.fom\"\r\n                                        label={getMessage(intl, 'utenlandsopphold.land.fraOgMed')}\r\n                                        datoAvgrensinger={datoAvgrensinger.fom}\r\n                                    />\r\n                                }\r\n                                til={\r\n                                    <DatoInput\r\n                                        fullskjermKalender={true}\r\n                                        name=\"tidsperiode.tom\"\r\n                                        datoAvgrensinger={datoAvgrensinger.tom}\r\n                                        label={getMessage(intl, 'utenlandsopphold.land.tilOgMed')}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Block>\r\n                        <Knapperad stil=\"mobile-50-50\">\r\n                            <Knapp htmlType=\"button\" onClick={onCancel}>\r\n                                <FormattedMessage id=\"utenlandsopphold.land.avbryt\" />\r\n                            </Knapp>\r\n                            <Hovedknapp htmlType=\"submit\">\r\n                                <FormattedMessage\r\n                                    id={endre ? 'utenlandsopphold.land.endre' : 'utenlandsopphold.land.leggTil'}\r\n                                />\r\n                            </Hovedknapp>\r\n                        </Knapperad>\r\n                    </form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Oppholdvalg;\r\n","import React, { FunctionComponent, useEffect, useState } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { connect as formConnect, FieldArray } from 'formik';\r\nimport { Knapp } from 'nav-frontend-knapper';\r\nimport get from 'lodash/get';\r\nimport Modal from 'nav-frontend-modal';\r\n\r\nimport { FormikProps } from 'app/types/Formik';\r\nimport { UferdigSøknad } from 'app/types/Søknad';\r\nimport { Utenlandsopphold, Oppholdstype } from 'app/types/InformasjonOmUtenlandsopphold';\r\nimport Block from 'common/components/block/Block';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport JaNeiSpørsmål from 'app/formik/wrappers/JaNeiSpørsmål';\r\nimport List from 'common/components/list/List';\r\nimport OppholdListElement from './OppholdListElement';\r\nimport Oppholdsvalg from './Oppholdsvalg';\r\n\r\ninterface OwnProps {\r\n    name: string;\r\n    land: string;\r\n    type: Oppholdstype;\r\n    legend: string;\r\n    infoboksTekst: string;\r\n    labels: {\r\n        ja: string;\r\n        nei: string;\r\n    };\r\n}\r\n\r\ntype OuterProps = OwnProps;\r\ntype Props = OuterProps & FormikProps;\r\n\r\nconst Oppholdsspørsmål: FunctionComponent<Props> = (props) => {\r\n    const intl = useIntl();\r\n    const { formik, name, land, legend, labels, type, infoboksTekst } = props;\r\n    const visLandvelger = get(formik.values, name) === false;\r\n\r\n    const alleOpphold: Utenlandsopphold[] = get(formik.values, land);\r\n\r\n    const [modalIsOpen, toggleModal] = useState(false);\r\n    const [currentIndex, selectIndex] = useState(alleOpphold.length);\r\n    const [endreLand, toggleEndring] = useState(false);\r\n\r\n    const openModalForAdding = () => {\r\n        toggleEndring(false);\r\n        toggleModal(true);\r\n    };\r\n\r\n    const openModalForEditing = (index: number) => () => {\r\n        selectIndex(index);\r\n        toggleEndring(true);\r\n        toggleModal(true);\r\n    };\r\n\r\n    const attributter = name.split('.');\r\n    const verdi = formik.values[attributter[0]][attributter[1]];\r\n    useEffect(() => {\r\n        if (verdi === true) {\r\n            formik.setFieldValue(land, []);\r\n        }\r\n    }, [verdi]);\r\n\r\n    return (\r\n        <>\r\n            <Block margin=\"xs\">\r\n                <JaNeiSpørsmål\r\n                    twoColumns={true}\r\n                    name={name}\r\n                    legend={legend}\r\n                    labels={labels}\r\n                    infoboksTekst={infoboksTekst}\r\n                />\r\n            </Block>\r\n            <FieldArray\r\n                name={land}\r\n                render={({ push, replace, remove }) => {\r\n                    return (\r\n                        <>\r\n                            <Block margin=\"xs\" visible={alleOpphold.length > 0}>\r\n                                <List\r\n                                    data={alleOpphold}\r\n                                    renderElement={(oppholdToRender: Utenlandsopphold, index: number) => (\r\n                                        <OppholdListElement\r\n                                            key={oppholdToRender.land + index}\r\n                                            opphold={oppholdToRender}\r\n                                            onEdit={openModalForEditing(index)}\r\n                                            onDelete={() => {\r\n                                                remove(index);\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Block>\r\n                            <Modal\r\n                                closeButton={true}\r\n                                isOpen={modalIsOpen}\r\n                                contentLabel={getMessage(intl, `utenlandsopphold.modal.ariaLabel`)}\r\n                                shouldCloseOnOverlayClick={false}\r\n                                onRequestClose={() => toggleModal(false)}\r\n                            >\r\n                                <Oppholdsvalg\r\n                                    type={type}\r\n                                    endre={endreLand}\r\n                                    opphold={endreLand ? alleOpphold[currentIndex] : undefined}\r\n                                    onCancel={() => toggleModal(false)}\r\n                                    onAdd={(opphold: any) => {\r\n                                        endreLand ? replace(currentIndex, opphold) : push(opphold);\r\n                                        toggleModal(false);\r\n                                    }}\r\n                                />\r\n                            </Modal>\r\n                        </>\r\n                    );\r\n                }}\r\n            />\r\n            <Block visible={visLandvelger}>\r\n                <Knapp onClick={openModalForAdding} htmlType=\"button\">\r\n                    <FormattedMessage id=\"utenlandsopphold.leggTilLand\" />\r\n                </Knapp>\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default formConnect<OuterProps, UferdigSøknad>(Oppholdsspørsmål);\r\n","import React, { FunctionComponent } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { CustomFormikProps } from 'app/types/Formik';\r\nimport { getSøknadStepPath } from 'app/utils/stepUtils';\r\nimport { Oppholdstype } from 'app/types/InformasjonOmUtenlandsopphold';\r\nimport { StepProps } from 'app/components/step/Step';\r\nimport Applikasjonsside from '../applikasjonsside/Applikasjonsside';\r\nimport Block from 'common/components/block/Block';\r\nimport FormikStep from 'app/components/formik-step/FormikStep';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport Oppholdsseksjon from './Oppholdsseksjon';\r\nimport SøknadStep, { StepID } from 'app/types/SøknadStep';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface OwnProps {\r\n    step: SøknadStep;\r\n    formikProps: CustomFormikProps;\r\n}\r\n\r\ntype Props = OwnProps & StepProps;\r\n\r\nconst Utenlandsopphold: FunctionComponent<Props> = (props) => {\r\n    const intl = useIntl();\r\n    const { step, formikProps } = props;\r\n    const { informasjonOmUtenlandsopphold: opphold } = formikProps.values;\r\n\r\n    const visKomponent = {\r\n        senereOpphold:\r\n            opphold.iNorgeSiste12Mnd || (opphold.iNorgeSiste12Mnd === false && opphold.tidligereOpphold.length > 0),\r\n        nesteknapp:\r\n            opphold.iNorgeNeste12Mnd || (opphold.iNorgeNeste12Mnd === false && opphold.senereOpphold.length > 0),\r\n    };\r\n\r\n    const navigateTo = useNavigate();\r\n\r\n    const navigate = () => {\r\n        navigateTo(getSøknadStepPath(StepID.OPPSUMMERING));\r\n    };\r\n\r\n    return (\r\n        <Applikasjonsside visTittel={true}>\r\n            <FormikStep\r\n                step={step}\r\n                formikProps={formikProps}\r\n                showNesteknapp={visKomponent.nesteknapp}\r\n                onValidFormSubmit={navigate}\r\n            >\r\n                <Block>\r\n                    <Oppholdsseksjon\r\n                        type={Oppholdstype.TIDLIGERE_OPPHOLD}\r\n                        name=\"informasjonOmUtenlandsopphold.iNorgeSiste12Mnd\"\r\n                        land=\"informasjonOmUtenlandsopphold.tidligereOpphold\"\r\n                        legend={getMessage(intl, 'utenlandsopphold.iNorgeSiste12Mnd.label')}\r\n                        infoboksTekst={getMessage(intl, 'utenlandsopphold.iNorgeSiste12Mnd.infoboxTekst')}\r\n                        labels={{\r\n                            ja: getMessage(intl, 'utenlandsopphold.iNorgeSiste12Mnd.ja'),\r\n                            nei: getMessage(intl, 'utenlandsopphold.iNorgeSiste12Mnd.nei'),\r\n                        }}\r\n                    />\r\n                </Block>\r\n                <Block visible={visKomponent.senereOpphold}>\r\n                    <Oppholdsseksjon\r\n                        type={Oppholdstype.SENERE_OPPHOLD}\r\n                        name=\"informasjonOmUtenlandsopphold.iNorgeNeste12Mnd\"\r\n                        land=\"informasjonOmUtenlandsopphold.senereOpphold\"\r\n                        legend={getMessage(intl, 'utenlandsopphold.iNorgeNeste12Mnd.label')}\r\n                        infoboksTekst={getMessage(intl, 'utenlandsopphold.iNorgeNeste12Mnd.infoboxTekst')}\r\n                        labels={{\r\n                            ja: getMessage(intl, 'utenlandsopphold.iNorgeNeste12Mnd.ja'),\r\n                            nei: getMessage(intl, 'utenlandsopphold.iNorgeNeste12Mnd.nei'),\r\n                        }}\r\n                    />\r\n                </Block>\r\n            </FormikStep>\r\n        </Applikasjonsside>\r\n    );\r\n};\r\n\r\nexport default Utenlandsopphold;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Navigate, Route, Routes } from 'react-router';\r\n\r\nimport { AppRoute } from 'app/types/Routes';\r\nimport { CustomFormikProps } from 'app/types/Formik';\r\nimport { getSøknadStepPath, isNextStepAvailable } from 'app/utils/stepUtils';\r\nimport { StepID } from 'app/types/SøknadStep';\r\nimport Arbeidsforhold from '../arbeidsforhold/Arbeidsforhold';\r\nimport Intro from '../intro/Intro';\r\nimport Oppsummering from '../oppsummering/Oppsummering';\r\nimport SøknadSendt from '../søknad-sendt/SøknadSendt';\r\nimport Termin from '../termin/Termin';\r\nimport Tilrettelegging from '../tilrettelegging/Tilrettelegging';\r\nimport Utenlandsopphold from '../utenlandsopphold/Utenlandsopphold';\r\n\r\ninterface Props {\r\n    harSendtSøknad: boolean;\r\n    formikProps: CustomFormikProps;\r\n}\r\n\r\nconst SøknadRoutes: FunctionComponent<Props> = ({ formikProps, harSendtSøknad }) => {\r\n    const { values } = formikProps;\r\n\r\n    const isSøknadAvailable = isNextStepAvailable({ path: AppRoute.INTRO }, values);\r\n    const isNextAvailable = (step: StepID) => isNextStepAvailable({ path: AppRoute.SØKNAD, step }, values);\r\n\r\n    const tilretteleggingRoutes = values.tilrettelegging.map(({ id }) => {\r\n        const søknadStep = {\r\n            step: StepID.TILRETTELEGGING,\r\n            subStep: id,\r\n        };\r\n\r\n        return (\r\n            <Route\r\n                path={getSøknadStepPath(søknadStep.step, søknadStep.subStep)}\r\n                key={`${StepID.TILRETTELEGGING}.${id}`}\r\n                element={<Tilrettelegging id={id} step={søknadStep} formikProps={formikProps} />}\r\n            />\r\n        );\r\n    });\r\n    const søknadRoutes = (\r\n        <Routes>\r\n            <Route path={AppRoute.INTRO} element={<Intro formik={formikProps} />} />\r\n\r\n            {isSøknadAvailable && (\r\n                <Route\r\n                    path={getSøknadStepPath(StepID.TERMIN)}\r\n                    key={StepID.TERMIN}\r\n                    element={<Termin step={{ step: StepID.TERMIN }} formikProps={formikProps} />}\r\n                />\r\n            )}\r\n\r\n            {isNextAvailable(StepID.TERMIN) && (\r\n                <Route\r\n                    path={getSøknadStepPath(StepID.ARBEIDSFORHOLD)}\r\n                    key={StepID.ARBEIDSFORHOLD}\r\n                    element={<Arbeidsforhold step={{ step: StepID.ARBEIDSFORHOLD }} formikProps={formikProps} />}\r\n                />\r\n            )}\r\n\r\n            {isNextAvailable(StepID.ARBEIDSFORHOLD) && values.søknadsgrunnlag.length > 0 && tilretteleggingRoutes}\r\n\r\n            {isNextAvailable(StepID.TILRETTELEGGING) && (\r\n                <Route\r\n                    path={getSøknadStepPath(StepID.UTENLANDSOPPHOLD)}\r\n                    key={StepID.UTENLANDSOPPHOLD}\r\n                    element={<Utenlandsopphold step={{ step: StepID.UTENLANDSOPPHOLD }} formikProps={formikProps} />}\r\n                />\r\n            )}\r\n\r\n            {isNextAvailable(StepID.UTENLANDSOPPHOLD) && (\r\n                <Route\r\n                    path={getSøknadStepPath(StepID.OPPSUMMERING)}\r\n                    key={StepID.OPPSUMMERING}\r\n                    element={<Oppsummering step={{ step: StepID.OPPSUMMERING }} formikProps={formikProps} />}\r\n                />\r\n            )}\r\n\r\n            <Route path=\"/\" element={<Navigate to={AppRoute.INTRO} key=\"redirect\" />} />\r\n        </Routes>\r\n    );\r\n\r\n    const kvitteringRoute = (\r\n        <Routes>\r\n            <Route path={AppRoute.SENDT} element={<SøknadSendt />} />\r\n            <Route path=\"*\" element={<Navigate to={AppRoute.SENDT} key=\"redirect\" />} />\r\n        </Routes>\r\n    );\r\n\r\n    return harSendtSøknad ? kvitteringRoute : søknadRoutes;\r\n};\r\n\r\nexport default SøknadRoutes;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useIntl, FormattedMessage } from 'react-intl';\r\nimport { Kjønn, Søkerinfo } from 'app/types/Søkerinfo';\r\nimport FetchState, { FetchStatus } from 'app/types/FetchState';\r\n\r\nimport { ApiActionTypes } from 'app/redux/types/ApiAction';\r\nimport { getData, getErrorCode } from 'app/utils/fromFetchState';\r\nimport { State } from 'app/redux/store';\r\nimport Action from 'app/redux/types/Action';\r\nimport Environment from 'app/Environment';\r\nimport Feil from 'app/components/Feil';\r\nimport FormikWrapper from '../formik-wrapper/FormikWrapper';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport Kvittering from 'app/types/Kvittering';\r\nimport Loading from 'app/components/loading/Loading';\r\nimport SøknadRoutes from '../søknad-routes/SøknadRoutes';\r\n\r\ninterface Props {\r\n    søkerinfo: FetchState<Søkerinfo>;\r\n    kvittering: FetchState<Kvittering>;\r\n    requestSøkerinfo: () => void;\r\n}\r\n\r\nconst Svangerskapspengesøknad: React.FunctionComponent<Props> = (props) => {\r\n    const intl = useIntl();\r\n    const { søkerinfo, kvittering, requestSøkerinfo } = props;\r\n\r\n    useEffect(() => {\r\n        if (søkerinfo.status === FetchStatus.UNFETCHED) {\r\n            requestSøkerinfo();\r\n        }\r\n\r\n        if (getErrorCode(søkerinfo) === 401 || getErrorCode(søkerinfo) === 403) {\r\n            redirectToLogin();\r\n        }\r\n    });\r\n\r\n    const redirectToLogin = () => {\r\n        window.location.href = Environment.LOGIN_URL + '?redirect=' + window.location.href;\r\n    };\r\n\r\n    const søker = getData(søkerinfo, {}).søker;\r\n    const isLoading =\r\n        søkerinfo.status === FetchStatus.IN_PROGRESS ||\r\n        søkerinfo.status === FetchStatus.UNFETCHED ||\r\n        kvittering.status === FetchStatus.IN_PROGRESS ||\r\n        getErrorCode(søkerinfo) === 401;\r\n\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    } else if (søker && søker.kjønn === Kjønn.MANN) {\r\n        return (\r\n            <Feil\r\n                tittel={getMessage(intl, 'feilside.mann.tittel')}\r\n                melding={getMessage(intl, 'feilside.mann.melding')}\r\n            />\r\n        );\r\n    } else if (kvittering.status === FetchStatus.FAILURE && getErrorCode(kvittering) !== 401) {\r\n        return (\r\n            <Feil\r\n                tittel={getMessage(intl, 'feilside.innsending.tittel')}\r\n                melding={\r\n                    <FormattedMessage\r\n                        id={'feilside.innsending.melding'}\r\n                        values={{\r\n                            a: (msg: any) => (\r\n                                <a\r\n                                    href=\"https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Teknisk+brukerstotte/hjelp-til-personbruker?kap=398749\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    className=\"lenke\"\r\n                                >\r\n                                    {msg}\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                }\r\n            />\r\n        );\r\n    } else if (søkerinfo.status === FetchStatus.FAILURE && getErrorCode(søkerinfo) !== 401) {\r\n        return (\r\n            <Feil\r\n                tittel={getMessage(intl, 'feilside.ikkeTilgjengelig.tittel')}\r\n                melding={getMessage(intl, 'feilside.ikkeTilgjengelig.melding')}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <FormikWrapper\r\n                contentRenderer={(formikProps) => (\r\n                    <SøknadRoutes\r\n                        formikProps={formikProps}\r\n                        harSendtSøknad={kvittering.status !== FetchStatus.UNFETCHED}\r\n                    />\r\n                )}\r\n            />\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    søkerinfo: state.api.søkerinfo,\r\n    kvittering: state.api.kvittering,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: (action: Action) => void) => ({\r\n    requestSøkerinfo: () => {\r\n        dispatch({ type: ApiActionTypes.GET_SØKERINFO_REQUEST });\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Svangerskapspengesøknad);\r\n","import React from 'react';\r\nimport { Story } from '@storybook/react';\r\nimport MockAdapter from 'axios-mock-adapter';\r\nimport ErrorBoundary from 'app/components/ErrorBoundary/ErrorBoundary';\r\nimport { Provider } from 'react-redux';\r\nimport countries from 'i18n-iso-countries';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\nimport { withRouter } from 'storybook-addon-react-router-v6';\r\nimport IntlProvider from 'app/intl/IntlProvider';\r\nimport { getAxiosInstance } from 'app/api/api';\r\nimport store from 'app/redux/store';\r\nimport Svangerskapspengesøknad from './Svangerskapspengesøknad';\r\n\r\nimport '../../styles/global.less';\r\nimport '../../styles/app.less';\r\n\r\ncountries.registerLocale(require('i18n-iso-countries/langs/nb.json'));\r\ncountries.registerLocale(require('i18n-iso-countries/langs/nn.json'));\r\n\r\nconst søkerinfo = {\r\n  \"søker\": {\r\n      \"fnr\": \"30088930610\",\r\n      \"fornavn\": \"ERLINGA-MASK\",\r\n      \"etternavn\": \"ORAVAKANGAS\",\r\n      \"kjønn\": \"K\",\r\n      \"fødselsdato\": \"1989-08-30\",\r\n      \"land\": \"NO\",\r\n      \"ikkeNordiskEøsLand\": false,\r\n      \"bankkonto\": {\r\n          \"kontonummer\": \"10824223373\"\r\n      }\r\n  },\r\n  \"arbeidsforhold\": [\r\n      {\r\n          \"arbeidsgiverId\": \"975326209\",\r\n          \"arbeidsgiverIdType\": \"orgnr\",\r\n          \"arbeidsgiverNavn\": \"SYKEHUSET I VESTFOLD HF, PSYKIATRISK AVDELING, TØNSBERG\",\r\n          \"stillingsprosent\": 32.63,\r\n          \"fom\": \"2014-05-22\",\r\n          \"tom\": \"2019-05-31\"\r\n      },\r\n      {\r\n          \"arbeidsgiverId\": \"975326209\",\r\n          \"arbeidsgiverIdType\": \"orgnr\",\r\n          \"arbeidsgiverNavn\": \"SYKEHUSET I VESTFOLD HF, PSYKIATRISK AVDELING, TØNSBERG\",\r\n          \"stillingsprosent\": 0,\r\n          \"fom\": \"2018-04-09\",\r\n          \"tom\": \"2018-09-09\"\r\n      },\r\n      {\r\n          \"arbeidsgiverId\": \"975326209\",\r\n          \"arbeidsgiverIdType\": \"orgnr\",\r\n          \"arbeidsgiverNavn\": \"SYKEHUSET I VESTFOLD HF, PSYKIATRISK AVDELING, TØNSBERG\",\r\n          \"stillingsprosent\": 80,\r\n          \"fom\": \"2018-06-25\",\r\n          \"tom\": \"2018-08-05\"\r\n      },\r\n      {\r\n          \"arbeidsgiverId\": \"975326209\",\r\n          \"arbeidsgiverIdType\": \"orgnr\",\r\n          \"arbeidsgiverNavn\": \"SYKEHUSET I VESTFOLD HF, PSYKIATRISK AVDELING, TØNSBERG\",\r\n          \"stillingsprosent\": 85.09,\r\n          \"fom\": \"2019-06-01\"\r\n      },\r\n      {\r\n          \"arbeidsgiverId\": \"990322244\",\r\n          \"arbeidsgiverIdType\": \"orgnr\",\r\n          \"arbeidsgiverNavn\": \"OMSORGSPARTNER VESTFOLD AS\",\r\n          \"stillingsprosent\": 100,\r\n          \"fom\": \"2017-04-05\"\r\n      },\r\n      {\r\n          \"arbeidsgiverId\": \"995090910\",\r\n          \"arbeidsgiverIdType\": \"orgnr\",\r\n          \"arbeidsgiverNavn\": \"RE KOMMUNE BRÅR 12 OG 13\",\r\n          \"stillingsprosent\": 0,\r\n          \"fom\": \"2018-06-01\"\r\n      }\r\n  ]\r\n};\r\n\r\nexport default {\r\n  title: 'Svangerskapspengesoknad',\r\n  component: Svangerskapspengesøknad,\r\n  decorators: [withRouter],\r\n};\r\n\r\nconst Template: Story<any> = () => {\r\n    const apiMock = new MockAdapter(getAxiosInstance());\r\n    apiMock.onGet('/sokerinfo').reply(200,søkerinfo);\r\n\r\n    apiMock.onPost('/soknad').reply(200, {\r\n        \"mottattDato\": \"2019-02-20T20:39:42.757\",\r\n        \"referanseId\": \"bddfa0bb-e00c-4982-b0cc-4a09654803c2\",\r\n        \"leveranseStatus\": \"GOSYS\",\r\n        \"journalId\": \"439775108\"\r\n    });\r\n\r\n    return (\r\n        <ErrorBoundary>\r\n            <Provider store={store}>\r\n                <IntlProvider>\r\n                    <Normaltekst tag=\"main\">\r\n                        <Svangerskapspengesøknad />\r\n                    </Normaltekst>\r\n                </IntlProvider>\r\n            </Provider>\r\n        </ErrorBoundary>\r\n    )\r\n};\r\n\r\nexport const VisApp = Template.bind({});\r\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","symbol","ErrorBoundary","Component","constructor","props","super","this","state","eventId","componentDidCatch","error","errorInfo","scope","setExtras","setState","render","children","IntlProvider","messages","key","locale","common","REST_API_URL","window","appSettings","LOGIN_URL","LOG_VALIDATION","apiBaseUrl","axios","timeout","withCredentials","headers","AttachmentActionTypes","modifyAttachmentWithId","compareId","newProperties","existingAttachment","vedlegg","action","type","UPLOAD_ATTACHMENT_REQUEST","payload","attachment","pending","UPLOAD_ATTACHMENT_SUCCESS","url","uuid","uploaded","UPLOAD_ATTACHMENT_FAILURE","message","DELETE_ATTACHMENT_REQUEST","DELETE_ATTACHMENT_SUCCESS","filter","v","DELETE_ATTACHMENT_FAILURE","CommonActionTypes","ApiActionTypes","FetchStatus","status","UNFETCHED","kvittering","getDefaultState","IN_PROGRESS","SUCCESS","data","FAILURE","preposisjoner","forkortelser","name","split","chunkOfName","word","wordIndex","isFirstWord","includes","toLowerCase","slice","join","AnnenInntektType","intl","value","formatMessage","getAnnenInntektElementTitle","annenInntekt","JOBB_I_UTLANDET","arbeidsgiverNavn","getArbeidsgiverId","arbeidsforhold","undefined","arbeidsgiverId","getAktiveArbeidsforhold","termindato","arb","tom","isSameOrAfter","subtract","mapArbeidsforhold","length","forhold","fom","Date","guid","_","response","fornavn","mellomnavn","etternavn","apiSaga","saveAttachment","formData","FormData","append","file","filename","deleteAttachment","uploadAttachment","location","successAction","failureAction","attachmentSaga","rootSaga","rootReducer","api","sagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","initialState","enhancer","configureStore","run","getData","fetchState","defaultValue","getErrorCode","get","BEMHelper","cls","block","element","m","modifier","modifierConditional","condition","child","c","classNames","AriaText","className","delay","minZoomTouchDelta","lastTapAt","lastClientX","lastClientY","preventDoubleTapZoom","event","touches","tapAt","getTime","timeDiff","xDiff","Math","abs","clientX","yDiff","clientY","preventDefault","target","click","Sirkelknapp","onClick","ariaLabel","ikon","toggle","disabled","stil","size","labelId","style","left","onTouchStart","pressed","role","viewBox","xmlns","stroke","strokeWidth","fill","fillRule","transform","d","InfoIkon","width","height","Infoboks","tekst","contentFullWidth","fieldsetClsName","isExpanded","setIsExpanded","useState","windowPos","setWindowPos","useIntl","getComponentSize","overskriftTilblockElement","document","querySelector","overskriftTilblockElementBredde","clientWidth","useEffect","addEventListener","removeEventListener","Collapse","isOpened","LabelMedInfobox","title","info","tag","Element","Block","visible","margin","header","animated","align","marginTop","hasChildBlocks","bottomMargin","contentClass","content","svgProps","xmlnsXlink","cx","cy","r","xlinkHref","strokeLinecap","points","Veileder","rest","farge","ansikt","Snakkeboble","tittel","PersonMedSnakkeboble","dialog","personRenderer","fyltBakgrunn","Normaltekst","text","VeilederMedSnakkeboble","veileder","Feil","melding","AppRoute","StepID","errors","formaterDatoTall","dato","datoformat","format","dateToISOFormattedDateString","date","startOf","add","toDate","treUkerSiden","isInvalidDateString","dateString","isISODateString","barn","termindatoFeil","intlKey","values","feltNavn","isBefore","isEmpty","Tilretteleggingstype","Arbeidsforholdstype","formatDate","parsetDato","isValid","prettifyTidsperiode","tidsperiode","arbeidsforholdId","checkForDuplicateDates","dates","idx","findIndex","grunnlag","tilrettelegging","forEach","index","tErrors","behovForTilretteleggingFom","set","tilretteleggingstypeName","valgteTyper","alleDatoer","ingenTilrettelegging","ingen","slutteArbeidFom","reduce","result","push","delvisTilrettelegging","delvis","tilrettelagtArbeidFom","helTilrettelegging","hel","FRILANSER","SELVSTENDIG","risikoFaktorer","tilretteleggingstiltak","INGEN","ingenTil","ind","merge","DELVIS","delTil","isEmptyInputField","stillingsprosent","HEL","helTil","harGodkjentOppsummering","validateUntilStep","step","subStep","TERMIN","ARBEIDSFORHOLD","TILRETTELEGGING","UTENLANDSOPPHOLD","OPPSUMMERING","route","path","INTRO","mainSteps","getAllSteps","tilretteleggingSteps","pureSplice","array","start","deleteCount","substitutes","newArray","splice","indexOf","getAdjacentSteps","currentStep","allSteps","invalidStep","indexOfCurrentStep","isFirstStep","isLastStep","parsePathFromLocation","pathname","finnArbeidsforholdNavn","matchingArbeidsforhold","find","isNextStepAvailable","informasjonOmUtenlandsopphold","jobbetINorgeSiste12Mnd","tidligereOpphold","senereOpphold","rolle","MOR","andreInntekterSiste10Mnd","useIsValid","currentPath","FormikWrapper","contentRenderer","validate","useCallback","onSubmit","setSubmitting","setFormikState","f","submitCount","initialValues","Loading","existingTilrettelegging","nyeTilrettelegginger","VIRKSOMHET","PRIVAT","mapGrunnlagTilTilrettelegging","t","s","mapTilretteleggingerTilDTO","dto","mapArbeidsforholdForTilrettelegging","mapHelTilrettelegging","mapDelvisTilrettelegging","mapIngenTilrettelegging","InformasjonOmArbeidsforhold","arbeidsgiverIdType","organisasjonsnummer","InformasjonOmArbeidsforholdWrapper","harArbeidsforhold","arbeidsforholdElement","getAnsiktFromType","Veilederinfo","visVeileder","maxWidth","CustomIcon","form","remove","CheckboksPanelGruppe","legend","label","checkboxes","options","option","checked","some","onChange","indexOfGrunnlag","matchingOption","RadioPanelGruppeResponsive","infoboksTekst","fieldsetClassname","RadioPanelGruppe","feil","radios","flattenErrors","pathPrefix","flattened","prefix","concat","translateError","Radios","labels","radioPanelGruppeProps","field","JA","NEI","ja","nei","feilmelding","setFieldValue","List","dataObject","i","renderElement","visLeggTilKnapp","formik","elementer","listName","currentIndex","selectIndex","modalIsOpen","toggleModal","endre","toggleEndring","openModalForAdding","openModalForEditing","twoColumns","replace","summaryListTitle","summaryListElementComponent","onEdit","onDelete","Knapp","htmlType","buttonLabel","closeButton","isOpen","shouldCloseOnOverlayClick","contentLabel","onRequestClose","renderForm","onCancel","onAdd","CheckboksPanelGruppeResponsive","columns","SkjemaGruppe","checkboks","CheckboksPanel","checkboksPanelGruppeProps","InputField","inputProps","Input","getContryName","countryList","contrycode","country","visNorge","entries","sort","a","b","localeCompare","countryCode","keepNorway","isCountryNorge","DatoInput","postfix","calendarSettings","limitations","datoAvgrensinger","avgrensningerTekst","avgrensninger","str","minDate","maxDate","fraTekst","tilTekst","fra","til","weekendsNotSelectable","getAvgrensningerDescriptionForInput","ariaDescriptionId","Datepicker","allowInvalidDateSelection","placeholder","datoString","avgrensinger","maksDato","minDato","helgedagerIkkeTillatt","invalidDateRanges","ugyldigeTidsperioder","from","to","fullskjermKalender","datoInputProps","position","Textarea","textareaProps","visDato","visForklaring","required","maxLength","skalViseTelefonnummer","navn","telefonnummer","Select","onlyNumbersRegExp","erGyldigNorskOrgnummer","orgnr","test","er9Tall","charAt","strValue","checkNbr","mod","parseInt","getMod11","Valideringsfeil","isNaN","Number","revisor","forklaring","relevanteFelter","registrertINorge","harRevisor","harJobbetSomFrilansSiste10Mnd","harHattAnnenInntektSiste10Mnd","DatoerInputLayout","fullbredde","BEM","Knapperad","knapp","countries","useMemo","handleSubmit","visKomponent","skalViseAdvarselFisker","FISKER","skalViseRegistrertINorge","skalViseLand","skalViseOrgNr","skalViseTidsperiode","registrertILand","skalViseOppstartsdato","oppstartsdato","skalViseRevisor","skalViseKanInnhenteOpplysningerFraRevisor","skalViseformButtons","kanInnhenteOpplsyningerFraRevisor","stopPropagation","Undertittel","toLocaleLowerCase","countryOption","countryName","Hovedknapp","newValue","iconRef","other","uploadIcon","AttachmentInput","attachmentType","onFilesSelect","inputId","fileSelectHandler","fileList","validFiles","files","validExtensions","extension","pop","isFileExtensionValid","getValidFiles","Array","tabIndex","htmlFor","onDragOver","onFileDragOverHandler","onDrop","dataTransfer","onFileDropHandler","onKeyPress","inputElement","getElementById","which","accept","onFileSelect","multiple","TrashcanIkon","strokeLinejoin","strokeMiterlimit","SlettKnapp","bytesString","bytes","unitSeparator","thousandsSeparator","decimalPlaces","fixedDecimals","VedleggIkon","Attachment","showFileSize","href","filesize","AttachmentList","TransitionGroup","attachments","CSSTransition","Labeltekst","intlId","intlValue","InnsendingsType","isAttachmentWithError","innsendingsType","SEND_SENERE","AlertstripeWithCloseButton","lukknappProps","onClose","errorMessages","AttachmentOverview","deleteFailedAttachments","bind","createErrorMessagesForFailedAttachments","attachmentsWithError","multipleErrors","onFileDelete","showErrorMessage","attachmentsToRender","showAttachments","skjemanummer","mapFileToAttachment","in","unmountOnExit","hvit","AttachmentType","Skjemanummer","land","AndreInntekter","cleanupAnnenInntekt","advarselDokumentasjon","visInnhold","ANNEN_INNTEKT","ANNET","msg","rel","dispatch","frilansOppdrag","FrilansOppdrag","Pencil","version","InteractiveListElement","deleteLinkText","etikettProps","deleteButtonAriaText","editButtonAriaText","FrilansListElement","InfoBlock","padding","tagName","normalisertFrilansinfo","frilansInformasjon","cleanupFrilansinformasjon","formikProps","jobberFremdelesSomFrilans","oppstart","driverFosterhjem","ArbeidSeksjon","formProps","BackButton","hidden","mini","VenstreChevron","show","Feiloppsummering","componentDidMount","focus","listItems","link","onErrorClick","evt","ref","node","Step","previousStep","nextStep","navigate","config","renderNesteknapp","showNesteknapp","renderSendeknapp","renderTilbakeknapp","onRequestNavigateToPreviousStep","previousPath","stegForStegIndikator","otherStep","aktiv","kompakt","steg","visLabel","handleReset","isSubmitting","wasSubmitting","setSubmittingForm","FormikStep","onValidFormSubmit","getLanguageTextFromCode","LanguageToggle","language","toggleLanguage","menuLanguages","Wrapper","onSelection","_e","getLanguageCodeFromValue","handleSelection","Button","NedChevron","Menu","languageCode","MenuItem","renderMenuItem","Applikasjonsside","visTittel","SelvstendigListElement","AnnenInntektListElement","inntekt","unikeArbeidsforhold","aktiveArbeidsforhold","getUnikeArbeidsforhold","InfoToggler","onToggle","apen","EkspanderbartInnhold","animert","erApen","ariaLive","UtvidetInformasjon","apneLabel","innholdId","setApen","lukkLabel","backgroundColor","Arbeidsforhold","harValgtMinstEttGrunnlag","visharHattAnnenInntektSiste10MndSeksjon","visIngenArbeidsforholdVeileder","skalViseVeilederinfo","navigateTo","pathToFirstTilrettelegging","AnnenInntektSiste10MndHjelpeTekst","datoTidligst","BekreftCheckboksPanel","onBlur","touched","Avsnitt","Ingress","DinePersonopplysningerModal","Systemtittel","p","DinePlikterModal","DocumentIkon","Intro","dinePlikterIsOpen","toggleDinePlikter","dinePersonopplysningerIsOpen","toggleDinePersonopplysninger","Innholdstittel","konverterStringDatoerIObjektTilDate","input","inputJSON","JSON","stringify","parse","_key","MorGravidIkon","FlaskeIkon","KoffertIkon","KalenderIkon","PassIkon","OppsummeringIkon","Oppsummeringspunkt","OppsummeringBeskrivelse","innhold","TilretteleggingOppsummering","tilrett","arbForhold","getArbeidsforholdNavnFromId","startDato","strong","prosent","DuHarSvartNeiListe","harJobbetFrilans","harHattAndreInntektskilder","hattInntektSomFosterforelder","nyoppstartetFrilanser","arbeidsforholdOppsummering","frilansOppsummering","selvstendigOppsummering","InformasjonOmFrilans","EndringSelvstendig","RevisorSelvstendig","telefon","DetaljerSelvstendig","typer","toUpperCase","InformasjonOmSelvstendig","selvstendigInformasjon","InformasjonOmAndreInntekter","ArbeidsforholdOppsummering","andreInntekter","annenInn","MedlemskapOppsummering","iNorgeNeste12Mnd","iNorgeSiste12Mnd","tidlOpphold","sluttDato","senOpphold","TerminOppsummering","fnr","Oppsummering","visAdvarselOmManglendeDokumentasjon","utland","utfyltBarn","items","item","areDefined","g","fjernForkastetTilrettelegging","korrigerTilretteleggingArbeidsforhold","SVANGERSKAPSPENGER","vedleggId","StatusBoks","saksNr","border","tittelProps","SpotlightLetter","base64ToArrayBuffer","base64","binaryString","atob","Uint8Array","charCodeAt","KvitteringHeader","pdf","Sidetittel","open","URL","createObjectURL","Blob","CheckmarkIkon","KvitteringSuksess","rx","x","y","opacity","mottattDato","Termin","AddTilrettelegging","showDeleteButton","datoAvgrensninger","datoInputName","datoLabel","prosentInputName","prosentLabel","bredde","max","min","FeilSirkelFyll","focusable","InfoSirkelFyll","OkSirkelFyll","StatusIkon","PictureScanningExample","image","statusText","description","GoodScanning","filterUnits","dy","stdDeviation","strokeOpacity","KeystoneScanning","HorizontalScanning","ShadowScanning","fillOpacity","ScanningIkon","Tilrettelegging","arbeidsgiversNavn","erFrilans","erSelvstendig","erFrilansEllerSelvstendig","getInputName","valgteTilretteleggingstyper","initialValuesForTilrettelegginger","frilansRisikoErOk","visFrilansEllerSelvstendig","visVedlegg","visDel1","visDel2","visIngenTilrettelegging","visDelvisTilrettelegging","visHelTilrettelegging","del1OgDel2ErOk","visTiltakForTilrettelegging","tilretteleggingstiltakErOk","visNesteKnapp","nextStepPath","history","TILRETTELEGGING_FOR_FRILANS_ELLER_SELVSTENDIG","SKJEMA_FOR_TILRETTELEGGING_OG_OMPLASSERING","arrayHelpers","_helTil","arr","_delTil","_ingenTil","Oppholdstype","OppholdListElement","opphold","validatePeriode","today","TIDLIGERE_OPPHOLD","isAfter","SENERE_OPPHOLD","initialOpphold","getDatoAvgrensninger","visLandvelger","alleOpphold","endreLand","attributter","verdi","oppholdToRender","Utenlandsopphold","nesteknapp","Oppholdsseksjon","isNextAvailable","tilretteleggingRoutes","kvitteringRoute","SENDT","redirectToLogin","MANN","component","decorators","VisApp","apiMock","getAxiosInstance","onGet","reply","onPost"],"sourceRoot":""}